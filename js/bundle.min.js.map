{"version":3,"sources":["bundle.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","angular","constant","config","run","./../node_modules/svg.panzoom.js/dist/svg.panzoom.min","./config","./const","./controllers/app.controllers","./directives/app.directives","./filters/app.filters","./run","./services/app.services","svg.js","2","$stateProvider","$urlRouterProvider","otherwise","state","url","controller","templateUrl","3","4","window","undefined","./ui.controller","5","$scope","$document","$http","spService","_","structure","currentRoom","currentFloor","Canvas","defaultViewPos","renderFloor","floor","extend","navState","level","find","name","SVG","select","hide","get","removeClass","currentFloorNo","parseInt","replace","floorNumber","show","addClass","children","attr","stop","renderRoom","room","animate","ease","font-size","loop","resetView","then","response","element","document","querySelector","html","data","supported","each","this","node","id","type","intLevel","rooms","concat","tempRoom","push","sort","size","panZoom","zoom","x","y","orderBy","alert","6","angular-ui-router","7","8","9","provider","factory","./spFolder.service","./spRest.service","lodash","10","digestValue","val","$get","$q","getDigestValue","complete","async","method","headers","accept","contentType","d","GetContextWebInformation","FormDigestValue","getFolderItems","folderPath","query","failure","Accept","getFolders","11","getFileBuffer","file","deffered","defer","reader","FileReader","onload","resolve","target","result","onerror","reject","error","readAsArrayBuffer","promise","addListFileAttachment","listname","fileName","buffer","cleanStrFileName","substr","processData","transformRequest","X-RequestDigest","Content-Length","byteLength","deleteListFileAttachment","X-Http-Method","getListItemType","toUpperCase","substring","getListItem","getListItems","getCurrentUser","getPermissionLevels","addListItem","metadata","item","__metadata","JSON","stringify","Content-Type","updateListItem","uri","X-HTTP-Method","If-Match","etag","deleteListItem","12","inherit","parent","extra","prototype","merge","dst","forEach","arguments","obj","value","key","hasOwnProperty","ancestors","first","second","path","objectKeys","object","Object","keys","indexOf","array","Array","Number","len","from","Math","ceil","inheritParams","currentParams","newParams","$current","$to","parentParams","parents","inherited","inheritList","params","j","equalForKeys","b","k","filterByKeys","values","filtered","pick","copy","apply","slice","omit","filter","collection","callback","isArray","map","silenceUncaughtInPromise","$Resolve","$injector","VISIT_IN_PROGRESS","VISIT_DONE","NOTHING","NO_DEPENDENCIES","NO_LOCALS","NO_PARENT","when","$$promises","$$values","study","invocables","visit","visited","cycle","splice","join","isString","plan","annotate","param","pop","isResolve","isObject","invocableKeys","locals","self","done","wait","merged","$$inheritedValues","resolution","fail","reason","$$failure","invoke","invocable","onfailure","invocation","proceed","isDefined","waitParams","dep","promises","ii","$TemplateFactory","$templateCache","fromConfig","template","fromString","fromUrl","templateProvider","fromProvider","isFunction","cache","UrlMatcher","pattern","parentMatcher","addParameter","location","paramNames","test","$$UMFP","Param","quoteRegExp","string","squash","optional","surroundPattern","matchDetails","m","isSearch","regexp","segment","cfg","last","index","RegExp","caseInsensitive","placeholder","searchPlaceholder","compiled","segments","$$new","ParamSet","source","p","exec","isOptional","lastIndex","search","sourceSearch","sourcePath","strict","prefix","$$paramNames","Type","$UrlMatcherFactory","valToString","toString","~","/","valFromString","~~","~2F","getDefaultConfig","isStrictMode","isCaseInsensitive","isInjectable","flushTypeQueue","typeQueue","shift","$types","injector","def","defaultSquashPolicy","enqueue","defaultTypes","encode","decode","is","int","bool","date","getFullYear","getMonth","getDate","match","capture","Date","isNaN","valueOf","equals","toISOString","json","toJson","fromJson","any","identity","$$getDefaultValue","strictMode","compile","isMatcher","definition","definitionFn","unwrapShorthand","isShorthand","$$fn","getType","urlType","getArrayMode","arrayDefaults","arrayParamNomenclature","getSquashPolicy","getReplace","arrayMode","configuredKeys","defaultPolicy","to","defaultValue","$value","hasReplaceVal","$replace","replacement","$normalize","$asArray","dynamic","$$parent","$$keys","chain","ignore","reverse","paramset","paramValues","$$equals","paramValues1","paramValues2","equal","left","right","$$validates","rawVal","normalized","encoded","$UrlRouterProvider","$locationProvider","$urlMatcherFactory","regExpPrefix","re","interpolate","what","handleIfMatch","handler","$match","$location","$rootScope","$browser","$sniffer","appendBasePath","isHtml5","absolute","baseHref","update","evt","check","rule","handled","defaultPrevented","lastPushedUrl","rules","listen","listener","$on","interceptDeferred","sync","read","urlMatcher","options","format","$$avoidResync","href","validates","html5Mode","enabled","history","hashPrefix","slash","port","protocol","host","redirect","handlerIsString","strategies","matcher","regex","global","sticky","deferIntercept","$inject","$StateProvider","isRelative","stateName","findState","stateOrName","base","isStr","rel","split","pathLength","current","states","queueState","parentName","queue","flushQueuedChildren","queued","registerState","lastIndexOf","stateBuilder","$delegates","abstractKey","$stateParams","$state","navigable","transitionTo","isGlob","text","doesStateMatchGlob","glob","globSegments","unshift","MAX_VALUE","decorator","func","$view","$resolve","$urlRouter","handleRedirect","$broadcast","TransitionAborted","retry","$retry","TransitionFailed","retryTransition","transition","toParams","TransitionSuperseded","resolveState","paramsAreFiltered","resolveViews","viewsPromises","views","view","injectables","$template","load","globals","notify","controllerProvider","injectLocals","$$controller","$$state","$$controllerAs","controllerAs","$$resolveAs","resolveAs","all","TransitionSupersededError","TransitionPrevented","root","reload","go","relative","fromParams","fromPath","toState","hash","redirectResult","toPath","keep","toLocals","reloadState","ownParams","shouldSkipReload","resolved","entering","exiting","onExit","onEnter","includes","paramDef","lossy","nav","context","nonSearchParamsEqual","fromAndToState","notSearchParam","nonQueryParamKeys","nonQueryParams","nonQueryParamSet","reloadOnSearch","compositeName","charAt","","abstract","$ViewProvider","$templateFactory","defaults","$ViewScrollProvider","useAnchorScroll","$anchorScroll","$timeout","$element","scrollIntoView","$ViewDirective","$uiViewScroll","$interpolate","getService","service","has","getRenderer","attrs","scope","statics","enter","cb","after","leave","remove","$animate","version","minor","$animator","directive","restrict","terminal","priority","transclude","tElement","tAttrs","$transclude","cleanupLastView","previousEl","currentScope","$destroy","currentEl","$uiViewData","renderer","$$animLeave","updateView","firstTime","newScope","getUiViewName","previousLocals","latestLocals","$new","$emit","clone","animEnter","animLeave","viewAnimData","$animEnter","$animLeave","autoScrollExp","$eval","onloadExp","autoscroll","inheritedData","$ViewDirectiveFill","$compile","$controller","initial","resolveData","link","contents","$onInit","uiView","uiViewCreatedBy","parseStateRef","ref","parsed","preparsed","paramExpr","stateContext","el","stateData","getTypeInfo","isSvg","prop","isForm","nodeName","isAnchor","clickable","clickHook","button","which","ctrlKey","metaKey","shiftKey","preventDefault","ignorePreventDefaultCount","cancel","defaultOpts","$StateRefDirective","uiSrefActive","hookFn","uiSref","active","unlinkInfoFn","uiSrefOpts","$$addStateInfo","$set","$watch","on","off","$StateRefDynamicDirective","runStateRefLink","group","uiState","uiStateParams","uiStateOpts","watch","$StateRefActiveDirective","$attrs","addState","stateParams","activeClass","stateHash","createStateHash","stateInfo","activeClasses","idx","anyMatch","exactMatch","activeEqClass","className","uiSrefActiveEq","newState","deregister","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","defaultConfig","searchParams","decodePathArray","reverseString","str","unquoteDashes","allReversed","paramName","parameters","nTotal","nPath","paramVal","encodeDashes","encodeURIComponent","c","charCodeAt","isPathParam","isDefaultValue","nextSegment","isFinalPathParam","$subPattern","sub","mode","ArrayType","bindTo","callbackName","arrayWrap","arrayUnwrap","falsey","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","$arrayMode","autoinject","13","minErr","ErrorConstructor","paramPrefix","SKIP_INDEXES","templateArgs","message","shiftedIndex","toDebugString","isArrayLike","isWindow","jqLite","isNumber","iterator","isPrimitive","isBlankObject","forEachSorted","reverseParams","iteratorFn","nextUid","uid","setHashKey","h","$$hashKey","baseExtend","objs","deep","jj","src","isDate","isRegExp","cloneNode","isElement","toInt","create","noop","$","valueFn","hasCustomToString","isUndefined","getPrototypeOf","isScope","$evalAsync","isFile","isFormData","isBlob","isBoolean","isPromiseLike","isTypedArray","TYPED_ARRAY_REGEXP","isArrayBuffer","makeMap","items","nodeName_","lowercase","arrayRemove","destination","copyRecurse","copyElement","stackSource","stackDest","ngMinErr","needsRecurse","copyType","constructor","byteOffset","copied","ArrayBuffer","Uint8Array","set","o1","o2","keySet","t1","t2","getTime","createMap","array1","array2","sliceArgs","args","startIndex","bind","fn","curryArgs","toJsonReplacer","pretty","parse","timezoneToOffset","timezone","fallback","ALL_COLONS","requestedTimezoneOffset","isNumberNaN","addDateMinutes","minutes","setMinutes","getMinutes","convertTimezoneToLocal","dateTimezoneOffset","getTimezoneOffset","timezoneOffset","startingTag","empty","elemHtml","append","nodeType","NODE_TYPE_TEXT","tryDecodeURIComponent","decodeURIComponent","parseKeyValue","keyValue","splitPoint","toKeyValue","parts","arrayValue","encodeUriQuery","encodeUriSegment","pctEncodeSpaces","getNgAttribute","ngAttr","ngAttrPrefixes","getAttribute","allowAutoBootstrap","script","currentScript","createElement","origin","angularInit","bootstrap","appElement","hasAttribute","candidate","isAutoBootstrapAllowed","console","strictDi","modules","doBootstrap","tag","$provide","debugInfoEnabled","$compileProvider","createInjector","$apply","NG_ENABLE_DEBUG_INFO","NG_DEFER_BOOTSTRAP","resumeBootstrap","extraModules","resumeDeferredBootstrap","reloadWithDebugInfo","getTestability","rootElement","snake_case","separator","SNAKE_CASE_REGEXP","letter","pos","toLowerCase","bindJQuery","originalCleanData","bindJQueryFired","jqName","jq","jQuery","JQLitePrototype","isolateScope","cleanData","elems","events","elem","_data","triggerHandler","JQLite","assertArg","arg","assertArgFn","acceptArrayAnnotation","assertNotHasOwnProperty","getter","bindFnToScope","lastInstance","getBlockNodes","nodes","blockNodes","endNode","nextSibling","setupModuleLoader","ensure","$injectorMinErr","$$minErr","requires","configFn","invokeLater","insertMethod","invokeQueue","moduleInstance","invokeLaterAndSetModuleName","recipeName","factoryFunction","$$moduleName","configBlocks","runBlocks","_invokeQueue","_configBlocks","_runBlocks","animation","component","block","shallowCopy","serializeObject","seen","publishExternalAPI","uppercase","callbacks","$$counter","$$csp","csp","$$encodeUriSegment","$$encodeUriQuery","$$stringify","angularModule","$$sanitizeUri","$$SanitizeUriProvider","$CompileProvider","htmlAnchorDirective","input","inputDirective","textarea","form","formDirective","scriptDirective","selectDirective","option","optionDirective","ngBind","ngBindDirective","ngBindHtml","ngBindHtmlDirective","ngBindTemplate","ngBindTemplateDirective","ngClass","ngClassDirective","ngClassEven","ngClassEvenDirective","ngClassOdd","ngClassOddDirective","ngCloak","ngCloakDirective","ngController","ngControllerDirective","ngForm","ngFormDirective","ngHide","ngHideDirective","ngIf","ngIfDirective","ngInclude","ngIncludeDirective","ngInit","ngInitDirective","ngNonBindable","ngNonBindableDirective","ngPluralize","ngPluralizeDirective","ngRepeat","ngRepeatDirective","ngShow","ngShowDirective","ngStyle","ngStyleDirective","ngSwitch","ngSwitchDirective","ngSwitchWhen","ngSwitchWhenDirective","ngSwitchDefault","ngSwitchDefaultDirective","ngOptions","ngOptionsDirective","ngTransclude","ngTranscludeDirective","ngModel","ngModelDirective","ngList","ngListDirective","ngChange","ngChangeDirective","patternDirective","ngPattern","required","requiredDirective","ngRequired","minlength","minlengthDirective","ngMinlength","maxlength","maxlengthDirective","ngMaxlength","ngValue","ngValueDirective","ngModelOptions","ngModelOptionsDirective","ngIncludeFillContentDirective","ngAttributeAliasDirectives","ngEventDirectives","$AnchorScrollProvider","$AnimateProvider","$animateCss","$CoreAnimateCssProvider","$$animateJs","$$CoreAnimateJsProvider","$$animateQueue","$$CoreAnimateQueueProvider","$$AnimateRunner","$$AnimateRunnerFactoryProvider","$$animateAsyncRun","$$AnimateAsyncRunFactoryProvider","$BrowserProvider","$cacheFactory","$CacheFactoryProvider","$ControllerProvider","$DocumentProvider","$$isDocumentHidden","$$IsDocumentHiddenProvider","$exceptionHandler","$ExceptionHandlerProvider","$filter","$FilterProvider","$$forceReflow","$$ForceReflowProvider","$InterpolateProvider","$interval","$IntervalProvider","$HttpProvider","$httpParamSerializer","$HttpParamSerializerProvider","$httpParamSerializerJQLike","$HttpParamSerializerJQLikeProvider","$httpBackend","$HttpBackendProvider","$xhrFactory","$xhrFactoryProvider","$jsonpCallbacks","$jsonpCallbacksProvider","$LocationProvider","$log","$LogProvider","$parse","$ParseProvider","$RootScopeProvider","$QProvider","$$q","$$QProvider","$sce","$SceProvider","$sceDelegate","$SceDelegateProvider","$SnifferProvider","$TemplateCacheProvider","$templateRequest","$TemplateRequestProvider","$$testability","$$TestabilityProvider","$TimeoutProvider","$window","$WindowProvider","$$rAF","$$RAFProvider","$$jqLite","$$jqLiteProvider","$$Map","$$MapProvider","$$cookieReader","$$CookieReaderProvider","jqNextId","jqId","cssKebabToCamel","kebabToCamel","MS_HACK_REGEXP","fnCamelCaseReplace","DASH_LOWERCASE_REGEXP","jqLiteIsTextNode","HTML_REGEXP","jqLiteAcceptsData","NODE_TYPE_ELEMENT","NODE_TYPE_DOCUMENT","jqLiteHasData","jqCache","ng339","jqLiteCleanData","jqLiteRemoveData","jqLiteBuildFragment","tmp","wrap","fragment","createDocumentFragment","createTextNode","appendChild","TAG_NAME_REGEXP","wrapMap","_default","innerHTML","XHTML_TAG_REGEXP","lastChild","childNodes","firstChild","textContent","jqLiteParseHTML","SINGLE_TAG_REGEXP","jqLiteWrapNode","wrapper","parentNode","replaceChild","argIsString","trim","jqLiteMinErr","jqLiteAddNodes","jqLiteReady","jqLiteClone","jqLiteDealoc","onlyDescendants","querySelectorAll","descendants","jqLiteOff","unsupported","expandoStore","jqLiteExpandoStore","handle","removeHandler","listenerFns","removeEventListener","MOUSE_EVENT_MAP","expandoId","createIfNecessary","jqLiteData","isSimpleSetter","isSimpleGetter","massGetter","jqLiteHasClass","selector","jqLiteRemoveClass","cssClasses","setAttribute","cssClass","jqLiteAddClass","existingClasses","elements","jqLiteController","jqLiteInheritedData","documentElement","names","NODE_TYPE_DOCUMENT_FRAGMENT","jqLiteEmpty","removeChild","jqLiteRemove","keepData","jqLiteDocumentLoaded","action","win","readyState","setTimeout","trigger","addEventListener","getBooleanAttrName","booleanAttr","BOOLEAN_ATTR","BOOLEAN_ELEMENTS","getAliasedAttrName","ALIASED_ATTR","createEventHandler","eventHandler","event","isDefaultPrevented","eventFns","eventFnsLength","immediatePropagationStopped","originalStopImmediatePropagation","stopImmediatePropagation","stopPropagation","isImmediatePropagationStopped","handlerWrapper","specialHandlerWrapper","defaultHandlerWrapper","specialMouseHandlerWrapper","related","relatedTarget","jqLiteContains","hasClass","classes","hashKey","nextUidFn","objType","NgMapShim","_keys","_values","_lastKey","NaN","_lastIndex","stringifyFn","Function","extractArgs","fnText","STRIP_COMMENTS","ARROW_ARG","FN_ARGS","anonFn","argDecl","FN_ARG_SPLIT","FN_ARG","underscore","modulesToLoad","supportObject","delegate","provider_","providerInjector","instantiate","providerCache","providerSuffix","enforceReturnValue","instanceInjector","factoryFn","enforce","instanceCache","serviceName","decorFn","origProvider","orig$get","origInstance","$delegate","loadModules","moduleFn","runInvokeQueue","invokeArgs","loadedModules","stack","createInternalInjector","caller","INSTANTIATING","err","injectionArgs","$$annotate","isClass","msie","$$ngIsClass","ctor","NgMap","protoInstanceInjector","autoScrollingEnabled","disableAutoScrolling","getFirstAnchor","list","some","getYOffset","offset","scroll","yOffset","style","getComputedStyle","position","getBoundingClientRect","bottom","scrollTo","elemTop","top","scrollBy","elm","getElementById","getElementsByName","newVal","oldVal","mergeClasses","extractElementNode","ELEMENT_NODE","splitClasses","klass","prepareAnimateOptions","Browser","completeOutstandingRequest","outstandingRequestCount","outstandingRequestCallbacks","getHash","cacheStateAndFireUrlChange","pendingLocation","fireStateOrUrlChange","cacheState","cachedState","getCurrentState","lastCachedState","lastHistoryState","prevLastHistoryState","lastBrowserUrl","urlChangeListeners","clearTimeout","pendingDeferIds","isMock","$$completeOutstandingRequest","$$incOutstandingRequestCount","notifyWhenNoOutstandingRequests","baseElement","sameState","sameBase","stripHash","urlChangeInit","onUrlChange","$$applicationDestroyed","$$checkUrlChange","delay","timeoutId","deferId","cacheFactory","cacheId","refresh","entry","freshEnd","staleEnd","nextEntry","prevEntry","caches","stats","capacity","lruHash","put","lruEntry","removeAll","destroy","info","UNINITIALIZED_VALUE","$$sanitizeUriProvider","parseIsolateBindings","directiveName","isController","LOCAL_REGEXP","bindings","scopeName","bindingCache","$compileMinErr","attrName","parseDirectiveBindings","bindToController","assertValidDirectiveName","getDirectiveRequire","REQUIRE_PREFIX_REGEXP","getDirectiveRestrict","hasDirectives","Suffix","COMMENT_DIRECTIVE_REGEXP","CLASS_DIRECTIVE_REGEXP","ALL_OR_NOTHING_ATTRS","EVENT_HANDLER_ATTR_REGEXP","registerDirective","directiveFactory","directives","makeInjectable","ddo","identifierForController","aHrefSanitizationWhitelist","imgSrcSanitizationWhitelist","preAssignBindingsEnabled","TTL","onChangesTtl","commentDirectivesEnabledConfig","commentDirectivesEnabled","cssClassDirectivesEnabledConfig","cssClassDirectivesEnabled","flushOnChangesQueue","onChangesQueue","errors","Attributes","attributesToCopy","$attr","$$element","setSpecialAttr","specialAttrHolder","attributes","attribute","removeNamedItem","setNamedItem","safeAddClass","$compileNodes","transcludeFn","maxPriority","ignoreDirective","previousCompileContext","compositeLinkFn","compileNodes","$$addScopeClass","namespace","cloneConnectFn","needsNewScope","$parent","parentBoundTranscludeFn","transcludeControllers","futureParentElement","$$boundTransclude","detectNamespaceForChildElements","$linkNode","wrapTemplate","controllerName","instance","$$addScopeInfo","parentElement","nodeList","$rootElement","nodeLinkFn","childLinkFn","childScope","childBoundTranscludeFn","stableNodeList","nodeLinkFnFound","nodeListLength","linkFns","transcludeOnThisElement","createBoundTranscludeFn","templateOnThisElement","linkFnFound","notLiveList","mergeConsecutiveTextNodes","collectDirectives","applyDirectivesToNode","sibling","nodeValue","previousBoundTranscludeFn","boundTranscludeFn","transcludedScope","cloneFn","controllers","containingScope","$$transcluded","boundSlots","$$slots","slotName","attrsMap","addDirective","directiveNormalize","nName","ngAttrName","isNgAttr","nAttrs","attrStartName","attrEndName","NG_ATTR_BINDING","PREFIX_REGEXP","multiElementMatch","MULTI_ELEMENT_DIR_RE","directiveIsMultiElement","addAttrInterpolateDirective","animVal","addTextInterpolateDirective","NODE_TYPE_COMMENT","collectCommentDirectives","byPriority","groupScan","attrStart","attrEnd","depth","groupElementsLinkFnWrapper","linkFn","compilationGenerator","eager","compileNode","templateAttrs","jqCollection","originalReplaceDirective","preLinkFns","postLinkFns","addLinkFns","pre","post","newIsolateScopeDirective","$$isolateScope","cloneAndAnnotateFn","linkNode","controllersBoundTransclude","cloneAttachFn","hasElementTranscludeDirective","elementControllers","scopeToChild","slotTranscludeFn","controllerScope","scopeBindingInfo","newScopeDirective","isSlotFilled","controllerDirectives","setupControllers","templateDirective","$$originalDirective","$$isolateBindings","initializeDirectiveBindings","removeWatches","controllerDirective","$$bindings","bindingInfo","controllerResult","getControllers","controllerInstance","$onChanges","initialChanges","$doCheck","$onDestroy","invokeLinkFn","$postLink","directiveValue","terminalPriority","nonTlbTranscludeDirective","hasTranscludeDirective","hasTemplate","$compileNode","replaceDirective","childTranscludeFn","didScanForMultipleTransclusion","mightHaveMultipleTransclusionError","$$start","$$end","assertNoDuplicate","$$tlb","candidateDirective","scanningIndex","$$createComment","replaceWith","$$parentNode","slots","slotMap","filledSlots","elementSelector","filled","$$newScope","denormalizeTemplate","removeComments","templateNamespace","newTemplateAttrs","templateDirectives","unprocessedDirectives","markDirectiveScope","mergeTemplateAttributes","compileTemplateUrl","max","inheritType","dataName","property","controllerKey","tDirectives","startAttrName","endAttrName","multiElement","srcAttr","dstAttr","afterTemplateNodeLinkFn","afterTemplateChildLinkFn","linkQueue","beforeTemplateCompileNode","origAsyncDirective","derivedSyncDirective","content","tempTemplateAttrs","beforeTemplateLinkNode","linkRootElement","$$destroyed","oldClasses","catch","ignoreChildLinkFn","diff","previousDirective","wrapModuleNameIfDefined","moduleName","interpolateFn","templateNode","templateNodeParent","hasCompileParent","$$addBindingClass","$$addBindingInfo","expressions","getTrustedContext","attrNormalizedName","HTML","RESOURCE_URL","trustedContext","mustHaveExpression","allOrNothing","$$observers","newValue","$$inter","$$scope","oldValue","$updateClass","elementsToRemove","newNode","firstElementToRemove","removeCount","j2","hasData","annotation","recordChanges","currentValue","previousValue","$$postDigest","changes","triggerOnChangesHook","SimpleChange","removeWatchCollection","lastValue","parentGet","parentSet","compare","removeWatch","$observe","_UNINITIALIZED_VALUE","literal","assign","parentValueWatch","parentValue","$watchCollection","deepWatch","initialValue","SIMPLE_ATTR_NAME","$addClass","classVal","$removeClass","newClasses","toAdd","tokenDifference","toRemove","writeAttr","booleanKey","aliasedKey","observer","trimmedSrcset","srcPattern","rawUris","nbrUrisWith2parts","innerIdx","lastTuple","removeAttr","listeners","startSymbol","endSymbol","binding","isolated","noTemplate","comment","createComment","previous","SPECIAL_CHARS_REGEXP","str1","str2","tokens1","tokens2","outer","token","jqNodes","ident","CNTRL_REG","register","allowGlobals","addIdentifier","identifier","expression","later","$controllerMinErr","controllerPrototype","changeListener","hidden","doc","exception","cause","serializeValue","v","serialize","toSerialize","topLevel","defaultHttpResponseTransform","tempData","JSON_PROTECTION_PREFIX","APPLICATION_JSON","isJsonLike","jsonStart","JSON_START","JSON_ENDS","parseHeaders","fillInParsed","line","headerVal","headerKey","headersGetter","headersObj","transformData","status","fns","isSuccess","transformResponse","common","CONTENT_TYPE_APPLICATION_JSON","patch","xsrfCookieName","xsrfHeaderName","paramSerializer","jsonpCallbackParam","useApplyAsync","interceptorFactories","interceptors","requestConfig","chainInterceptors","thenFn","rejectFn","executeHeaderFns","headerContent","processedHeaders","headerFn","header","mergeHeaders","defHeaderName","lowercaseDefHeaderName","reqHeaderName","defHeaders","reqHeaders","defaultHeadersIteration","serverRequest","reqData","withCredentials","sendReq","resp","requestInterceptors","responseInterceptors","reversedInterceptors","interceptor","request","requestError","responseError","finally","createShortMethods","createShortMethodsWithData","createApplyHandlers","eventHandlers","applyHandlers","callEventHandler","$applyAsync","$$phase","headersString","statusText","resolveHttpPromise","resolvePromise","deferred","resolvePromiseWithResult","removePendingReq","pendingRequests","cachedResp","isJsonp","getTrustedResourceUrl","buildUrl","sanitizeJsonpCallbackParam","defaultCache","xsrfValue","urlIsSameOrigin","timeout","responseType","uploadEventHandlers","serializedParams","$httpMinErr","callbackParamRegex","interceptorFactory","XMLHttpRequest","createHttpBackend","createXhr","$browserDefer","rawDocument","jsonpReq","callbackPath","body","wasCalled","timeoutRequest","jsonpDone","xhr","abort","completeRequest","createCallback","getResponse","removeCallback","open","setRequestHeader","responseText","urlResolve","getAllResponseHeaders","onabort","ontimeout","upload","send","escape","ch","unescapeText","escapedStartRegexp","escapedEndRegexp","constantWatchDelegate","objectEquality","constantInterp","unwatch","parseStringifyInterceptor","getValue","$interpolateMinErr","interr","unescapedText","exp","$$watchDelegate","endIndex","parseFns","textLength","expressionPositions","startSymbolLength","endSymbolLength","throwNoconcat","compute","getTrusted","$watchGroup","oldValues","currValue","interval","count","invokeApply","hasParams","iteration","setInterval","clearInterval","skipApply","$$intervalId","intervals","encodePath","parseAbsoluteUrl","absoluteUrl","locationObj","parsedUrl","$$protocol","$$host","hostname","$$port","DEFAULT_PORTS","parseAppUrl","DOUBLE_SLASH_REGEX","$locationMinErr","prefixed","$$path","pathname","$$search","$$hash","startsWith","stripBaseUrl","trimEmptyHash","stripFile","serverBase","LocationHtml5Url","appBase","appBaseNoFile","basePrefix","$$html5","$$parse","pathUrl","$$compose","$$url","$$absUrl","$$urlUpdatedByLocation","$$parseLinkUrl","relHref","appUrl","prevAppUrl","rewrittenUrl","LocationHashbangUrl","removeWindowsDriveName","firstPathSegmentMatch","windowsFilePathExp","withoutHashUrl","withoutBaseUrl","LocationHashbangInHtml5Url","locationGetter","locationGetterSetter","preprocess","requireBase","rewriteLinks","setBrowserUrlWithFallback","oldUrl","oldState","afterLocationChange","absUrl","LocationMode","initialUrl","IGNORE_URI_REGEXP","absHref","initializing","newUrl","$digest","currentReplace","$$replace","urlOrStateChanged","debug","debugEnabled","flag","formatError","sourceURL","consoleLog","logFn","log","hasApply","arg1","arg2","warn","getStringValue","ifDefined","plusFn","isStateless","filterName","findConstantAndWatchExpressions","ast","allConstants","argsToWatch","isStatelessFilter","AST","Program","expr","Literal","toWatch","UnaryExpression","argument","BinaryExpression","LogicalExpression","ConditionalExpression","alternate","consequent","Identifier","MemberExpression","computed","CallExpression","callee","AssignmentExpression","ArrayExpression","ObjectExpression","properties","ThisExpression","LocalsExpression","getInputs","lastExpression","isAssignable","assignableAST","NGValueParameter","operator","isLiteral","isConstant","ASTCompiler","astBuilder","ASTInterpreter","getValueOf","objectValueOf","identStart","identContinue","literals","true","false","null","addLiteral","literalName","literalValue","setIdentifierFns","identifierStart","identifierContinue","interceptorFn","parsedExpression","oneTime","cacheKey","lexer","Lexer","$parseOptions","parser","Parser","oneTimeLiteralWatchDelegate","oneTimeWatchDelegate","inputs","inputsWatchDelegate","addInterceptor","expressionInputDirtyCheck","oldValueOfValue","compareObjectIdentity","prettyPrintExpression","lastResult","inputExpressions","oldInputValueOf","newInputValue","oldInputValueOfValues","oldInputValues","changed","oneTimeWatch","oneTimeListener","old","isAllDefined","allDefined","watchDelegate","useInputs","regularWatch","noUnsafeEval","isIdentifierStart","isIdentifierContinue","errorOnUnhandledRejections","qFactory","nextTick","exceptionHandler","Deferred","Promise","rejectPromise","progress","notifyPromise","processQueue","pending","processScheduled","pur","queueSize","processChecks","checkQueue","toCheck","errorMessage","scheduleProcessQueue","$$reject","$qMinErr","$$resolve","doResolve","doReject","doNotify","handleCallback","resolver","callbackOutput","errback","progressBack","counter","results","race","$Q","resolveFn","TypeError","onFulfilled","onRejected","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","rafSupported","raf","timer","createChildScopeClass","ChildScope","$$watchers","$$nextSibling","$$childHead","$$childTail","$$listeners","$$listenerCount","$$watchersCount","$id","$$ChildScope","$rootScopeMinErr","lastDirtyWatch","applyAsyncId","digestTtl","destroyChildScope","$event","cleanUpScope","$$prevSibling","$root","Scope","beginPhase","phase","clearPhase","incrementWatchersCount","decrementListenerCount","initWatchVal","flushApplyAsync","applyAsyncQueue","scheduleApplyAsync","isolate","child","watchExp","watcher","eq","$$digestWatchIndex","watchExpressions","watchGroupAction","changeReactionScheduled","firstRun","newValues","deregisterFns","shouldCall","unwatchFn","$watchCollectionInterceptor","_value","newLength","bothNaN","newItem","oldItem","internalArray","oldLength","changeDetected","internalObject","$watchCollectionAction","initRun","veryOldValue","trackVeryOldValue","changeDetector","watchers","dirty","next","logIdx","asyncTask","ttl","watchLog","asyncQueuePosition","asyncQueue","traverseScopesLoop","msg","postDigestQueuePosition","postDigestQueue","eventName","$applyAsyncExpression","namedListeners","indexOfListener","targetScope","listenerArgs","$$asyncQueue","$$postDigestQueue","$$applyAsyncQueue","isImage","normalizedVal","snakeToCamel","UNDERSCORE_LOWERCASE_REGEXP","adjustMatcher","$sceMinErr","escapeForRegexp","adjustMatchers","matchers","adjustedMatchers","SCE_CONTEXTS","resourceUrlWhitelist","resourceUrlBlacklist","matchUrl","isResourceUrlAllowedByPolicy","allowed","generateHolderType","Base","holderType","trustedValue","$$unwrapTrustedValue","trustAs","Constructor","byType","maybeTrusted","trustedValueHolderBase","htmlSanitizer","CSS","URL","JS","sce","isEnabled","parseAs","enumValue","lName","eventSupport","isNw","nw","process","isChromePackagedApp","chrome","app","runtime","hasHistoryPushState","pushState","android","navigator","userAgent","boxee","bodyStyle","transitions","animations","hasEvent","divElm","httpOptions","handleRequestFn","tpl","ignoreRequestError","handleError","$templateRequestMinErr","totalPendingRequests","transformer","testability","findBindings","opt_exactMatch","getElementsByClassName","matches","dataBinding","bindingName","findModels","prefixes","attributeEquals","getLocation","setLocation","whenStable","deferreds","$$timeoutId","urlParsingNode","requestUrl","originUrl","$$CookieReader","safeGetCookie","cookie","safeDecodeURIComponent","lastCookies","lastCookieString","cookieArray","currentCookieString","filters","suffix","currencyFilter","dateFilter","filterFilter","jsonFilter","limitToFilter","lowercaseFilter","numberFilter","orderByFilter","uppercaseFilter","comparator","anyPropertyKey","predicateFn","matchAgainstAnyProp","expressionType","getTypeForFilter","createPredicateFn","shouldMatchPrimitives","actual","expected","deepCompare","dontMatchWholeObject","actualType","expectedType","expectedVal","matchAnyProperty","actualVal","$locale","formats","NUMBER_FORMATS","amount","currencySymbol","fractionSize","CURRENCY_SYM","PATTERNS","maxFrac","formatNumber","GROUP_SEP","DECIMAL_SEP","number","numStr","digits","numberOfIntegerDigits","zeros","exponent","ZERO_CHAR","MAX_DIGITS","roundNumber","parsedNumber","minFrac","fractionLen","min","roundAt","digit","carry","reduceRight","groupSep","decimalSep","isInfinity","isFinite","isZero","abs","formattedText","integerLen","decimals","reduce","groups","lgSize","gSize","negPre","negSuf","posPre","posSuf","padNumber","num","negWrap","neg","dateGetter","dateStrGetter","shortForm","standAlone","propPrefix","timeZoneGetter","zone","paddedZone","getFirstThursdayOfYear","year","dayOfWeekOnFirst","getDay","getThursdayThisWeek","datetime","weekGetter","firstThurs","thisThurs","round","ampmGetter","getHours","AMPMS","eraGetter","ERAS","longEraGetter","ERANAMES","jsonStringToDate","R_ISO8601_STR","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","ms","parseFloat","DATETIME_FORMATS","NUMBER_STRING","DATE_FORMATS_SPLIT","DATE_FORMATS","spacing","limit","begin","Infinity","sliceFn","end","processPredicates","sortPredicates","predicate","descending","objectValue","getPredicateValue","defaultCompare","v1","v2","type1","type2","value1","value2","sortPredicate","reverseOrder","compareFn","getComparisonObject","tieBreaker","predicateValues","predicates","doComparison","compareValues","ngDirective","nullFormRenameControl","control","$name","FormController","$$controls","$error","$$success","$pending","$dirty","$pristine","$valid","$invalid","$submitted","$$parentForm","nullFormCtrl","$$animate","setupValidity","$$classCache","INVALID_CLASS","VALID_CLASS","addSetValidityMethod","createAndSet","ctrl","unsetAndCleanup","unset","isObjectEmpty","cachedToggleClass","switchValue","toggleValidationCss","validationErrorKey","isValid","clazz","$setValidity","PENDING_CLASS","combinedState","stringBasedInputType","$formatters","$isEmpty","textInputType","baseInputType","composing","ev","ngTrim","$viewValue","$$hasNativeValidators","$setViewValue","deferListener","origValue","keyCode","PARTIAL_VALIDATION_TYPES","PARTIAL_VALIDATION_EVENTS","validity","VALIDITY_STATE_PROPERTY","origBadInput","badInput","origTypeMismatch","typeMismatch","$render","weekParser","isoWeek","existingDate","WEEK_REGEXP","week","hours","seconds","milliseconds","addDays","getSeconds","getMilliseconds","createDateParser","mapping","iso","ISO_DATE_REGEXP","yyyy","MM","dd","HH","mm","ss","sss","part","createDateInputType","parseDate","isValidDate","parseObservedDateValue","badInputChecker","previousDate","$options","getOption","$$parserName","$parsers","parsedDate","ngModelMinErr","ngMin","minVal","$validators","$validate","ngMax","maxVal","nativeValidation","numberFormatterParser","NUMBER_REGEXP","parseNumberAttrVal","isNumberInteger","countDecimals","numString","decimalSymbolIndex","isValidForStep","viewValue","stepBase","step","isNonIntegerValue","isNonIntegerStepBase","isNonIntegerStep","valueDecimals","stepBaseDecimals","stepDecimals","decimalCount","multiplier","pow","numberInputType","ngStep","stepVal","modelValue","rangeInputType","setInitialValueAndObserver","htmlAttrName","changeFn","minChange","$modelValue","supportsRange","elVal","maxChange","stepChange","hasMinAttr","hasMaxAttr","hasStepAttr","originalRender","rangeUnderflow","rangeOverflow","stepMismatch","urlInputType","URL_REGEXP","emailInputType","email","EMAIL_REGEXP","radioInputType","doTrim","checked","parseConstantExpr","parseFn","checkboxInputType","trueValue","ngTrueValue","falseValue","ngFalseValue","classDirective","arrayDifference","classString","toClassString","classValue","toFlatValue","flatValue","hasUndefined","indexWatchExpression","addClasses","digestClassCounts","removeClasses","updateClasses","oldClassString","newClassString","oldClassArray","newClassArray","toRemoveArray","toAddArray","toRemoveString","toAddString","classArray","classesToUpdate","classCounts","ngClassIndexWatchAction","newModulo","oldModulo","ngClassOneTimeWatchAction","newClassValue","ngClassWatchAction","isOneTime","watchInterceptor","watchExpression","watchAction","$index","NgModelController","$$rawModelValue","$asyncValidators","$viewChangeListeners","$untouched","$touched","defaultModelOptions","$$parsedNgModel","$$parsedNgModelAssign","$$ngModelGet","$$ngModelSet","$$pendingDebounce","$$parserValid","$$currentValidationRunId","$$attr","$$timeout","$$exceptionHandler","setupModelWatcher","formatters","$$updateEmptyClasses","$$lastCommittedViewValue","$$runValidators","ModelOptions","$$options","REGEX_STRING_REGEXP","manualLowercase","String","fromCharCode","manualUppercase","documentMode","ngCspElement","ngCspAttribute","noInlineStyle","name_","NODE_TYPE_ATTRIBUTE","full","major","dot","codeName","expando","mouseleave","mouseenter","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","Node","contains","compareDocumentPosition","ready","removeData","removeAttribute","css","ret","lowercasedName","isBooleanAttr","getText","$dv","multiple","selected","nodeCount","types","addHandler","noEventListener","one","onFn","replaceNode","insertBefore","contentDocument","prepend","wrapNode","detach","newElement","toggleClass","condition","classCondition","nextElementSibling","getElementsByTagName","extraParameters","dummyEvent","eventFnsCopy","handlerArgs","arg3","unbind","nanKey","_idx","_transformKey","delete","$animateMinErr","NG_ANIMATE_CLASSNAME","postDigestElements","updateData","handleCSSClassChanges","existing","addRemoveClassesPostDigest","add","classesAdded","classesRemoved","pin","domOperation","runner","$$registeredAnimations","classNameFilter","$$classNameFilter","reservedRegex","domInsert","afterElement","afterNode","previousElementSibling","move","addclass","setClass","tempClasses","waitForTick","waitQueue","passed","AnimateRunner","setHost","rafTick","timeoutTick","_doneCallbacks","_tick","_state","INITIAL_STATE","DONE_PENDING_STATE","DONE_COMPLETE_STATE","runners","onProgress","getPromise","resolveHandler","rejectHandler","pause","resume","_resolve","initialOptions","applyAnimationContents","closed","$$prepared","cleanupStyles","start","isFirstChange","domNode","offsetWidth","[","{","callbackId","called","callbackMap","PATH_MATCH","http","https","ftp","locationPrototype","paramValue","Location","$parseMinErr","OPERATORS","ESCAPE","'","\"","lex","tokens","readString","peek","readNumber","peekMultichar","readIdent","isWhitespace","ch2","ch3","op1","op2","op3","throwError","chars","codePointAt","isValidIdentifierStart","isValidIdentifierContinue","cp","cp1","cp2","isExpOperator","colStr","peekCh","quote","rawString","hex","rep","ExpressionStatement","Property","program","expressionStatement","expect","filterChain","assignment","ternary","logicalOR","consume","logicalAND","equality","relational","additive","multiplicative","unary","primary","arrayDeclaration","selfReferential","parseArguments","baseExpression","peekToken","kind","e1","e2","e3","e4","peekAhead","$locals","nextId","vars","own","assignable","stage","computing","recurse","return_","generateFunction","fnKey","intoId","watchId","fnString","USE","STRICT","filterPrefix","watchFns","varsPrefix","section","nameId","recursionFn","skipWatchIdCheck","if_","lazyAssign","computedMember","lazyRecurse","plus","not","getHasOwnProperty","isNull","nonComputedMember","notNull","member","SAFE_IDENTIFIER","UNSAFE_CHARACTERS","stringEscapeFn","stringEscapeRegex","skip","init","rhs","lhs","unary+","unary-","unary!","binary+","binary-","binary*","binary/","binary%","binary===","binary!==","binary==","binary!=","binary<","binary>","binary<=","binary>=","binary&&","binary||","ternary?:","astCompiler","yy","MMMM","MMM","M","LLLL","H","hh","EEEE","EEE","Z","ww","w","G","GG","GGG","GGGG","xlinkHref","propName","defaultLinkFn","htmlAttr","$addControl","$$renameControl","$removeControl","$setDirty","$setPristine","$setSubmitted","SUBMITTED_CLASS","$rollbackViewValue","$commitViewValue","newName","oldName","PRISTINE_CLASS","DIRTY_CLASS","$setUntouched","formDirectiveFactory","isNgForm","getSetter","formElement","nameAttr","ctrls","handleFormSubmission","parentFormCtrl","setter","DATE_REGEXP","DATETIMELOCAL_REGEXP","MONTH_REGEXP","TIME_REGEXP","inputType","datetime-local","time","month","radio","range","checkbox","submit","reset","CONSTANT_VALUE_REGEXP","updateElementValue","propValue","tplAttr","templateElement","ngBindHtmlGetter","ngBindHtmlWatch","getTrustedHtml","forceAsyncEvents","blur","focus","previousElements","srcExp","previousElement","currentElement","changeCounter","cleanupLastIncludeContent","afterAnimation","thisChangeId","trimValues","UNTOUCHED_CLASS","TOUCHED_CLASS","EMPTY_CLASS","NOT_EMPTY_CLASS","$$initGetterSetters","invokeModelGetter","invokeModelSetter","$$$p","$setTouched","prevValid","prevModelValue","allowInvalid","that","allValid","$$writeModelToScope","doneCallback","processParseErrors","errorKey","setValidity","processSyncValidators","syncValidatorsValid","validator","Boolean","processAsyncValidators","validatorPromises","validationDone","localValidationRunId","$$parseAndValidate","writeToModelIfNeeded","$$debounceViewValueCommit","debounceDelay","$overrideModelOptions","createChild","modelCtrl","formCtrl","optionsCtrl","setTouched","DEFAULT_REGEXP","inheritAll","updateOnDefault","updateOn","debounce","getterSetter","NgModelOptionsController","$$attrs","parentOptions","parentCtrl","modelOptionsDefinition","ngOptionsMinErr","NG_OPTIONS_REGEXP","parseOptionsExpression","optionsExp","selectElement","Option","selectValue","label","disabled","getOptionValuesKeys","optionValues","optionValuesKeys","keyName","itemKey","valueName","selectAs","trackBy","selectAsFn","viewValueFn","trackByFn","getTrackByValueFn","getTrackByValue","getLocals","displayFn","groupByFn","disableWhenFn","valuesFn","getWatchables","watchedArray","optionValuesLength","disableWhen","getOptions","optionItems","selectValueMap","optionItem","getOptionFromViewValue","getViewValueFromOption","ngOptionsPostLink","addOptionElement","optionElement","optionTemplate","updateOptionElement","getAndUpdateSelectedOption","updateOptions","selectCtrl","readValue","groupElementMap","providedEmptyOption","emptyOption","groupElement","optGroupTemplate","listFragment","ngModelCtrl","nextValue","isNotPrimitive","hasEmptyOption","unknownOption","generateUnknownOptionValue","writeValue","selectedOptions","selectedValues","selections","selectedOption","removeUnknownOption","unselectEmptyOption","selectEmptyOption","updateUnknownOption","renderUnknownOption","registerOption","optionScope","optionEl","BRACE","IS_WHEN","updateElementText","newText","lastCount","numberExp","whenExp","whens","whensExpFns","braceReplacement","watchRemover","attributeName","tmpMatch","whenKey","countIsNaN","pluralCat","whenExpFn","NG_REMOVED","ngRepeatMinErr","updateScope","valueIdentifier","keyIdentifier","arrayLength","$first","$last","$middle","$odd","$even","getBlockStart","getBlockEnd","ngRepeatEndComment","aliasAs","trackByExp","trackByExpGetter","trackByIdExpFn","trackByIdArrayFn","trackByIdObjFn","hashFnLocals","lastBlockMap","nextNode","collectionLength","trackById","trackByIdFn","collectionKeys","nextBlockOrder","previousNode","nextBlockMap","blockKey","NG_HIDE_CLASS","NG_HIDE_IN_PROGRESS_CLASS","newStyles","oldStyles","cases","ngSwitchController","watchExpr","selectedTranscludes","selectedElements","previousLeaveAnimations","selectedScopes","spliceFactory","selectedTransclude","caseElement","selectedScope","anchor","ngSwitchWhenSeparator","whenCase","ngTranscludeMinErr","fallbackLinkFn","ngTranscludeCloneAttachFn","notWhitespace","useFallbackContent","ngTranscludeSlot","noopNgModelController","SelectController","scheduleRender","renderScheduled","scheduleViewValueUpdate","renderAfter","updateScheduled","setOptionAsSelected","optionsMap","unknownVal","realVal","hasOption","currentlySelectedOption","selectedIndex","hashedVal","addOption","removeOption","optionAttrs","interpolateValueFn","interpolateTextFn","removal","previouslySelected","removeValue","selectPreLink","lastView","lastViewRef","selectPostLink","selectCtrlName","patternExp","intVal","getDecimals","getVF","opt_precision","PLURAL_CATEGORY","ZERO","ONE","TWO","FEW","MANY","OTHER","DAY","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","STANDALONEMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","minInt","localeID","vf","head","14","./angular","15","addMapEntry","pair","addSetEntry","thisArg","arrayAggregator","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","props","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","escapeStringChar","chr","stringEscapes","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","mapToArray","overArg","transform","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","nodeUtil","nodeIsArrayBuffer","nodeIsDate","nodeIsMap","isMap","nodeIsRegExp","nodeIsSet","isSet","nodeIsTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","dir","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","iterIndex","Hash","entries","clear","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","defineProperty","configurable","enumerable","writable","baseAt","paths","lower","upper","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","baseDifference","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","maxLength","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","baseUnset","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","arrayBuffer","cloneDataView","dataView","cloneMap","cloneFunc","cloneRegExp","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","Ctor","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","createOver","arrayFunc","createPadding","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","proto","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","tap","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","negate","sample","sampleSize","shuffle","before","curry","curryRight","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","flush","debounced","isInvoking","flip","memoized","Cache","once","rest","spread","throttle","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMatch","isMatchWith","isNative","isMaskable","isNil","objectCtorString","isSafeInteger","isWeakMap","isWeakSet","symIterator","sign","remainder","isBinary","toSafeInteger","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","endsWith","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","reDelimiters","evaluate","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","newEnd","unescape","cond","conforms","defaultTo","matchesProperty","mixin","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","uniqueId","idCounter","maxBy","mean","meanBy","minBy","sum","sumBy","arrayProto","funcProto","coreJsData","IE_PROTO","Buffer","Symbol","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ctorString","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplicand","subtract","minuend","subtrahend","entriesIn","extendWith","eachRight","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","define","amd","16","pathRegReplace","dots","array_clone","arr","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","g","fullHex","compToHex","comp","proportionalSize","width","height","box","bbox","deltaTransformPoint","matrix","arrayToMatrix","parseMatrix","Matrix","ensureCentre","cx","cy","arrayToString","il","assignNewId","SVGElement","adopt","eid","fullBox","x2","y2","idFromReference","Doc","draw","prepare","ns","xmlns","xlink","svgjs","createElementNS","createSVGRect","did","methods","invent","construct","Container","Nested","Gradient","Element","defs","poly","polyline","native","numberAndUnit","rgb","whitespace","isHex","isRgb","isCss","isBlank","isPercent","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","utils","radians","PI","degrees","filterSVGElements","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","stroke","opacity","rx","ry","stop-opacity","stop-color","font-family","text-anchor","Color","color","toHex","toRgb","brightness","morph","isColor","lastDestination","settle","PointArray","toLine","x1","y1","points","getBBox","pathHandlers","p0","L","V","C","S","Q","T","A","mlhvqtcsa","jl","PathArray","equalCommands","pathArray","sourceArray","destinationArray","paramCnt","prev","curr","Point","unit","minus","_stroke","_event","dom","center","withData","writeDataToDom","removeElement","addTo","putIn","inside","visible","svg","well","Parent","lines","easing","-","<>","cos","sin","MorphObj","Situation","reversed","reversing","duration","finish","loops","styles","FX","_target","situations","situation","paused","lastPos","absPos","_speed","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","startCurrent","initAnimations","dequeue","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","atStart","isAbsPos","durDivSpd","speed","play","easeIt","detail","_callStart","during","eased","afterAll","duringAll","ignoreTime","absPosInt","lastLoop","fire","fx","eachAt","undo","extract","isEased","real","Text","plot","viewbox","ViewBox","Stop","Box","xMin","xMax","yMin","yMax","pts","BBox","Exception","topParent","Shape","clientLeft","clientTop","clientWidth","clientHeight","tbox","rbox","RBox","addOffset","pageXOffset","pageYOffset","screenCTM","inverse","abcdef","px","py","skewX","atan2","transformedX","sqrt","transformedY","skewY","scaleX","scaleY","rotation","translate","scale","around","rotate","skew","tan","createSVGMatrix","ctm","getCTM","rect","getScreenCTM","point","createSVGPoint","matrixTransform","image","Image","setAttributeNS","rebuild","Rotate","Scale","Skew","Translate","untransform","kv","toParent","pCtm","toDoc","Transformation","inversed","_undo","cssText","hasChildNodes","_defs","ungroup","Defs","we","he","wm","hm","reg","offsetHeight","handlerMap","listenerId","_svgjsListenerId","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","siblings","forward","backward","front","back","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","gradient","fy","Pattern","patternUnits","spof","Bare","Use","use","Rect","Circle","circle","Ellipse","ellipse","Line","Polyline","Polygon","polygon","_array","morphArray","Path","img","_loaded","ratio","_error","loaded","_rebuild","_build","oy","newLined","build","tspan","newLine","textPath","blankLineOffset","dy","plain","Tspan","dx","getComputedTextLength","TextPath","track","linkTo","Marker","marker","sugar","extension","dmove","radius","getTotalLength","pointAt","getPointAtLength","font","members","remember","memory","forget","_memory","bubbles","createEvent","initCustomEvent","lastTime","vendors","currTime","timeToCall","17","touches","clientX","clientY","zoomFactor","deltaY","passive","getPropertyValue"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n// var $ = require(\"jquery\");\nvar angular = require(\"angular\");\nrequire(\"svg.js\");\nrequire(\"./../node_modules/svg.panzoom.js/dist/svg.panzoom.min\");\n\nangular.module('app', [\n\trequire(\"./controllers/app.controllers\"),\n\trequire(\"./services/app.services\"),\n\trequire(\"./directives/app.directives\"),\n\trequire(\"./filters/app.filters\")\n])\n.constant(\"CONST\", require(\"./const\"))\n.config(require(\"./config\"))\n.run(require(\"./run\"));\n},{\"./../node_modules/svg.panzoom.js/dist/svg.panzoom.min\":17,\"./config\":2,\"./const\":3,\"./controllers/app.controllers\":4,\"./directives/app.directives\":6,\"./filters/app.filters\":7,\"./run\":8,\"./services/app.services\":9,\"angular\":14,\"svg.js\":16}],2:[function(require,module,exports){\n// @ngInject\nmodule.exports = function($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise(\"/building\");\n\n    $stateProvider\n        .state(\"buildings\", {\n            url: \"/:buildingName\",\n            controller: \"ui.controller\",\n            templateUrl: \"views/building.html\"\n        });\n};\n\n},{}],3:[function(require,module,exports){\nmodule.exports = {\n};\n},{}],4:[function(require,module,exports){\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports) {\n    module.exports = 'app.controllers';\n}\n\n(function(window, angular, undefined) {\n    // @ngInject\n    angular.module(\"app.controllers\", [])\n        .controller(\"ui.controller\", require(\"./ui.controller\"))\n\n})(window, window.angular);\n\n},{\"./ui.controller\":5}],5:[function(require,module,exports){\n// @ngInject\nmodule.exports = function($scope, $document, $http, spService, _) {\n\n    $scope.structure = [];\n\n    var currentRoom = null;\n    var currentFloor = null;\n    var Canvas = null;\n    var defaultViewPos = \"39.99998474121094 -15.999992370605469 381.01551818847656 400.0000534057617\";\n\n    $scope.renderFloor = function(floor) {\n        if (floor) {\n\n\n            angular.extend($scope.navState, {\n                level: _.find($scope.structure, function(level) {\n                    return level.name === floor;\n                })\n            });\n\n            if (currentFloor !== floor) {\n\n\n                SVG.select(\"g.floors, g.rooms\").hide();\n\n                if (currentFloor) {\n                    SVG.get(currentFloor).removeClass(\"fade-in-top\").removeClass(\"fade-in-bottom\");\n                    var currentFloorNo = parseInt(currentFloor.replace(\"Floor_\", \"\"), 10);\n                }\n                var floorNumber = parseInt(floor.replace(\"Floor_\", \"\"), 10);\n\n                if (!currentFloor) {\n                    SVG.get(floor).show().addClass(\"fade-in-top\");\n                } else if (currentFloorNo > floorNumber) {\n                    SVG.get(floor).show().addClass(\"fade-in-top\");\n                } else if (currentFloorNo < floorNumber) {\n                    SVG.get(floor).show().addClass(\"fade-in-bottom\");\n                }\n\n                if (currentRoom) {\n                    SVG.get(currentRoom).children()[0].attr('font-size', '11px').stop();\n                    currentRoom = \"\";\n                }\n            }\n\n            if (SVG.get(floor + \"_rooms\")) {\n                if (SVG.get(floor + \"_rooms\").children().length <= 5) {\n                    SVG.select(\"g.rooms\").show();\n                }\n            }\n\n            currentFloor = floor;\n\n        }\n    };\n\n    $scope.renderRoom = function(room) {\n\n        if (room) {\n            if (currentRoom !== room) {\n                if (currentRoom) {\n                    SVG.get(currentRoom).children()[0].attr('font-size', '11px').stop();\n                }\n                currentRoom = room;\n            }\n            SVG.select(\"g.rooms\").hide();\n            SVG.get(room).show();\n            SVG.get(room).children()[0].animate({ 'ease': '-' }).attr({ 'font-size': '14px' }).loop(5, true);\n        }\n\n    };\n\n    $scope.resetView = function() {\n        Canvas.attr('viewBox', defaultViewPos);\n    };\n\n\n    $http.get(\"svgs/Floormap.svg\")\n        .then(function(response) {\n\n            angular.element(document.querySelector(\"#svg-container\")).html(response.data);\n\n            if (SVG.supported) {\n                var structure = [];\n\n                Canvas = SVG.get(\"Building\").each(function(i, children) {\n\n                        if (this.node.id && this.type === \"g\") {\n\n                            SVG.get(this).addClass(\"floors\");\n\n                            var floor = {\n                                name: this.node.id,\n                                intLevel: parseInt((this.node.id).replace(\"Floor_\", \"\"), 10),\n                                rooms: []\n                            };\n\n                            var rooms = this.node.id.concat(\"_rooms\");\n\n                            //check if rooms exist in that level\n                            if (SVG.get(rooms)) {\n\n                                //will use this to sort the room\n                                var tempRoom = [];\n\n                                SVG.get(rooms).each(function(i, children) {\n                                    if (this.node.id && this.type === \"g\") {\n                                        SVG.get(this).addClass(\"rooms\");\n                                        tempRoom.push(this.node.id);\n                                    }\n\n                                });\n\n                                tempRoom.sort();\n\n                                for (var i = 0; i < tempRoom.length; i++) {\n                                    floor.rooms.push({\n                                        name: tempRoom[i]\n                                    });\n                                }\n\n                            }\n\n                            structure.push(floor);\n\n                        }\n\n                    })\n                    .size(800, 600)\n                    .attr('viewBox', defaultViewPos)\n                    .panZoom()\n                    .zoom(1.5, {x:0,y:0});\n\n                SVG.select(\"g.floors, g.rooms\").hide();\n\n\n                $scope.structure = _.orderBy(structure, ['intLevel'], ['desc']);\n\n                $scope.navState = {\n                    level: $scope.structure[$scope.structure.length - 1]\n                }\n\n                $scope.renderFloor($scope.navState.level.name);\n\n\n            } else {\n                alert(\"not supported\");\n            }\n\n        });\n\n\n};\n\n},{}],6:[function(require,module,exports){\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports) {\n    module.exports = 'app.directives';\n}\n\n(function(window, angular, undefined) {\n    // @ngInject\n    angular.module(\"app.directives\", [\n\t\trequire(\"angular-ui-router\")\n\t])\n})(window, window.angular);\n\n},{\"angular-ui-router\":12}],7:[function(require,module,exports){\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports) {\n    module.exports = 'app.filters';\n}\n\n(function(window, angular, undefined) {\n    // @ngInject\n    angular.module(\"app.filters\", [])\n    \n})(window, window.angular);\n\n},{}],8:[function(require,module,exports){\n// @ngInject\nmodule.exports = function(){\n\t\n};\n},{}],9:[function(require,module,exports){\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports) {\n    module.exports = 'app.services';\n}\n\n(function(window, angular, undefined) {\n    // @ngInject\n    angular.module(\"app.services\", [])\n        .provider(\"spService\", require(\"./spRest.service\"))\n        .provider(\"spFolder\", require(\"./spFolder.service\"))\n        .factory(\"_\", function(){\n        \treturn require(\"lodash\");\n        })\n})(window, window.angular);\n\n},{\"./spFolder.service\":10,\"./spRest.service\":11,\"lodash\":15}],10:[function(require,module,exports){\n// @ngInject\nmodule.exports = function() {\n    var digestValue = angular.element(document.querySelector(\"#__REQUESTDIGEST\")).val();\n    return {\n        $get: /*@ngInject*/ function($http, $q) {\n            return {\n                getDigestValue: function(url, complete) {\n\n                    if (digestValue != null) {\n                        complete(digestValue);\n                    } else {\n\n                        $http({\n                            url: url + \"/_api/contextinfo\",\n                            async: true,\n                            method: \"POST\",\n                            headers: {\n                                \"accept\": \"application/json;odata=verbose\",\n                                \"contentType\": \"text/xml\"\n                            }\n                        }).then(function(response) {\n                            digestValue = response.data.d.GetContextWebInformation.FormDigestValue;\n                            complete(digestValue);\n                        }, function(response) {\n                            alert(\"Cannot get digestValue.\");\n                        });\n\n                    }\n\n                },\n                getFolderItems: function(url, folderPath, query, complete, failure) {\n                    //folderpath should start with /sites/domain/foldername\n                    $http({\n                        url: url + \"/_api/web/getFolderByServerRelativeUrl('\" + folderPath + \"')/Files\" + query,\n                        method: \"GET\",\n                        headers: {\n                            \"Accept\": \"application/json; odata=verbose\"\n                        }\n                    }).then(function(response) {\n                        complete(response);\n                    }, function(response) {\n                        failure(response);\n                    });\n                },\n                getFolders: function(url, folderPath, query, complete, failure) {\n                    $http({\n                        url: url + \"/_api/web/getFolderByServerRelativeUrl('\" + folderPath + \"')/Folders\" + query,\n                        method: \"GET\",\n                        headers: {\n                            \"Accept\": \"application/json; odata=verbose\"\n                        }\n                    }).then(function(response) {\n                        complete(response);\n                    }, function(response) {\n                        failure(response);\n                    });\n                }\n            };\n\n        }\n    }\n};\n\n},{}],11:[function(require,module,exports){\n// @ngInject\nmodule.exports = function(){\n\tvar digestValue = angular.element(document.querySelector(\"#__REQUESTDIGEST\")).val();\n\treturn {\n            $get: /*@ngInject*/ function ($http, $q) {\n                return {\n                    getDigestValue: function (url, complete) {\n\n                        if (digestValue != null) {\n                            complete(digestValue);\n                        } else {\n\n                            $http({\n                                url: url + \"/_api/contextinfo\",\n                                async: true,\n                                method: \"POST\",\n                                headers: {\n                                    \"accept\": \"application/json;odata=verbose\",\n                                    \"contentType\": \"text/xml\"\n                                }\n                            }).then(function (response) {\n                                digestValue = response.data.d.GetContextWebInformation.FormDigestValue;\n                                complete(digestValue);\n                            }, function (response) {\n                                alert(\"Cannot get digestValue.\");\n                            });\n\n                        }\n\n                    },\n                    getFileBuffer: function (file) {\n                        var deffered = $q.defer();\n\n                        var reader = new FileReader();\n                        reader.onload = function (e) {\n                            deffered.resolve(e.target.result);\n                        }\n                        reader.onerror = function (e) {\n                            deffered.reject(e.target.error);\n                        }\n                        reader.readAsArrayBuffer(file);\n                        return deffered.promise;\n\n                    },\n                    addListFileAttachment: function (url, listname, id, fileName, file, complete, failure) {\n                        getDigestValue = this.getDigestValue;\n\n                        this.getFileBuffer(file).then(function (buffer) {\n\n                            //cleans the string to correct name that is acceptable on sharepoint.\n                            try {\n\t                            var cleanStrFileName = fileName.replace(/^\\.+|([|\\/&;$%:#~?^{}*'@\"<>()+,])|\\.+$/g, \"\");\n\t                            cleanStrFileName = cleanStrFileName.substr(-128);\n                            } catch(e){\n                            \tthrow Error(\"Filename was not supply\");\n                            }\n\n                            getDigestValue(url, function (digestValue) {\n                                //you can only add or delete the list item but it will be different in documents\n                                $http({\n                                    url: url + \"/_api/web/lists/GetByTitle('\" + listname + \"')/items(\" + id + \")/AttachmentFiles/add(FileName='\" + cleanStrFileName + \"')\",\n                                    method: \"POST\",\n                                    data: buffer,\n                                    processData: false,\n                                    transformRequest: function (data) {\n                                        return data;\n                                    },\n                                    headers: {\n                                        \"Accept\": \"application/json;odata=verbose\",\n                                        \"X-RequestDigest\": digestValue,\n                                        \"Content-Length\": buffer.byteLength\n                                    }\n                                }).then(function (response) {\n                                    complete(response);\n                                }, function (response) {\n                                    failure(response);\n                                });\n\n                            });\n\n                        });\n\n                    },\n                    deleteListFileAttachment: function (url, listname, id, fileName, complete, failure) {\n                        getDigestValue = this.getDigestValue;\n\n                        getDigestValue(url, function (digestValue) {\n                            $http({\n                                url: url + \"/_api/web/lists/GetByTitle('\" + listname + \"')/items(\" + id + \")/AttachmentFiles/getByFileName('\" + fileName + \"')\",\n                                method: \"POST\",\n                                headers: {\n                                    \"Accept\": \"application/json;odata=verbose\",\n                                    \"X-Http-Method\": \"DELETE\",\n                                    \"X-RequestDigest\": digestValue,\n                                }\n                            }).then(function (response) {\n                                complete(response);\n                            }, function (response) {\n                                failure(response);\n                            });\n                        });\n                    },\n                    getListItemType: function (name) {\n                        return (\"SP.Data.\" + name[0].toUpperCase() + name.substring(1) + \"ListItem\").replace(/\\s/g, \"_x0020_\");\n                    },\n                    getListItem: function (url, listname, id, query, complete, failure) {\n\n                        $http({\n                            url: url + \"/_api/web/lists/getbytitle('\" + listname + \"')/items('\" + id + \"')\" + query,\n                            method: \"GET\",\n                            headers: {\n                                \"Accept\": \"application/json; odata=verbose\"\n                            }\n                        }).then(function (response) {\n                            complete(response);\n                        }, function (response) {\n                            failure(response);\n                        });\n\n\n                    },\n                    getListItems: function (url, listname, query, complete, failure) {\n                        // Executing our items via an ajax request\n                        $http({\n                            url: url + \"/_api/web/lists/getbytitle('\" + listname + \"')/items\" + query,\n                            method: \"GET\",\n                            headers: {\n                                \"Accept\": \"application/json; odata=verbose\"\n                            }\n                        }).then(function (response) {\n                            complete(response);\n                        }, function (response) {\n                            failure(response);\n                        });\n\n                    },\n                    getCurrentUser: function (url, query, complete, failure) {\n                        $http({\n                            url: url + \"/_api/SP.UserProfiles.PeopleManager/GetMyProperties\" + query,\n                            method: \"GET\",\n                            headers: {\n                                \"Accept\": \"application/json; odata=verbose\"\n                            }\n                        }).then(function (response) {\n                            complete(response);\n                        }, function (response) {\n                            failure(response);\n                        });\n                    },\n                    getPermissionLevels: function (url, query, complete, failure) {\n                        $http({\n                            url: url + \"/_api/web/currentuser/groups\" + query,\n                            method: \"GET\",\n                            headers: {\n                                \"Accept\": \"application/json; odata=verbose\"\n                            }\n                        }).then(function (response) {\n                            complete(response);\n                        }, function (response) {\n                            failure(response);\n                        });\n                    },\n                    addListItem: function (url, listname, metadata, complete, failure) {\n                        // Prepping our update\n                        var item = angular.extend({\n                            \"__metadata\": {\n                                \"type\": this.getListItemType(listname)\n                            }\n                        }, metadata);\n\n\n                        this.getDigestValue(url, function (digestValue) {\n\n                            $http({\n                                url: url + \"/_api/web/lists/getbytitle('\" + listname + \"')/items\",\n                                method: \"POST\",\n                                data: JSON.stringify(item),\n                                headers: {\n                                    \"Content-Type\": \"application/json;odata=verbose\",\n                                    \"Accept\": \"application/json;odata=verbose\",\n                                    \"X-RequestDigest\": digestValue\n                                }\n                            }).then(function (response) {\n                                complete(response);\n                            }, function (response) {\n                                failure(response);\n                            });\n\n\n                        });\n\n\n                    },\n                    updateListItem: function (url, listname, id, metadata, complete, failure) {\n\n                        //this will update the list item on restful api on sharepoint\n                        var item = angular.extend({\n                            \"__metadata\": {\n                                \"type\": this.getListItemType(listname)\n                            }\n                        }, metadata);\n\n                        var getListItem = this.getListItem;\n\n                        this.getDigestValue(url, function (digestValue) {\n\n                            getListItem(url, listname, id, \"\", function (response) {\n\n                                $http({\n                                    url: response.data.d.__metadata.uri,\n                                    method: \"POST\",\n                                    data: JSON.stringify(item),\n                                    headers: {\n                                        \"Accept\": \"application/json;odata=verbose\",\n                                        \"Content-Type\": \"application/json;odata=verbose\",\n                                        \"X-RequestDigest\": digestValue,\n                                        \"X-HTTP-Method\": \"MERGE\",\n                                        \"If-Match\": response.data.d.__metadata.etag\n                                    }\n                                }).then(function (response) {\n                                    complete(response);\n                                }, function (response) {\n                                    failure(response);\n                                });\n\n                            }, function (response) {\n                                failure(response);\n\n                            });\n\n                        });\n\n                    },\n                    deleteListItem: function (url, listname, id, complete, failure) {\n                        // getting our item to delete, then executing a delete once it's been returned\n\n                        var getListItem = this.getListItem;\n\n                        this.getDigestValue(url, function (digestValue) {\n\n                            getListItem(url, listname, id, \"\", function (response) {\n\n                                $http({\n                                    url: response.data.d.__metadata.uri,\n                                    method: \"POST\",\n                                    headers: {\n                                        \"Accept\": \"application/json;odata=verbose\",\n                                        \"X-Http-Method\": \"DELETE\",\n                                        \"X-RequestDigest\": digestValue,\n                                        \"If-Match\": response.data.d.__metadata.etag\n                                    }\n\n                                }).then(function (response) {\n                                    complete(response);\n                                }, function (response) {\n                                    failure(response);\n                                });\n\n\n                            }, function (response) {\n                                failure(response)\n                            });\n\n\n                        });\n\n\n                    }\n                };\n\n            }\n        }\n};\n},{}],12:[function(require,module,exports){\n/**\n * State-based routing for AngularJS\n * @version v0.3.2\n * @link http://angular-ui.github.com/\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'ui.router';\n}\n\n(function (window, angular, undefined) {\n/*jshint globalstrict:true*/\n/*global angular:false*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy,\n    toJson = angular.toJson;\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, { prototype: parent }))(), extra);\n}\n\nfunction merge(dst) {\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        if (!dst.hasOwnProperty(key)) dst[key] = value;\n      });\n    }\n  });\n  return dst;\n}\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n  var path = [];\n\n  for (var n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * IE8-safe wrapper for `Object.keys()`.\n *\n * @param {Object} object A JavaScript object.\n * @return {Array} Returns the keys of the object as an array.\n */\nfunction objectKeys(object) {\n  if (Object.keys) {\n    return Object.keys(object);\n  }\n  var result = [];\n\n  forEach(object, function(val, key) {\n    result.push(key);\n  });\n  return result;\n}\n\n/**\n * IE8-safe wrapper for `Array.prototype.indexOf()`.\n *\n * @param {Array} array A JavaScript array.\n * @param {*} value A value to search the array for.\n * @return {Number} Returns the array index value of `value`, or `-1` if not present.\n */\nfunction indexOf(array, value) {\n  if (Array.prototype.indexOf) {\n    return array.indexOf(value, Number(arguments[2]) || 0);\n  }\n  var len = array.length >>> 0, from = Number(arguments[2]) || 0;\n  from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n\n  if (from < 0) from += len;\n\n  for (; from < len; from++) {\n    if (from in array && array[from] === value) return from;\n  }\n  return -1;\n}\n\n/**\n * Merges a set of parameters with all parameters inherited between the common parents of the\n * current state and a given destination state.\n *\n * @param {Object} currentParams The value of the current state parameters ($stateParams).\n * @param {Object} newParams The set of parameters which will be composited with inherited params.\n * @param {Object} $current Internal definition of object representing the current state.\n * @param {Object} $to Internal definition of object representing state to transition to.\n */\nfunction inheritParams(currentParams, newParams, $current, $to) {\n  var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n\n  for (var i in parents) {\n    if (!parents[i] || !parents[i].params) continue;\n    parentParams = objectKeys(parents[i].params);\n    if (!parentParams.length) continue;\n\n    for (var j in parentParams) {\n      if (indexOf(inheritList, parentParams[j]) >= 0) continue;\n      inheritList.push(parentParams[j]);\n      inherited[parentParams[j]] = currentParams[parentParams[j]];\n    }\n  }\n  return extend({}, inherited, newParams);\n}\n\n/**\n * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.\n *\n * @param {Object} a The first object.\n * @param {Object} b The second object.\n * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,\n *                     it defaults to the list of keys in `a`.\n * @return {Boolean} Returns `true` if the keys match, otherwise `false`.\n */\nfunction equalForKeys(a, b, keys) {\n  if (!keys) {\n    keys = [];\n    for (var n in a) keys.push(n); // Used instead of Object.keys() for IE8 compatibility\n  }\n\n  for (var i=0; i<keys.length; i++) {\n    var k = keys[i];\n    if (a[k] != b[k]) return false; // Not '===', values aren't necessarily normalized\n  }\n  return true;\n}\n\n/**\n * Returns the subset of an object, based on a list of keys.\n *\n * @param {Array} keys\n * @param {Object} values\n * @return {Boolean} Returns a subset of `values`.\n */\nfunction filterByKeys(keys, values) {\n  var filtered = {};\n\n  forEach(keys, function (name) {\n    filtered[name] = values[name];\n  });\n  return filtered;\n}\n\n// like _.indexBy\n// when you know that your index values will be unique, or you want last-one-in to win\nfunction indexBy(array, propName) {\n  var result = {};\n  forEach(array, function(item) {\n    result[item[propName]] = item;\n  });\n  return result;\n}\n\n// extracted from underscore.js\n// Return a copy of the object only containing the whitelisted properties.\nfunction pick(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  forEach(keys, function(key) {\n    if (key in obj) copy[key] = obj[key];\n  });\n  return copy;\n}\n\n// extracted from underscore.js\n// Return a copy of the object omitting the blacklisted properties.\nfunction omit(obj) {\n  var copy = {};\n  var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));\n  for (var key in obj) {\n    if (indexOf(keys, key) == -1) copy[key] = obj[key];\n  }\n  return copy;\n}\n\nfunction pluck(collection, key) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = isFunction(key) ? key(val) : val[key];\n  });\n  return result;\n}\n\nfunction filter(collection, callback) {\n  var array = isArray(collection);\n  var result = array ? [] : {};\n  forEach(collection, function(val, i) {\n    if (callback(val, i)) {\n      result[array ? result.length : i] = val;\n    }\n  });\n  return result;\n}\n\nfunction map(collection, callback) {\n  var result = isArray(collection) ? [] : {};\n\n  forEach(collection, function(val, i) {\n    result[i] = callback(val, i);\n  });\n  return result;\n}\n\n// issue #2676 #2889\nfunction silenceUncaughtInPromise (promise) {\n  return promise.then(undefined, function() {}) && promise;\n}\n\n/**\n * @ngdoc overview\n * @name ui.router.util\n *\n * @description\n * # ui.router.util sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n *\n */\nangular.module('ui.router.util', ['ng']);\n\n/**\n * @ngdoc overview\n * @name ui.router.router\n * \n * @requires ui.router.util\n *\n * @description\n * # ui.router.router sub-module\n *\n * This module is a dependency of other sub-modules. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n */\nangular.module('ui.router.router', ['ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router.state\n * \n * @requires ui.router.router\n * @requires ui.router.util\n *\n * @description\n * # ui.router.state sub-module\n *\n * This module is a dependency of the main ui.router module. Do not include this module as a dependency\n * in your angular app (use {@link ui.router} module instead).\n * \n */\nangular.module('ui.router.state', ['ui.router.router', 'ui.router.util']);\n\n/**\n * @ngdoc overview\n * @name ui.router\n *\n * @requires ui.router.state\n *\n * @description\n * # ui.router\n * \n * ## The main module for ui.router \n * There are several sub-modules included with the ui.router module, however only this module is needed\n * as a dependency within your angular app. The other modules are for organization purposes. \n *\n * The modules are:\n * * ui.router - the main \"umbrella\" module\n * * ui.router.router - \n * \n * *You'll need to include **only** this module as the dependency within your angular app.*\n * \n * <pre>\n * <!doctype html>\n * <html ng-app=\"myApp\">\n * <head>\n *   <script src=\"js/angular.js\"></script>\n *   <!-- Include the ui-router script -->\n *   <script src=\"js/angular-ui-router.min.js\"></script>\n *   <script>\n *     // ...and add 'ui.router' as a dependency\n *     var myApp = angular.module('myApp', ['ui.router']);\n *   </script>\n * </head>\n * <body>\n * </body>\n * </html>\n * </pre>\n */\nangular.module('ui.router', ['ui.router.state']);\n\nangular.module('ui.router.compat', ['ui.router']);\n\n/**\n * @ngdoc object\n * @name ui.router.util.$resolve\n *\n * @requires $q\n * @requires $injector\n *\n * @description\n * Manages resolution of (acyclic) graphs of promises.\n */\n$Resolve.$inject = ['$q', '$injector'];\nfunction $Resolve(  $q,    $injector) {\n  \n  var VISIT_IN_PROGRESS = 1,\n      VISIT_DONE = 2,\n      NOTHING = {},\n      NO_DEPENDENCIES = [],\n      NO_LOCALS = NOTHING,\n      NO_PARENT = extend($q.when(NOTHING), { $$promises: NOTHING, $$values: NOTHING });\n  \n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#study\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Studies a set of invocables that are likely to be used multiple times.\n   * <pre>\n   * $resolve.study(invocables)(locals, parent, self)\n   * </pre>\n   * is equivalent to\n   * <pre>\n   * $resolve.resolve(invocables, locals, parent, self)\n   * </pre>\n   * but the former is more efficient (in fact `resolve` just calls `study` \n   * internally).\n   *\n   * @param {object} invocables Invocable objects\n   * @return {function} a function to pass in locals, parent and self\n   */\n  this.study = function (invocables) {\n    if (!isObject(invocables)) throw new Error(\"'invocables' must be an object\");\n    var invocableKeys = objectKeys(invocables || {});\n    \n    // Perform a topological sort of invocables to build an ordered plan\n    var plan = [], cycle = [], visited = {};\n    function visit(value, key) {\n      if (visited[key] === VISIT_DONE) return;\n      \n      cycle.push(key);\n      if (visited[key] === VISIT_IN_PROGRESS) {\n        cycle.splice(0, indexOf(cycle, key));\n        throw new Error(\"Cyclic dependency: \" + cycle.join(\" -> \"));\n      }\n      visited[key] = VISIT_IN_PROGRESS;\n      \n      if (isString(value)) {\n        plan.push(key, [ function() { return $injector.get(value); }], NO_DEPENDENCIES);\n      } else {\n        var params = $injector.annotate(value);\n        forEach(params, function (param) {\n          if (param !== key && invocables.hasOwnProperty(param)) visit(invocables[param], param);\n        });\n        plan.push(key, value, params);\n      }\n      \n      cycle.pop();\n      visited[key] = VISIT_DONE;\n    }\n    forEach(invocables, visit);\n    invocables = cycle = visited = null; // plan is all that's required\n    \n    function isResolve(value) {\n      return isObject(value) && value.then && value.$$promises;\n    }\n    \n    return function (locals, parent, self) {\n      if (isResolve(locals) && self === undefined) {\n        self = parent; parent = locals; locals = null;\n      }\n      if (!locals) locals = NO_LOCALS;\n      else if (!isObject(locals)) {\n        throw new Error(\"'locals' must be an object\");\n      }       \n      if (!parent) parent = NO_PARENT;\n      else if (!isResolve(parent)) {\n        throw new Error(\"'parent' must be a promise returned by $resolve.resolve()\");\n      }\n      \n      // To complete the overall resolution, we have to wait for the parent\n      // promise and for the promise for each invokable in our plan.\n      var resolution = $q.defer(),\n          result = resolution.promise,\n          promises = result.$$promises = {},\n          values = extend({}, locals),\n          wait = 1 + plan.length/3,\n          merged = false;\n          \n      function done() {\n        // Merge parent values we haven't got yet and publish our own $$values\n        if (!--wait) {\n          if (!merged) merge(values, parent.$$values); \n          result.$$values = values;\n          result.$$promises = result.$$promises || true; // keep for isResolve()\n          delete result.$$inheritedValues;\n          resolution.resolve(values);\n        }\n      }\n      \n      function fail(reason) {\n        result.$$failure = reason;\n        resolution.reject(reason);\n      }\n\n      // Short-circuit if parent has already failed\n      if (isDefined(parent.$$failure)) {\n        fail(parent.$$failure);\n        return result;\n      }\n      \n      if (parent.$$inheritedValues) {\n        merge(values, omit(parent.$$inheritedValues, invocableKeys));\n      }\n\n      // Merge parent values if the parent has already resolved, or merge\n      // parent promises and wait if the parent resolve is still in progress.\n      extend(promises, parent.$$promises);\n      if (parent.$$values) {\n        merged = merge(values, omit(parent.$$values, invocableKeys));\n        result.$$inheritedValues = omit(parent.$$values, invocableKeys);\n        done();\n      } else {\n        if (parent.$$inheritedValues) {\n          result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);\n        }        \n        parent.then(done, fail);\n      }\n      \n      // Process each invocable in the plan, but ignore any where a local of the same name exists.\n      for (var i=0, ii=plan.length; i<ii; i+=3) {\n        if (locals.hasOwnProperty(plan[i])) done();\n        else invoke(plan[i], plan[i+1], plan[i+2]);\n      }\n      \n      function invoke(key, invocable, params) {\n        // Create a deferred for this invocation. Failures will propagate to the resolution as well.\n        var invocation = $q.defer(), waitParams = 0;\n        function onfailure(reason) {\n          invocation.reject(reason);\n          fail(reason);\n        }\n        // Wait for any parameter that we have a promise for (either from parent or from this\n        // resolve; in that case study() will have made sure it's ordered before us in the plan).\n        forEach(params, function (dep) {\n          if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {\n            waitParams++;\n            promises[dep].then(function (result) {\n              values[dep] = result;\n              if (!(--waitParams)) proceed();\n            }, onfailure);\n          }\n        });\n        if (!waitParams) proceed();\n        function proceed() {\n          if (isDefined(result.$$failure)) return;\n          try {\n            invocation.resolve($injector.invoke(invocable, self, values));\n            invocation.promise.then(function (result) {\n              values[key] = result;\n              done();\n            }, onfailure);\n          } catch (e) {\n            onfailure(e);\n          }\n        }\n        // Publish promise synchronously; invocations further down in the plan may depend on it.\n        promises[key] = invocation.promise;\n      }\n      \n      return result;\n    };\n  };\n  \n  /**\n   * @ngdoc function\n   * @name ui.router.util.$resolve#resolve\n   * @methodOf ui.router.util.$resolve\n   *\n   * @description\n   * Resolves a set of invocables. An invocable is a function to be invoked via \n   * `$injector.invoke()`, and can have an arbitrary number of dependencies. \n   * An invocable can either return a value directly,\n   * or a `$q` promise. If a promise is returned it will be resolved and the \n   * resulting value will be used instead. Dependencies of invocables are resolved \n   * (in this order of precedence)\n   *\n   * - from the specified `locals`\n   * - from another invocable that is part of this `$resolve` call\n   * - from an invocable that is inherited from a `parent` call to `$resolve` \n   *   (or recursively\n   * - from any ancestor `$resolve` of that parent).\n   *\n   * The return value of `$resolve` is a promise for an object that contains \n   * (in this order of precedence)\n   *\n   * - any `locals` (if specified)\n   * - the resolved return values of all injectables\n   * - any values inherited from a `parent` call to `$resolve` (if specified)\n   *\n   * The promise will resolve after the `parent` promise (if any) and all promises \n   * returned by injectables have been resolved. If any invocable \n   * (or `$injector.invoke`) throws an exception, or if a promise returned by an \n   * invocable is rejected, the `$resolve` promise is immediately rejected with the \n   * same error. A rejection of a `parent` promise (if specified) will likewise be \n   * propagated immediately. Once the `$resolve` promise has been rejected, no \n   * further invocables will be called.\n   * \n   * Cyclic dependencies between invocables are not permitted and will cause `$resolve`\n   * to throw an error. As a special case, an injectable can depend on a parameter \n   * with the same name as the injectable, which will be fulfilled from the `parent` \n   * injectable of the same name. This allows inherited values to be decorated. \n   * Note that in this case any other injectable in the same `$resolve` with the same\n   * dependency would see the decorated value, not the inherited value.\n   *\n   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an \n   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \n   * exception.\n   *\n   * Invocables are invoked eagerly as soon as all dependencies are available. \n   * This is true even for dependencies inherited from a `parent` call to `$resolve`.\n   *\n   * As a special case, an invocable can be a string, in which case it is taken to \n   * be a service name to be passed to `$injector.get()`. This is supported primarily \n   * for backwards-compatibility with the `resolve` property of `$routeProvider` \n   * routes.\n   *\n   * @param {object} invocables functions to invoke or \n   * `$injector` services to fetch.\n   * @param {object} locals  values to make available to the injectables\n   * @param {object} parent  a promise returned by another call to `$resolve`.\n   * @param {object} self  the `this` for the invoked methods\n   * @return {object} Promise for an object that contains the resolved return value\n   * of all invocables, as well as any inherited and local values.\n   */\n  this.resolve = function (invocables, locals, parent, self) {\n    return this.study(invocables)(locals, parent, self);\n  };\n}\n\nangular.module('ui.router.util').service('$resolve', $Resolve);\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$templateFactory\n *\n * @requires $http\n * @requires $templateCache\n * @requires $injector\n *\n * @description\n * Service. Manages loading of templates.\n */\n$TemplateFactory.$inject = ['$http', '$templateCache', '$injector'];\nfunction $TemplateFactory(  $http,   $templateCache,   $injector) {\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromConfig\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a configuration object. \n   *\n   * @param {object} config Configuration object for which to load a template. \n   * The following properties are search in the specified order, and the first one \n   * that is defined is used to create the template:\n   *\n   * @param {string|object} config.template html string template or function to \n   * load via {@link ui.router.util.$templateFactory#fromString fromString}.\n   * @param {string|object} config.templateUrl url to load or a function returning \n   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.\n   * @param {Function} config.templateProvider function to invoke via \n   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.\n   * @param {object} params  Parameters to pass to the template function.\n   * @param {object} locals Locals to pass to `invoke` if the template is loaded \n   * via a `templateProvider`. Defaults to `{ params: params }`.\n   *\n   * @return {string|object}  The template html as a string, or a promise for \n   * that string,or `null` if no template is configured.\n   */\n  this.fromConfig = function (config, params, locals) {\n    return (\n      isDefined(config.template) ? this.fromString(config.template, params) :\n      isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) :\n      isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) :\n      null\n    );\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromString\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param {string|object} template html template as a string or function that \n   * returns an html template as a string.\n   * @param {object} params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that \n   * string.\n   */\n  this.fromString = function (template, params) {\n    return isFunction(template) ? template(params) : template;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromUrl\n   * @methodOf ui.router.util.$templateFactory\n   * \n   * @description\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function \n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromUrl = function (url, params) {\n    if (isFunction(url)) url = url(params);\n    if (url == null) return null;\n    else return $http\n        .get(url, { cache: $templateCache, headers: { Accept: 'text/html' }})\n        .then(function(response) { return response.data; });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$templateFactory#fromProvider\n   * @methodOf ui.router.util.$templateFactory\n   *\n   * @description\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param {Function} provider Function to invoke via `$injector.invoke`\n   * @param {Object} params Parameters for the template.\n   * @param {Object} locals Locals to pass to `invoke`. Defaults to \n   * `{ params: params }`.\n   * @return {string|Promise.<string>} The template html as a string, or a promise \n   * for that string.\n   */\n  this.fromProvider = function (provider, params, locals) {\n    return $injector.invoke(provider, null, locals || { params: params });\n  };\n}\n\nangular.module('ui.router.util').service('$templateFactory', $TemplateFactory);\n\nvar $$UMFP; // reference to $UrlMatcherFactoryProvider\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:UrlMatcher\n *\n * @description\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\n * of search parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n *\n * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\n * syntax, which optionally allows a regular expression for the parameter to be specified:\n *\n * * `':'` name - colon placeholder\n * * `'*'` name - catch-all placeholder\n * * `'{' name '}'` - curly placeholder\n * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters). For colon\n * placeholders or curly placeholders without an explicit regexp, a path parameter matches any\n * number of characters other than '/'. For catch-all placeholders the path parameter matches\n * any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n * @param {string} pattern  The pattern to compile into a matcher.\n * @param {Object} config  A configuration object hash:\n * @param {Object=} parentMatcher Used to concatenate the pattern/config onto\n *   an existing UrlMatcher\n *\n * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n *\n * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any\n *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns\n *   non-null) will start with this prefix.\n *\n * @property {string} source  The pattern that was passed into the constructor\n *\n * @property {string} sourcePath  The path portion of the source property\n *\n * @property {string} sourceSearch  The search portion of the source property\n *\n * @property {string} regex  The constructed regex that will be used to match against the url when\n *   it is time to determine which url will match.\n *\n * @returns {Object}  New `UrlMatcher` object\n */\nfunction UrlMatcher(pattern, config, parentMatcher) {\n  config = extend({ params: {} }, isObject(config) ? config : {});\n\n  // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n  //   '*' name\n  //   ':' name\n  //   '{' name '}'\n  //   '{' name ':' regexp '}'\n  // The regular expression is somewhat complicated due to the need to allow curly braces\n  // inside the regular expression. The placeholder regexp breaks down as follows:\n  //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n  //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n  //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n  //    [^{}\\\\]+                       - anything other than curly braces or backslash\n  //    \\\\.                            - a backslash escape\n  //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n  var placeholder       = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n      compiled = '^', last = 0, m,\n      segments = this.segments = [],\n      parentParams = parentMatcher ? parentMatcher.params : {},\n      params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(),\n      paramNames = [];\n\n  function addParameter(id, type, config, location) {\n    paramNames.push(id);\n    if (parentParams[id]) return parentParams[id];\n    if (!/^\\w+([-.]+\\w+)*(?:\\[\\])?$/.test(id)) throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    if (params[id]) throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n    params[id] = new $$UMFP.Param(id, type, config, location);\n    return params[id];\n  }\n\n  function quoteRegExp(string, pattern, squash, optional) {\n    var surroundPattern = ['',''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!pattern) return result;\n    switch(squash) {\n      case false: surroundPattern = ['(', ')' + (optional ? \"?\" : \"\")]; break;\n      case true:\n        result = result.replace(/\\/$/, '');\n        surroundPattern = ['(?:\\/(', ')|\\/)?'];\n      break;\n      default:    surroundPattern = ['(' + squash + \"|\", ')?']; break;\n    }\n    return result + surroundPattern[0] + pattern + surroundPattern[1];\n  }\n\n  this.source = pattern;\n\n  // Split into static segments separated by path parameter placeholders.\n  // The number of segments is always 1 more than the number of parameters.\n  function matchDetails(m, isSearch) {\n    var id, regexp, segment, type, cfg, arrayMode;\n    id          = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\n    cfg         = config.params[id];\n    segment     = pattern.substring(last, m.index);\n    regexp      = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);\n\n    if (regexp) {\n      type      = $$UMFP.type(regexp) || inherit($$UMFP.type(\"string\"), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });\n    }\n\n    return {\n      id: id, regexp: regexp, segment: segment, type: type, cfg: cfg\n    };\n  }\n\n  var p, param, segment;\n  while ((m = placeholder.exec(pattern))) {\n    p = matchDetails(m, false);\n    if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n    param = addParameter(p.id, p.type, p.cfg, \"path\");\n    compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);\n    segments.push(p.segment);\n    last = placeholder.lastIndex;\n  }\n  segment = pattern.substring(last);\n\n  // Find any search parameter names and remove them from the last segment\n  var i = segment.indexOf('?');\n\n  if (i >= 0) {\n    var search = this.sourceSearch = segment.substring(i);\n    segment = segment.substring(0, i);\n    this.sourcePath = pattern.substring(0, last + i);\n\n    if (search.length > 0) {\n      last = 0;\n      while ((m = searchPlaceholder.exec(search))) {\n        p = matchDetails(m, true);\n        param = addParameter(p.id, p.type, p.cfg, \"search\");\n        last = placeholder.lastIndex;\n        // check if ?&\n      }\n    }\n  } else {\n    this.sourcePath = pattern;\n    this.sourceSearch = '';\n  }\n\n  compiled += quoteRegExp(segment) + (config.strict === false ? '\\/?' : '') + '$';\n  segments.push(segment);\n\n  this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);\n  this.prefix = segments[0];\n  this.$$paramNames = paramNames;\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#concat\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns a new matcher for a pattern constructed by appending the path part and adding the\n * search parameters of the specified pattern to this pattern. The current pattern is not\n * modified. This can be understood as creating a pattern for URLs that are relative to (or\n * suffixes of) the current pattern.\n *\n * @example\n * The following two matchers are equivalent:\n * <pre>\n * new UrlMatcher('/user/{id}?q').concat('/details?date');\n * new UrlMatcher('/user/{id}/details?q&date');\n * </pre>\n *\n * @param {string} pattern  The pattern to append.\n * @param {Object} config  An object hash of the configuration for the matcher.\n * @returns {UrlMatcher}  A matcher for the concatenated pattern.\n */\nUrlMatcher.prototype.concat = function (pattern, config) {\n  // Because order of search parameters is irrelevant, we can add our own search\n  // parameters to the end of the new pattern. Parse the new pattern by itself\n  // and then join the bits together, but it's much easier to do this on a string level.\n  var defaultConfig = {\n    caseInsensitive: $$UMFP.caseInsensitive(),\n    strict: $$UMFP.strictMode(),\n    squash: $$UMFP.defaultSquashPolicy()\n  };\n  return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);\n};\n\nUrlMatcher.prototype.toString = function () {\n  return this.source;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#exec\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Tests the specified path against this matcher, and returns an object containing the captured\n * parameter values, or null if the path does not match. The returned object contains the values\n * of any search parameters that are mentioned in the pattern, but their value may be null if\n * they are not present in `searchParams`. This means that search parameters are always treated\n * as optional.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n *   x: '1', q: 'hello'\n * });\n * // returns { id: 'bob', q: 'hello', r: null }\n * </pre>\n *\n * @param {string} path  The URL path to match, e.g. `$location.path()`.\n * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.\n * @returns {Object}  The captured parameter values.\n */\nUrlMatcher.prototype.exec = function (path, searchParams) {\n  var m = this.regexp.exec(path);\n  if (!m) return null;\n  searchParams = searchParams || {};\n\n  var paramNames = this.parameters(), nTotal = paramNames.length,\n    nPath = this.segments.length - 1,\n    values = {}, i, j, cfg, paramName;\n\n  if (nPath !== m.length - 1) throw new Error(\"Unbalanced capture group in route '\" + this.source + \"'\");\n\n  function decodePathArray(string) {\n    function reverseString(str) { return str.split(\"\").reverse().join(\"\"); }\n    function unquoteDashes(str) { return str.replace(/\\\\-/g, \"-\"); }\n\n    var split = reverseString(string).split(/-(?!\\\\)/);\n    var allReversed = map(split, reverseString);\n    return map(allReversed, unquoteDashes).reverse();\n  }\n\n  var param, paramVal;\n  for (i = 0; i < nPath; i++) {\n    paramName = paramNames[i];\n    param = this.params[paramName];\n    paramVal = m[i+1];\n    // if the param value matches a pre-replace pair, replace the value before decoding.\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (paramVal && param.array === true) paramVal = decodePathArray(paramVal);\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n  for (/**/; i < nTotal; i++) {\n    paramName = paramNames[i];\n    values[paramName] = this.params[paramName].value(searchParams[paramName]);\n    param = this.params[paramName];\n    paramVal = searchParams[paramName];\n    for (j = 0; j < param.replace.length; j++) {\n      if (param.replace[j].from === paramVal) paramVal = param.replace[j].to;\n    }\n    if (isDefined(paramVal)) paramVal = param.type.decode(paramVal);\n    values[paramName] = param.value(paramVal);\n  }\n\n  return values;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#parameters\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Returns the names of all path and search parameters of this pattern in an unspecified order.\n *\n * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the\n *    pattern has no parameters, an empty array is returned.\n */\nUrlMatcher.prototype.parameters = function (param) {\n  if (!isDefined(param)) return this.$$paramNames;\n  return this.params[param] || null;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#validates\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Checks an object hash of parameters to validate their correctness according to the parameter\n * types of this `UrlMatcher`.\n *\n * @param {Object} params The object hash of parameters to validate.\n * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.\n */\nUrlMatcher.prototype.validates = function (params) {\n  return this.params.$$validates(params);\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:UrlMatcher#format\n * @methodOf ui.router.util.type:UrlMatcher\n *\n * @description\n * Creates a URL that matches this pattern by substituting the specified values\n * for the path and search parameters. Null values for path parameters are\n * treated as empty strings.\n *\n * @example\n * <pre>\n * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n * // returns '/user/bob?q=yes'\n * </pre>\n *\n * @param {Object} values  the values to substitute for the parameters in this pattern.\n * @returns {string}  the formatted URL (path and optionally search part).\n */\nUrlMatcher.prototype.format = function (values) {\n  values = values || {};\n  var segments = this.segments, params = this.parameters(), paramset = this.params;\n  if (!this.validates(values)) return null;\n\n  var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];\n\n  function encodeDashes(str) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, function(c) { return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase(); });\n  }\n\n  for (i = 0; i < nTotal; i++) {\n    var isPathParam = i < nPath;\n    var name = params[i], param = paramset[name], value = param.value(values[name]);\n    var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);\n    var squash = isDefaultValue ? param.squash : false;\n    var encoded = param.type.encode(value);\n\n    if (isPathParam) {\n      var nextSegment = segments[i + 1];\n      var isFinalPathParam = i + 1 === nPath;\n\n      if (squash === false) {\n        if (encoded != null) {\n          if (isArray(encoded)) {\n            result += map(encoded, encodeDashes).join(\"-\");\n          } else {\n            result += encodeURIComponent(encoded);\n          }\n        }\n        result += nextSegment;\n      } else if (squash === true) {\n        var capture = result.match(/\\/$/) ? /\\/?(.*)/ : /(.*)/;\n        result += nextSegment.match(capture)[1];\n      } else if (isString(squash)) {\n        result += squash + nextSegment;\n      }\n\n      if (isFinalPathParam && param.squash === true && result.slice(-1) === '/') result = result.slice(0, -1);\n    } else {\n      if (encoded == null || (isDefaultValue && squash !== false)) continue;\n      if (!isArray(encoded)) encoded = [ encoded ];\n      if (encoded.length === 0) continue;\n      encoded = map(encoded, encodeURIComponent).join('&' + name + '=');\n      result += (search ? '&' : '?') + (name + '=' + encoded);\n      search = true;\n    }\n  }\n\n  return result;\n};\n\n/**\n * @ngdoc object\n * @name ui.router.util.type:Type\n *\n * @description\n * Implements an interface to define custom parameter types that can be decoded from and encoded to\n * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\n * objects when matching or formatting URLs, or comparing or validating parameter values.\n *\n * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\n * information on registering custom types.\n *\n * @param {Object} config  A configuration object which contains the custom type definition.  The object's\n *        properties will override the default methods and/or pattern in `Type`'s public interface.\n * @example\n * <pre>\n * {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n * </pre>\n *\n * @property {RegExp} pattern The regular expression pattern used to match values of this type when\n *           coming from a substring of a URL.\n *\n * @returns {Object}  Returns a new `Type` object.\n */\nfunction Type(config) {\n  extend(this, config);\n}\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#is\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Detects whether a value is of a particular type. Accepts a native (decoded) value\n * and determines whether it matches the current `Type` object.\n *\n * @param {*} val  The value to check.\n * @param {string} key  Optional. If the type check is happening in the context of a specific\n *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.\n * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.\n */\nType.prototype.is = function(val, key) {\n  return true;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#encode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\n * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\n * only needs to be a representation of `val` that has been coerced to a string.\n *\n * @param {*} val  The value to encode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.\n */\nType.prototype.encode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#decode\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Converts a parameter value (from URL string or transition param) to a custom/native value.\n *\n * @param {string} val  The URL parameter value to decode.\n * @param {string} key  The name of the parameter in which `val` is stored. Can be used for\n *        meta-programming of `Type` objects.\n * @returns {*}  Returns a custom representation of the URL parameter value.\n */\nType.prototype.decode = function(val, key) {\n  return val;\n};\n\n/**\n * @ngdoc function\n * @name ui.router.util.type:Type#equals\n * @methodOf ui.router.util.type:Type\n *\n * @description\n * Determines whether two decoded values are equivalent.\n *\n * @param {*} a  A value to compare against.\n * @param {*} b  A value to compare against.\n * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.\n */\nType.prototype.equals = function(a, b) {\n  return a == b;\n};\n\nType.prototype.$subPattern = function() {\n  var sub = this.pattern.toString();\n  return sub.substr(1, sub.length - 2);\n};\n\nType.prototype.pattern = /.*/;\n\nType.prototype.toString = function() { return \"{Type:\" + this.name + \"}\"; };\n\n/** Given an encoded string, or a decoded object, returns a decoded object */\nType.prototype.$normalize = function(val) {\n  return this.is(val) ? val : this.decode(val);\n};\n\n/*\n * Wraps an existing custom Type as an array of Type, depending on 'mode'.\n * e.g.:\n * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n * - url: \"/path?queryParam=1&queryParam=2\n * - $stateParams.queryParam will be [1, 2]\n * if `mode` is \"auto\", then\n * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n */\nType.prototype.$asArray = function(mode, isSearch) {\n  if (!mode) return this;\n  if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n\n  function ArrayType(type, mode) {\n    function bindTo(type, callbackName) {\n      return function() {\n        return type[callbackName].apply(type, arguments);\n      };\n    }\n\n    // Wrap non-array value as array\n    function arrayWrap(val) { return isArray(val) ? val : (isDefined(val) ? [ val ] : []); }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n      switch(val.length) {\n        case 0: return undefined;\n        case 1: return mode === \"auto\" ? val[0] : val;\n        default: return val;\n      }\n    }\n    function falsey(val) { return !val; }\n\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n      return function handleArray(val) {\n        if (isArray(val) && val.length === 0) return val;\n        val = arrayWrap(val);\n        var result = map(val, callback);\n        if (allTruthyMode === true)\n          return filter(result, falsey).length === 0;\n        return arrayUnwrap(result);\n      };\n    }\n\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n      return function handleArray(val1, val2) {\n        var left = arrayWrap(val1), right = arrayWrap(val2);\n        if (left.length !== right.length) return false;\n        for (var i = 0; i < left.length; i++) {\n          if (!callback(left[i], right[i])) return false;\n        }\n        return true;\n      };\n    }\n\n    this.encode = arrayHandler(bindTo(type, 'encode'));\n    this.decode = arrayHandler(bindTo(type, 'decode'));\n    this.is     = arrayHandler(bindTo(type, 'is'), true);\n    this.equals = arrayEqualsHandler(bindTo(type, 'equals'));\n    this.pattern = type.pattern;\n    this.$normalize = arrayHandler(bindTo(type, '$normalize'));\n    this.name = type.name;\n    this.$arrayMode = mode;\n  }\n\n  return new ArrayType(this, mode);\n};\n\n\n\n/**\n * @ngdoc object\n * @name ui.router.util.$urlMatcherFactory\n *\n * @description\n * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\n * is also available to providers under the name `$urlMatcherFactoryProvider`.\n */\nfunction $UrlMatcherFactory() {\n  $$UMFP = this;\n\n  var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;\n\n  // Use tildes to pre-encode slashes.\n  // If the slashes are simply URLEncoded, the browser can choose to pre-decode them,\n  // and bidirectional encoding/decoding fails.\n  // Tilde was chosen because it's not a RFC 3986 section 2.2 Reserved Character\n  function valToString(val) { return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return {'~':'~~', '/':'~2F'}[m]; }) : val; }\n  function valFromString(val) { return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return {'~~':'~', '~2F':'/'}[m]; }) : val; }\n\n  var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {\n    \"string\": {\n      encode: valToString,\n      decode: valFromString,\n      // TODO: in 1.0, make string .is() return false if value is undefined/null by default.\n      // In 0.2.x, string params are optional by default for backwards compat\n      is: function(val) { return val == null || !isDefined(val) || typeof val === \"string\"; },\n      pattern: /[^/]*/\n    },\n    \"int\": {\n      encode: valToString,\n      decode: function(val) { return parseInt(val, 10); },\n      is: function(val) { return isDefined(val) && this.decode(val.toString()) === val; },\n      pattern: /\\d+/\n    },\n    \"bool\": {\n      encode: function(val) { return val ? 1 : 0; },\n      decode: function(val) { return parseInt(val, 10) !== 0; },\n      is: function(val) { return val === true || val === false; },\n      pattern: /0|1/\n    },\n    \"date\": {\n      encode: function (val) {\n        if (!this.is(val))\n          return undefined;\n        return [ val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function (val) {\n        if (this.is(val)) return val;\n        var match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: function(val) { return val instanceof Date && !isNaN(val.valueOf()); },\n      equals: function (a, b) { return this.is(a) && this.is(b) && a.toISOString() === b.toISOString(); },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    },\n    \"json\": {\n      encode: angular.toJson,\n      decode: angular.fromJson,\n      is: angular.isObject,\n      equals: angular.equals,\n      pattern: /[^/]*/\n    },\n    \"any\": { // does not encode/decode\n      encode: angular.identity,\n      decode: angular.identity,\n      equals: angular.equals,\n      pattern: /.*/\n    }\n  };\n\n  function getDefaultConfig() {\n    return {\n      strict: isStrictMode,\n      caseInsensitive: isCaseInsensitive\n    };\n  }\n\n  function isInjectable(value) {\n    return (isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])));\n  }\n\n  /**\n   * [Internal] Get the default value of a parameter, which may be an injectable function.\n   */\n  $UrlMatcherFactory.$$getDefaultValue = function(config) {\n    if (!isInjectable(config.value)) return config.value;\n    if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n    return injector.invoke(config.value);\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#caseInsensitive\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URL matching should be case sensitive (the default behavior), or not.\n   *\n   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;\n   * @returns {boolean} the current value of caseInsensitive\n   */\n  this.caseInsensitive = function(value) {\n    if (isDefined(value))\n      isCaseInsensitive = value;\n    return isCaseInsensitive;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#strictMode\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Defines whether URLs should match trailing slashes, or not (the default behavior).\n   *\n   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.\n   * @returns {boolean} the current value of strictMode\n   */\n  this.strictMode = function(value) {\n    if (isDefined(value))\n      isStrictMode = value;\n    return isStrictMode;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Sets the default behavior when generating or matching URLs with default parameter values.\n   *\n   * @param {string} value A string that defines the default parameter URL squashing behavior.\n   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n   *             parameter is surrounded by slashes, squash (remove) one slash from the URL\n   *    any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n   *             the parameter value from the URL and replace it with this string.\n   */\n  this.defaultSquashPolicy = function(value) {\n    if (!isDefined(value)) return defaultSquashPolicy;\n    if (value !== true && value !== false && !isString(value))\n      throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n    defaultSquashPolicy = value;\n    return value;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#compile\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.\n   *\n   * @param {string} pattern  The URL pattern.\n   * @param {Object} config  The config object hash.\n   * @returns {UrlMatcher}  The UrlMatcher.\n   */\n  this.compile = function (pattern, config) {\n    return new UrlMatcher(pattern, extend(getDefaultConfig(), config));\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#isMatcher\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.\n   *\n   * @param {Object} object  The object to perform the type check against.\n   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  this.isMatcher = function (o) {\n    if (!isObject(o)) return false;\n    var result = true;\n\n    forEach(UrlMatcher.prototype, function(val, name) {\n      if (isFunction(val)) {\n        result = result && (isDefined(o[name]) && isFunction(o[name]));\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.util.$urlMatcherFactory#type\n   * @methodOf ui.router.util.$urlMatcherFactory\n   *\n   * @description\n   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\n   * generate URLs with typed parameters.\n   *\n   * @param {string} name  The type name.\n   * @param {Object|Function} definition   The type definition. See\n   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   * @param {Object|Function} definitionFn (optional) A function that is injected before the app\n   *        runtime starts.  The result of this function is merged into the existing `definition`.\n   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.\n   *\n   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.\n   *\n   * @example\n   * This is a simple example of a custom type that encodes and decodes items from an\n   * array, using the array index as the URL-encoded value:\n   *\n   * <pre>\n   * var list = ['John', 'Paul', 'George', 'Ringo'];\n   *\n   * $urlMatcherFactoryProvider.type('listItem', {\n   *   encode: function(item) {\n   *     // Represent the list item in the URL using its corresponding index\n   *     return list.indexOf(item);\n   *   },\n   *   decode: function(item) {\n   *     // Look up the list item by index\n   *     return list[parseInt(item, 10)];\n   *   },\n   *   is: function(item) {\n   *     // Ensure the item is valid by checking to see that it appears\n   *     // in the list\n   *     return list.indexOf(item) > -1;\n   *   }\n   * });\n   *\n   * $stateProvider.state('list', {\n   *   url: \"/list/{item:listItem}\",\n   *   controller: function($scope, $stateParams) {\n   *     console.log($stateParams.item);\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * // Changes URL to '/list/3', logs \"Ringo\" to the console\n   * $state.go('list', { item: \"Ringo\" });\n   * </pre>\n   *\n   * This is a more complex example of a type that relies on dependency injection to\n   * interact with services, and uses the parameter name from the URL to infer how to\n   * handle encoding and decoding parameter values:\n   *\n   * <pre>\n   * // Defines a custom type that gets a value from a service,\n   * // where each service gets different types of values from\n   * // a backend API:\n   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n   *\n   *   // Matches up services to URL parameter names\n   *   var services = {\n   *     user: Users,\n   *     post: Posts\n   *   };\n   *\n   *   return {\n   *     encode: function(object) {\n   *       // Represent the object in the URL using its unique ID\n   *       return object.id;\n   *     },\n   *     decode: function(value, key) {\n   *       // Look up the object by ID, using the parameter\n   *       // name (key) to call the correct service\n   *       return services[key].findById(value);\n   *     },\n   *     is: function(object, key) {\n   *       // Check that object is a valid dbObject\n   *       return angular.isObject(object) && object.id && services[key];\n   *     }\n   *     equals: function(a, b) {\n   *       // Check the equality of decoded objects by comparing\n   *       // their unique IDs\n   *       return a.id === b.id;\n   *     }\n   *   };\n   * });\n   *\n   * // In a config() block, you can then attach URLs with\n   * // type-annotated parameters:\n   * $stateProvider.state('users', {\n   *   url: \"/users\",\n   *   // ...\n   * }).state('users.item', {\n   *   url: \"/{user:dbObject}\",\n   *   controller: function($scope, $stateParams) {\n   *     // $stateParams.user will now be an object returned from\n   *     // the Users service\n   *   },\n   *   // ...\n   * });\n   * </pre>\n   */\n  this.type = function (name, definition, definitionFn) {\n    if (!isDefined(definition)) return $types[name];\n    if ($types.hasOwnProperty(name)) throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n\n    $types[name] = new Type(extend({ name: name }, definition));\n    if (definitionFn) {\n      typeQueue.push({ name: name, def: definitionFn });\n      if (!enqueue) flushTypeQueue();\n    }\n    return this;\n  };\n\n  // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s\n  function flushTypeQueue() {\n    while(typeQueue.length) {\n      var type = typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      angular.extend($types[type.name], injector.invoke(type.def));\n    }\n  }\n\n  // Register default types. Store them in the prototype of $types.\n  forEach(defaultTypes, function(type, name) { $types[name] = new Type(extend({name: name}, type)); });\n  $types = inherit($types, {});\n\n  /* No need to document $get, since it returns this */\n  this.$get = ['$injector', function ($injector) {\n    injector = $injector;\n    enqueue = false;\n    flushTypeQueue();\n\n    forEach(defaultTypes, function(type, name) {\n      if (!$types[name]) $types[name] = new Type(type);\n    });\n    return this;\n  }];\n\n  this.Param = function Param(id, type, config, location) {\n    var self = this;\n    config = unwrapShorthand(config);\n    type = getType(config, type, location);\n    var arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === \"search\") : type;\n    if (type.name === \"string\" && !arrayMode && location === \"path\" && config.value === undefined)\n      config.value = \"\"; // for 0.2.x; in 0.3.0+ do not automatically default to \"\"\n    var isOptional = config.value !== undefined;\n    var squash = getSquashPolicy(config, isOptional);\n    var replace = getReplace(config, arrayMode, isOptional, squash);\n\n    function unwrapShorthand(config) {\n      var keys = isObject(config) ? objectKeys(config) : [];\n      var isShorthand = indexOf(keys, \"value\") === -1 && indexOf(keys, \"type\") === -1 &&\n                        indexOf(keys, \"squash\") === -1 && indexOf(keys, \"array\") === -1;\n      if (isShorthand) config = { value: config };\n      config.$$fn = isInjectable(config.value) ? config.value : function () { return config.value; };\n      return config;\n    }\n\n    function getType(config, urlType, location) {\n      if (config.type && urlType) throw new Error(\"Param '\"+id+\"' has two type configurations.\");\n      if (urlType) return urlType;\n      if (!config.type) return (location === \"config\" ? $types.any : $types.string);\n\n      if (angular.isString(config.type))\n        return $types[config.type];\n      if (config.type instanceof Type)\n        return config.type;\n      return new Type(config.type);\n    }\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      var arrayDefaults = { array: (location === \"search\" ? \"auto\" : false) };\n      var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    /**\n     * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n     */\n    function getSquashPolicy(config, isOptional) {\n      var squash = config.squash;\n      if (!isOptional || squash === false) return false;\n      if (!isDefined(squash) || squash == null) return defaultSquashPolicy;\n      if (squash === true || isString(squash)) return squash;\n      throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n    }\n\n    function getReplace(config, arrayMode, isOptional, squash) {\n      var replace, configuredKeys, defaultPolicy = [\n        { from: \"\",   to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") }\n      ];\n      replace = isArray(config.replace) ? config.replace : [];\n      if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n      configuredKeys = map(replace, function(item) { return item.from; } );\n      return filter(defaultPolicy, function(item) { return indexOf(configuredKeys, item.from) === -1; }).concat(replace);\n    }\n\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    function $$getDefaultValue() {\n      if (!injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n      var defaultValue = injector.invoke(config.$$fn);\n      if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))\n        throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + self.id + \"' is not an instance of Type (\" + self.type.name + \")\");\n      return defaultValue;\n    }\n\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    function $value(value) {\n      function hasReplaceVal(val) { return function(obj) { return obj.from === val; }; }\n      function $replace(value) {\n        var replacement = map(filter(self.replace, hasReplaceVal(value)), function(obj) { return obj.to; });\n        return replacement.length ? replacement[0] : value;\n      }\n      value = $replace(value);\n      return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);\n    }\n\n    function toString() { return \"{Param:\" + id + \" \" + type + \" squash: '\" + squash + \"' optional: \" + isOptional + \"}\"; }\n\n    extend(this, {\n      id: id,\n      type: type,\n      location: location,\n      array: arrayMode,\n      squash: squash,\n      replace: replace,\n      isOptional: isOptional,\n      value: $value,\n      dynamic: undefined,\n      config: config,\n      toString: toString\n    });\n  };\n\n  function ParamSet(params) {\n    extend(this, params || {});\n  }\n\n  ParamSet.prototype = {\n    $$new: function() {\n      return inherit(this, extend(new ParamSet(), { $$parent: this}));\n    },\n    $$keys: function () {\n      var keys = [], chain = [], parent = this,\n        ignore = objectKeys(ParamSet.prototype);\n      while (parent) { chain.push(parent); parent = parent.$$parent; }\n      chain.reverse();\n      forEach(chain, function(paramset) {\n        forEach(objectKeys(paramset), function(key) {\n            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1) keys.push(key);\n        });\n      });\n      return keys;\n    },\n    $$values: function(paramValues) {\n      var values = {}, self = this;\n      forEach(self.$$keys(), function(key) {\n        values[key] = self[key].value(paramValues && paramValues[key]);\n      });\n      return values;\n    },\n    $$equals: function(paramValues1, paramValues2) {\n      var equal = true, self = this;\n      forEach(self.$$keys(), function(key) {\n        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];\n        if (!self[key].type.equals(left, right)) equal = false;\n      });\n      return equal;\n    },\n    $$validates: function $$validate(paramValues) {\n      var keys = this.$$keys(), i, param, rawVal, normalized, encoded;\n      for (i = 0; i < keys.length; i++) {\n        param = this[keys[i]];\n        rawVal = paramValues[keys[i]];\n        if ((rawVal === undefined || rawVal === null) && param.isOptional)\n          break; // There was no parameter value, but the param is optional\n        normalized = param.type.$normalize(rawVal);\n        if (!param.type.is(normalized))\n          return false; // The value was not of the correct Type, and could not be decoded to the correct Type\n        encoded = param.type.encode(normalized);\n        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))\n          return false; // The value was of the correct type, but when encoded, did not match the Type's regexp\n      }\n      return true;\n    },\n    $$parent: undefined\n  };\n\n  this.ParamSet = ParamSet;\n}\n\n// Register as a provider so it's available to other providers\nangular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);\nangular.module('ui.router.util').run(['$urlMatcherFactory', function($urlMatcherFactory) { }]);\n\n/**\n * @ngdoc object\n * @name ui.router.router.$urlRouterProvider\n *\n * @requires ui.router.util.$urlMatcherFactoryProvider\n * @requires $locationProvider\n *\n * @description\n * `$urlRouterProvider` has the responsibility of watching `$location`. \n * When `$location` changes it runs through a list of rules one by one until a \n * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify \n * a url in a state configuration. All urls are compiled into a UrlMatcher object.\n *\n * There are several methods on `$urlRouterProvider` that make it useful to use directly\n * in your module config.\n */\n$UrlRouterProvider.$inject = ['$locationProvider', '$urlMatcherFactoryProvider'];\nfunction $UrlRouterProvider(   $locationProvider,   $urlMatcherFactory) {\n  var rules = [], otherwise = null, interceptDeferred = false, listener;\n\n  // Returns a string that is a prefix of all strings matching the RegExp\n  function regExpPrefix(re) {\n    var prefix = /^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)/.exec(re.source);\n    return (prefix != null) ? prefix[1].replace(/\\\\(.)/g, \"$1\") : '';\n  }\n\n  // Interpolates matched values into a String.replace()-style pattern\n  function interpolate(pattern, match) {\n    return pattern.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n      return match[what === '$' ? 0 : Number(what)];\n    });\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#rule\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines rules that are used by `$urlRouterProvider` to find matches for\n   * specific URLs.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {function} rule Handler function that takes `$injector` and `$location`\n   * services as arguments. You can use them to return a valid path as a string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.rule = function (rule) {\n    if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    rules.push(rule);\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouterProvider#otherwise\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Defines a path that is used when an invalid route is requested.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|function} rule The url path you want to redirect to or a function \n   * rule that returns the url path. The function version is passed two params: \n   * `$injector` and `$location` services, and must return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  this.otherwise = function (rule) {\n    if (isString(rule)) {\n      var redirect = rule;\n      rule = function () { return redirect; };\n    }\n    else if (!isFunction(rule)) throw new Error(\"'rule' must be a function\");\n    otherwise = rule;\n    return this;\n  };\n\n\n  function handleIfMatch($injector, handler, match) {\n    if (!match) return false;\n    var result = $injector.invoke(handler, handler, { $match: match });\n    return isDefined(result) ? result : true;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#when\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Registers a handler for a given url matching. \n   * \n   * If the handler is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable. It gets invoked if `$location`\n   * matches. You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * </pre>\n   *\n   * @param {string|object} what The incoming path that you want to redirect.\n   * @param {string|function} handler The path you want to redirect your user to.\n   */\n  this.when = function (what, handler) {\n    var redirect, handlerIsString = isString(handler);\n    if (isString(what)) what = $urlMatcherFactory.compile(what);\n\n    if (!handlerIsString && !isFunction(handler) && !isArray(handler))\n      throw new Error(\"invalid 'handler' in when()\");\n\n    var strategies = {\n      matcher: function (what, handler) {\n        if (handlerIsString) {\n          redirect = $urlMatcherFactory.compile(handler);\n          handler = ['$match', function ($match) { return redirect.format($match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));\n        }, {\n          prefix: isString(what.prefix) ? what.prefix : ''\n        });\n      },\n      regex: function (what, handler) {\n        if (what.global || what.sticky) throw new Error(\"when() RegExp must not be global or sticky\");\n\n        if (handlerIsString) {\n          redirect = handler;\n          handler = ['$match', function ($match) { return interpolate(redirect, $match); }];\n        }\n        return extend(function ($injector, $location) {\n          return handleIfMatch($injector, handler, what.exec($location.path()));\n        }, {\n          prefix: regExpPrefix(what)\n        });\n      }\n    };\n\n    var check = { matcher: $urlMatcherFactory.isMatcher(what), regex: what instanceof RegExp };\n\n    for (var n in check) {\n      if (check[n]) return this.rule(strategies[n](what, handler));\n    }\n\n    throw new Error(\"invalid 'what' in when()\");\n  };\n\n  /**\n   * @ngdoc function\n   * @name ui.router.router.$urlRouterProvider#deferIntercept\n   * @methodOf ui.router.router.$urlRouterProvider\n   *\n   * @description\n   * Disables (or enables) deferring location change interception.\n   *\n   * If you wish to customize the behavior of syncing the URL (for example, if you wish to\n   * defer a transition but maintain the current URL), call this method at configuration time.\n   * Then, at run time, call `$urlRouter.listen()` after you have configured your own\n   * `$locationChangeSuccess` event handler.\n   *\n   * @example\n   * <pre>\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   // this allows you to configure custom behavior in between\n   *   // location changes and route synchronization:\n   *   $urlRouterProvider.deferIntercept();\n   *\n   * }).run(function ($rootScope, $urlRouter, UserService) {\n   *\n   *   $rootScope.$on('$locationChangeSuccess', function(e) {\n   *     // UserService is an example service for managing user state\n   *     if (UserService.isLoggedIn()) return;\n   *\n   *     // Prevent $urlRouter's default handler from firing\n   *     e.preventDefault();\n   *\n   *     UserService.handleLogin().then(function() {\n   *       // Once the user has logged in, sync the current URL\n   *       // to the router:\n   *       $urlRouter.sync();\n   *     });\n   *   });\n   *\n   *   // Configures $urlRouter's listener *after* your custom listener\n   *   $urlRouter.listen();\n   * });\n   * </pre>\n   *\n   * @param {boolean} defer Indicates whether to defer location change interception. Passing\n            no parameter is equivalent to `true`.\n   */\n  this.deferIntercept = function (defer) {\n    if (defer === undefined) defer = true;\n    interceptDeferred = defer;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.router.$urlRouter\n   *\n   * @requires $location\n   * @requires $rootScope\n   * @requires $injector\n   * @requires $browser\n   *\n   * @description\n   *\n   */\n  this.$get = $get;\n  $get.$inject = ['$location', '$rootScope', '$injector', '$browser', '$sniffer'];\n  function $get(   $location,   $rootScope,   $injector,   $browser,   $sniffer) {\n\n    var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;\n\n    function appendBasePath(url, isHtml5, absolute) {\n      if (baseHref === '/') return url;\n      if (isHtml5) return baseHref.slice(0, -1) + url;\n      if (absolute) return baseHref.slice(1) + url;\n      return url;\n    }\n\n    // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree\n    function update(evt) {\n      if (evt && evt.defaultPrevented) return;\n      var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;\n      lastPushedUrl = undefined;\n      // TODO: Re-implement this in 1.0 for https://github.com/angular-ui/ui-router/issues/1573\n      //if (ignoreUpdate) return true;\n\n      function check(rule) {\n        var handled = rule($injector, $location);\n\n        if (!handled) return false;\n        if (isString(handled)) $location.replace().url(handled);\n        return true;\n      }\n      var n = rules.length, i;\n\n      for (i = 0; i < n; i++) {\n        if (check(rules[i])) return;\n      }\n      // always check otherwise last to allow dynamic updates to the set of rules\n      if (otherwise) check(otherwise);\n    }\n\n    function listen() {\n      listener = listener || $rootScope.$on('$locationChangeSuccess', update);\n      return listener;\n    }\n\n    if (!interceptDeferred) listen();\n\n    return {\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#sync\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\n       * This method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\n       * perform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\n       * with the transition by calling `$urlRouter.sync()`.\n       *\n       * @example\n       * <pre>\n       * angular.module('app', ['ui.router'])\n       *   .run(function($rootScope, $urlRouter) {\n       *     $rootScope.$on('$locationChangeSuccess', function(evt) {\n       *       // Halt state change from even starting\n       *       evt.preventDefault();\n       *       // Perform custom logic\n       *       var meetsRequirement = ...\n       *       // Continue with the update and state transition if logic allows\n       *       if (meetsRequirement) $urlRouter.sync();\n       *     });\n       * });\n       * </pre>\n       */\n      sync: function() {\n        update();\n      },\n\n      listen: function() {\n        return listen();\n      },\n\n      update: function(read) {\n        if (read) {\n          location = $location.url();\n          return;\n        }\n        if ($location.url() === location) return;\n\n        $location.url(location);\n        $location.replace();\n      },\n\n      push: function(urlMatcher, params, options) {\n         var url = urlMatcher.format(params || {});\n\n        // Handle the special hash param, if needed\n        if (url !== null && params && params['#']) {\n            url += '#' + params['#'];\n        }\n\n        $location.url(url);\n        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;\n        if (options && options.replace) $location.replace();\n      },\n\n      /**\n       * @ngdoc function\n       * @name ui.router.router.$urlRouter#href\n       * @methodOf ui.router.router.$urlRouter\n       *\n       * @description\n       * A URL generation method that returns the compiled URL for a given\n       * {@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.\n       *\n       * @example\n       * <pre>\n       * $bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n       *   person: \"bob\"\n       * });\n       * // $bob == \"/about/bob\";\n       * </pre>\n       *\n       * @param {UrlMatcher} urlMatcher The `UrlMatcher` object which is used as the template of the URL to generate.\n       * @param {object=} params An object of parameter values to fill the matcher's required parameters.\n       * @param {object=} options Options object. The options are:\n       *\n       * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n       *\n       * @returns {string} Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n       */\n      href: function(urlMatcher, params, options) {\n        if (!urlMatcher.validates(params)) return null;\n\n        var isHtml5 = $locationProvider.html5Mode();\n        if (angular.isObject(isHtml5)) {\n          isHtml5 = isHtml5.enabled;\n        }\n\n        isHtml5 = isHtml5 && $sniffer.history;\n        \n        var url = urlMatcher.format(params);\n        options = options || {};\n\n        if (!isHtml5 && url !== null) {\n          url = \"#\" + $locationProvider.hashPrefix() + url;\n        }\n\n        // Handle special hash param, if needed\n        if (url !== null && params && params['#']) {\n          url += '#' + params['#'];\n        }\n\n        url = appendBasePath(url, isHtml5, options.absolute);\n\n        if (!options.absolute || !url) {\n          return url;\n        }\n\n        var slash = (!isHtml5 && url ? '/' : ''), port = $location.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n\n        return [$location.protocol(), '://', $location.host(), port, slash, url].join('');\n      }\n    };\n  }\n}\n\nangular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$stateProvider\n *\n * @requires ui.router.router.$urlRouterProvider\n * @requires ui.router.util.$urlMatcherFactoryProvider\n *\n * @description\n * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\n$StateProvider.$inject = ['$urlRouterProvider', '$urlMatcherFactoryProvider'];\nfunction $StateProvider(   $urlRouterProvider,   $urlMatcherFactory) {\n\n  var root, states = {}, $state, queue = {}, abstractKey = 'abstract';\n\n  // Builds state properties from definition passed to registerState()\n  var stateBuilder = {\n\n    // Derive parent state from a hierarchical name only if 'parent' is not explicitly defined.\n    // state.children = [];\n    // if (parent) parent.children.push(state);\n    parent: function(state) {\n      if (isDefined(state.parent) && state.parent) return findState(state.parent);\n      // regex matches any valid composite state name\n      // would match \"contact.list\" but not \"contacts\"\n      var compositeName = /^(.+)\\.[^.]+$/.exec(state.name);\n      return compositeName ? findState(compositeName[1]) : root;\n    },\n\n    // inherit 'data' from parent and override by own values (if any)\n    data: function(state) {\n      if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n      }\n      return state.data;\n    },\n\n    // Build a URLMatcher if necessary, either via a relative or absolute URL\n    url: function(state) {\n      var url = state.url, config = { params: state.params || {} };\n\n      if (isString(url)) {\n        if (url.charAt(0) == '^') return $urlMatcherFactory.compile(url.substring(1), config);\n        return (state.parent.navigable || root).url.concat(url, config);\n      }\n\n      if (!url || $urlMatcherFactory.isMatcher(url)) return url;\n      throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n    },\n\n    // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n    navigable: function(state) {\n      return state.url ? state : (state.parent ? state.parent.navigable : null);\n    },\n\n    // Own parameters for this state. state.url.params is already built at this point. Create and add non-url params\n    ownParams: function(state) {\n      var params = state.url && state.url.params || new $$UMFP.ParamSet();\n      forEach(state.params || {}, function(config, id) {\n        if (!params[id]) params[id] = new $$UMFP.Param(id, null, config, \"config\");\n      });\n      return params;\n    },\n\n    // Derive parameters for this state and ensure they're a super-set of parent's parameters\n    params: function(state) {\n      var ownParams = pick(state.ownParams, state.ownParams.$$keys());\n      return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();\n    },\n\n    // If there is no explicit multi-view configuration, make one up so we don't have\n    // to handle both cases in the view directive later. Note that having an explicit\n    // 'views' property will mean the default unnamed view properties are ignored. This\n    // is also a good time to resolve view names to absolute names, so everything is a\n    // straight lookup at link time.\n    views: function(state) {\n      var views = {};\n\n      forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {\n        if (name.indexOf('@') < 0) name += '@' + state.parent.name;\n        view.resolveAs = view.resolveAs || state.resolveAs || '$resolve';\n        views[name] = view;\n      });\n      return views;\n    },\n\n    // Keep a full path from the root down to this state as this is needed for state activation.\n    path: function(state) {\n      return state.parent ? state.parent.path.concat(state) : []; // exclude root from path\n    },\n\n    // Speed up $state.contains() as it's used a lot\n    includes: function(state) {\n      var includes = state.parent ? extend({}, state.parent.includes) : {};\n      includes[state.name] = true;\n      return includes;\n    },\n\n    $delegates: {}\n  };\n\n  function isRelative(stateName) {\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n  function findState(stateOrName, base) {\n    if (!stateOrName) return undefined;\n\n    var isStr = isString(stateOrName),\n        name  = isStr ? stateOrName : stateOrName.name,\n        path  = isRelative(name);\n\n    if (path) {\n      if (!base) throw new Error(\"No reference point given for path '\"  + name + \"'\");\n      base = findState(base);\n      \n      var rel = name.split(\".\"), i = 0, pathLength = rel.length, current = base;\n\n      for (; i < pathLength; i++) {\n        if (rel[i] === \"\" && i === 0) {\n          current = base;\n          continue;\n        }\n        if (rel[i] === \"^\") {\n          if (!current.parent) throw new Error(\"Path '\" + name + \"' not valid for state '\" + base.name + \"'\");\n          current = current.parent;\n          continue;\n        }\n        break;\n      }\n      rel = rel.slice(i).join(\".\");\n      name = current.name + (current.name && rel ? \".\" : \"\") + rel;\n    }\n    var state = states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    }\n    return undefined;\n  }\n\n  function queueState(parentName, state) {\n    if (!queue[parentName]) {\n      queue[parentName] = [];\n    }\n    queue[parentName].push(state);\n  }\n\n  function flushQueuedChildren(parentName) {\n    var queued = queue[parentName] || [];\n    while(queued.length) {\n      registerState(queued.shift());\n    }\n  }\n\n  function registerState(state) {\n    // Wrap a new object around the state so we can store our private details easily.\n    state = inherit(state, {\n      self: state,\n      resolve: state.resolve || {},\n      toString: function() { return this.name; }\n    });\n\n    var name = state.name;\n    if (!isString(name) || name.indexOf('@') >= 0) throw new Error(\"State must have a valid name\");\n    if (states.hasOwnProperty(name)) throw new Error(\"State '\" + name + \"' is already defined\");\n\n    // Get parent name\n    var parentName = (name.indexOf('.') !== -1) ? name.substring(0, name.lastIndexOf('.'))\n        : (isString(state.parent)) ? state.parent\n        : (isObject(state.parent) && isString(state.parent.name)) ? state.parent.name\n        : '';\n\n    // If parent is not registered yet, add state to queue and register later\n    if (parentName && !states[parentName]) {\n      return queueState(parentName, state.self);\n    }\n\n    for (var key in stateBuilder) {\n      if (isFunction(stateBuilder[key])) state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);\n    }\n    states[name] = state;\n\n    // Register the state in the global state list and with $urlRouter if necessary.\n    if (!state[abstractKey] && state.url) {\n      $urlRouterProvider.when(state.url, ['$match', '$stateParams', function ($match, $stateParams) {\n        if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {\n          $state.transitionTo(state, $match, { inherit: true, location: false });\n        }\n      }]);\n    }\n\n    // Register any queued children\n    flushQueuedChildren(name);\n\n    return state;\n  }\n\n  // Checks text to see if it looks like a glob.\n  function isGlob (text) {\n    return text.indexOf('*') > -1;\n  }\n\n  // Returns true if glob matches current $state name.\n  function doesStateMatchGlob (glob) {\n    var globSegments = glob.split('.'),\n        segments = $state.$current.name.split('.');\n\n    //match single stars\n    for (var i = 0, l = globSegments.length; i < l; i++) {\n      if (globSegments[i] === '*') {\n        segments[i] = '*';\n      }\n    }\n\n    //match greedy starts\n    if (globSegments[0] === '**') {\n       segments = segments.slice(indexOf(segments, globSegments[1]));\n       segments.unshift('**');\n    }\n    //match greedy ends\n    if (globSegments[globSegments.length - 1] === '**') {\n       segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);\n       segments.push('**');\n    }\n\n    if (globSegments.length != segments.length) {\n      return false;\n    }\n\n    return segments.join('') === globSegments.join('');\n  }\n\n\n  // Implicit root state that is always active\n  root = registerState({\n    name: '',\n    url: '^',\n    views: null,\n    'abstract': true\n  });\n  root.navigable = null;\n\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#decorator\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Allows you to extend (carefully) or override (at your own peril) the \n   * `stateBuilder` object used internally by `$stateProvider`. This can be used \n   * to add custom functionality to ui-router, for example inferring templateUrl \n   * based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new \n   * properties within the state's internal definition. There is currently no clear \n   * use-case for this beyond accessing internal states (i.e. $state.$current), \n   * however, expect this to become increasingly relevant as we introduce additional \n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of \n   * execution of the builder functions in non-deterministic. Builder functions \n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to \n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view \n   *   name (i.e. \"viewName@stateName\") and each value is the config object \n   *   (template, controller) for the view. Even when you don't use the views object \n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template \n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state, \n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state. \n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that \n   *   would pass a `$state.includes()` test.\n   *\n   * @example\n   * <pre>\n   * // Override the internal 'views' builder with a function that takes the state\n   * // definition, and a reference to the internal function being overridden:\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   var result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     var autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   *\n   * // ...\n   *\n   * $state.go('home');\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * </pre>\n   *\n   * @param {string} name The name of the builder function to decorate. \n   * @param {object} func A function that is responsible for decorating the original \n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  this.decorator = decorator;\n  function decorator(name, func) {\n    /*jshint validthis: true */\n    if (isString(name) && !isDefined(func)) {\n      return stateBuilder[name];\n    }\n    if (!isFunction(func) || !isString(name)) {\n      return this;\n    }\n    if (stateBuilder[name] && !stateBuilder.$delegates[name]) {\n      stateBuilder.$delegates[name] = stateBuilder[name];\n    }\n    stateBuilder[name] = func;\n    return this;\n  }\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$stateProvider#state\n   * @methodOf ui.router.state.$stateProvider\n   *\n   * @description\n   * Registers a state configuration under a given state name. The stateConfig object\n   * has the following acceptable properties.\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} stateConfig State configuration object.\n   * @param {string|function=} stateConfig.template\n   * <a id='template'></a>\n   *   html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property \n   *   takes precedence over templateUrl.\n   *   \n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <pre>template:\n   *   \"<h1>inline template definition</h1>\" +\n   *   \"<div ui-view></div>\"</pre>\n   * <pre>template: function(params) {\n   *       return \"<h1>generated template</h1>\"; }</pre>\n   * </div>\n   *\n   * @param {string|function=} stateConfig.templateUrl\n   * <a id='templateUrl'></a>\n   *\n   *   path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *   \n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n   *     applying the current state\n   *\n   * <pre>templateUrl: \"home.html\"</pre>\n   * <pre>templateUrl: function(params) {\n   *     return myTemplates[params.pageId]; }</pre>\n   *\n   * @param {function=} stateConfig.templateProvider\n   * <a id='templateProvider'></a>\n   *    Provider function that returns HTML content string.\n   * <pre> templateProvider:\n   *       function(MyTemplateService, params) {\n   *         return MyTemplateService.getTemplate(params.pageId);\n   *       }</pre>\n   *\n   * @param {string|function=} stateConfig.controller\n   * <a id='controller'></a>\n   *\n   *  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *   Optionally, the ControllerAs may be declared here.\n   * <pre>controller: \"MyRegisteredController\"</pre>\n   * <pre>controller:\n   *     \"MyRegisteredController as fooCtrl\"}</pre>\n   * <pre>controller: function($scope, MyService) {\n   *     $scope.data = MyService.getData(); }</pre>\n   *\n   * @param {function=} stateConfig.controllerProvider\n   * <a id='controllerProvider'></a>\n   *\n   * Injectable provider function that returns the actual controller or string.\n   * <pre>controllerProvider:\n   *   function(MyResolveData) {\n   *     if (MyResolveData.foo)\n   *       return \"FooCtrl\"\n   *     else if (MyResolveData.bar)\n   *       return \"BarCtrl\";\n   *     else return function($scope) {\n   *       $scope.baz = \"Qux\";\n   *     }\n   *   }</pre>\n   *\n   * @param {string=} stateConfig.controllerAs\n   * <a id='controllerAs'></a>\n   * \n   * A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   * <pre>controllerAs: \"myCtrl\"</pre>\n   *\n   * @param {string|object=} stateConfig.parent\n   * <a id='parent'></a>\n   * Optionally specifies the parent state of this state.\n   *\n   * <pre>parent: 'parentState'</pre>\n   * <pre>parent: parentState // JS variable</pre>\n   *\n   * @param {object=} stateConfig.resolve\n   * <a id='resolve'></a>\n   *\n   * An optional map&lt;string, function&gt; of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises, \n   *   the router will wait for them all to be resolved before the controller is instantiated.\n   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n   *   and the values of the resolved promises are injected into any controllers that reference them.\n   *   If any  of the promises are rejected the $stateChangeError event is fired.\n   *\n   *   The map object is:\n   *   \n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n   *     it is injected and return value it treated as dependency. If result is a promise, it is \n   *     resolved before its value is injected into controller.\n   *\n   * <pre>resolve: {\n   *     myResolve1:\n   *       function($http, $stateParams) {\n   *         return $http.get(\"/api/foos/\"+stateParams.fooID);\n   *       }\n   *     }</pre>\n   *\n   * @param {string=} stateConfig.url\n   * <a id='url'></a>\n   *\n   *   A url fragment with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any \n   *   parameters that were passed.\n   *\n   *   (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n   *   more details on acceptable patterns )\n   *\n   * examples:\n   * <pre>url: \"/home\"\n   * url: \"/users/:userid\"\n   * url: \"/books/{bookid:[a-zA-Z_-]}\"\n   * url: \"/books/{categoryid:int}\"\n   * url: \"/books/{publishername:string}/{categoryid:int}\"\n   * url: \"/messages?before&after\"\n   * url: \"/messages?{before:date}&{after:date}\"\n   * url: \"/messages/:mailboxid?{before:date}&{after:date}\"\n   * </pre>\n   *\n   * @param {object=} stateConfig.views\n   * <a id='views'></a>\n   * an optional map&lt;string, object&gt; which defined multiple views, or targets views\n   * manually/explicitly.\n   *\n   * Examples:\n   *\n   * Targets three named `ui-view`s in the parent state's template\n   * <pre>views: {\n   *     header: {\n   *       controller: \"headerCtrl\",\n   *       templateUrl: \"header.html\"\n   *     }, body: {\n   *       controller: \"bodyCtrl\",\n   *       templateUrl: \"body.html\"\n   *     }, footer: {\n   *       controller: \"footCtrl\",\n   *       templateUrl: \"footer.html\"\n   *     }\n   *   }</pre>\n   *\n   * Targets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n   * <pre>views: {\n   *     'header@top': {\n   *       controller: \"msgHeaderCtrl\",\n   *       templateUrl: \"msgHeader.html\"\n   *     }, 'body': {\n   *       controller: \"messagesCtrl\",\n   *       templateUrl: \"messages.html\"\n   *     }\n   *   }</pre>\n   *\n   * @param {boolean=} [stateConfig.abstract=false]\n   * <a id='abstract'></a>\n   * An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   * <pre>abstract: true</pre>\n   *\n   * @param {function=} stateConfig.onEnter\n   * <a id='onEnter'></a>\n   *\n   * Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onEnter: function(MyService, $stateParams) {\n   *     MyService.foo($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {function=} stateConfig.onExit\n   * <a id='onExit'></a>\n   *\n   * Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to explicitly annotate this function,\n   * because it won't be automatically annotated by your build tools.\n   *\n   * <pre>onExit: function(MyService, $stateParams) {\n   *     MyService.cleanup($stateParams.myParam);\n   * }</pre>\n   *\n   * @param {boolean=} [stateConfig.reloadOnSearch=true]\n   * <a id='reloadOnSearch'></a>\n   *\n   * If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). \n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   * <pre>reloadOnSearch: false</pre>\n   *\n   * @param {object=} stateConfig.data\n   * <a id='data'></a>\n   *\n   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is\n   *   prototypally inherited.  In other words, adding a data property to a state adds it to\n   *   the entire subtree via prototypal inheritance.\n   *\n   * <pre>data: {\n   *     requiredRole: 'foo'\n   * } </pre>\n   *\n   * @param {object=} stateConfig.params\n   * <a id='params'></a>\n   *\n   * A map which optionally configures parameters declared in the `url`, or\n   *   defines additional non-url parameters.  For each parameter being\n   *   configured, add a configuration object keyed to the name of the parameter.\n   *\n   *   Each parameter configuration object may contain the following properties:\n   *\n   *   - ** value ** - {object|function=}: specifies the default value for this\n   *     parameter.  This implicitly sets this parameter as optional.\n   *\n   *     When UI-Router routes to a state and no value is\n   *     specified for this parameter in the URL or transition, the\n   *     default value will be used instead.  If `value` is a function,\n   *     it will be injected and invoked, and the return value used.\n   *\n   *     *Note*: `undefined` is treated as \"no default value\" while `null`\n   *     is treated as \"the default value is `null`\".\n   *\n   *     *Shorthand*: If you only need to configure the default value of the\n   *     parameter, you may use a shorthand syntax.   In the **`params`**\n   *     map, instead mapping the param name to a full parameter configuration\n   *     object, simply set map it to the default parameter value, e.g.:\n   *\n   * <pre>// define a parameter's default value\n   * params: {\n   *     param1: { value: \"defaultValue\" }\n   * }\n   * // shorthand default values\n   * params: {\n   *     param1: \"defaultValue\",\n   *     param2: \"param2Default\"\n   * }</pre>\n   *\n   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n   *     treated as an array of values.  If you specified a Type, the value will be\n   *     treated as an array of the specified Type.  Note: query parameter values\n   *     default to a special `\"auto\"` mode.\n   *\n   *     For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n   *     value (e.g.: `{ foo: '1' }`).\n   *\n   * <pre>params: {\n   *     param1: { array: true }\n   * }</pre>\n   *\n   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the\n   *     configured default squash policy.\n   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n   *\n   *   There are three squash settings:\n   *\n   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.\n   *       This can allow for cleaner looking URLs.\n   *     - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n   *\n   * <pre>params: {\n   *     param1: {\n   *       value: \"defaultId\",\n   *       squash: true\n   * } }\n   * // squash \"defaultValue\" to \"~\"\n   * params: {\n   *     param1: {\n   *       value: \"defaultValue\",\n   *       squash: \"~\"\n   * } }\n   * </pre>\n   *\n   *\n   * @example\n   * <pre>\n   * // Some state name examples\n   *\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * </pre>\n   *\n   */\n  this.state = state;\n  function state(name, definition) {\n    /*jshint validthis: true */\n    if (isObject(name)) definition = name;\n    else definition.name = name;\n    registerState(definition);\n    return this;\n  }\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$state\n   *\n   * @requires $rootScope\n   * @requires $q\n   * @requires ui.router.state.$view\n   * @requires $injector\n   * @requires ui.router.util.$resolve\n   * @requires ui.router.state.$stateParams\n   * @requires ui.router.router.$urlRouter\n   *\n   * @property {object} params A param object, e.g. {sectionId: section.id)}, that \n   * you'd like to test against the current active state.\n   * @property {object} current A reference to the state's config object. However \n   * you passed it in. Useful for accessing custom data.\n   * @property {object} transition Currently pending transition. A promise that'll \n   * resolve or reject.\n   *\n   * @description\n   * `$state` service is responsible for representing states as well as transitioning\n   * between them. It also provides interfaces to ask for current state or even states\n   * you're coming from.\n   */\n  this.$get = $get;\n  $get.$inject = ['$rootScope', '$q', '$view', '$injector', '$resolve', '$stateParams', '$urlRouter', '$location', '$urlMatcherFactory'];\n  function $get(   $rootScope,   $q,   $view,   $injector,   $resolve,   $stateParams,   $urlRouter,   $location,   $urlMatcherFactory) {\n\n    var TransitionSupersededError = new Error('transition superseded');\n\n    var TransitionSuperseded = silenceUncaughtInPromise($q.reject(TransitionSupersededError));\n    var TransitionPrevented = silenceUncaughtInPromise($q.reject(new Error('transition prevented')));\n    var TransitionAborted = silenceUncaughtInPromise($q.reject(new Error('transition aborted')));\n    var TransitionFailed = silenceUncaughtInPromise($q.reject(new Error('transition failed')));\n\n    // Handles the case where a state which is the target of a transition is not found, and the user\n    // can optionally retry or defer the transition\n    function handleRedirect(redirect, state, params, options) {\n      /**\n       * @ngdoc event\n       * @name ui.router.state.$state#$stateNotFound\n       * @eventOf ui.router.state.$state\n       * @eventType broadcast on root scope\n       * @description\n       * Fired when a requested state **cannot be found** using the provided state name during transition.\n       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by\n       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\n       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the\n       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.\n       *\n       * @param {Object} event Event object.\n       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.\n       * @param {State} fromState Current state object.\n       * @param {Object} fromParams Current state params.\n       *\n       * @example\n       *\n       * <pre>\n       * // somewhere, assume lazy.state has not been defined\n       * $state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n       *\n       * // somewhere else\n       * $scope.$on('$stateNotFound',\n       * function(event, unfoundState, fromState, fromParams){\n       *     console.log(unfoundState.to); // \"lazy.state\"\n       *     console.log(unfoundState.toParams); // {a:1, b:2}\n       *     console.log(unfoundState.options); // {inherit:false} + default options\n       * })\n       * </pre>\n       */\n      var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);\n\n      if (evt.defaultPrevented) {\n        $urlRouter.update();\n        return TransitionAborted;\n      }\n\n      if (!evt.retry) {\n        return null;\n      }\n\n      // Allow the handler to return a promise to defer state lookup retry\n      if (options.$retry) {\n        $urlRouter.update();\n        return TransitionFailed;\n      }\n      var retryTransition = $state.transition = $q.when(evt.retry);\n\n      retryTransition.then(function() {\n        if (retryTransition !== $state.transition) {\n          $rootScope.$broadcast('$stateChangeCancel', redirect.to, redirect.toParams, state, params);\n          return TransitionSuperseded;\n        }\n        redirect.options.$retry = true;\n        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);\n      }, function() {\n        return TransitionAborted;\n      });\n      $urlRouter.update();\n\n      return retryTransition;\n    }\n\n    root.locals = { resolve: null, globals: { $stateParams: {} } };\n\n    $state = {\n      params: {},\n      current: root.self,\n      $current: root,\n      transition: null\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#reload\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method that force reloads the current state. All resolves are re-resolved,\n     * controllers reinstantiated, and events re-fired.\n     *\n     * @example\n     * <pre>\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n     *\n     * @param {string=|object=} state - A state name or a state object, which is the root of the resolves to be re-resolved.\n     * @example\n     * <pre>\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n     * //and current state is 'contacts.detail.item'\n     * var app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * </pre>\n     *\n     * `reload()` is just an alias for:\n     * <pre>\n     * $state.transitionTo($state.current, $stateParams, { \n     *   reload: true, inherit: false, notify: true\n     * });\n     * </pre>\n\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.reload = function reload(state) {\n      return $state.transitionTo($state.current, $stateParams, { reload: state || true, inherit: false, notify: true});\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#go\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Convenience method for transitioning to a new state. `$state.go` calls \n     * `$state.transitionTo` internally but automatically sets options to \n     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. \n     * This allows you to easily use an absolute or relative to path and specify \n     * only the parameters you'd like to update (while letting unspecified parameters \n     * inherit from the currently active ancestor states).\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * </pre>\n     * <img src='../ngdoc_assets/StateGoExamples.png'/>\n     *\n     * @param {string} to Absolute state name or relative state path. Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to a parent state\n     * - `$state.go('^.sibling')` - will go to a sibling state\n     * - `$state.go('.child.grandchild')` - will go to grandchild state\n     *\n     * @param {object=} params A map of the parameters that will be sent to the state, \n     * will populate $stateParams. Any parameters that are not specified will be inherited from currently \n     * defined parameters. Only parameters specified in the state definition can be overridden, new \n     * parameters will be ignored. This allows, for example, going to a sibling state that shares parameters\n     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\n     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child\n     * will get you all current parameters, etc.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n     *    have changed.  It will reload the resolves and views of the current state and parent states.\n     *    If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n     *    the transition reloads the resolves and views for that matched state, and all its children states.\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     *\n     * Possible success values:\n     *\n     * - $state.current\n     *\n     * <br/>Possible rejection values:\n     *\n     * - 'transition superseded' - when a newer transition has been started after this one\n     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n     *   when a `$stateNotFound` `event.retry` promise errors.\n     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n     * - *resolve error* - when an error has occurred with a `resolve`\n     *\n     */\n    $state.go = function go(to, params, options) {\n      return $state.transitionTo(to, params, extend({ inherit: true, relative: $state.$current }, options));\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#transitionTo\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\n     * uses `transitionTo` internally. `$state.go` is recommended in most situations.\n     *\n     * @example\n     * <pre>\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * </pre>\n     *\n     * @param {string} to State name.\n     * @param {object=} toParams A map of the parameters that will be sent to the state,\n     * will populate $stateParams.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n     *    will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n     * - **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n     *    use this when you want to force a reload when *everything* is the same, including search params.\n     *    if String, then will reload the state with the name given in reload, and any children.\n     *    if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.\n     *\n     * @returns {promise} A promise representing the state of the new transition. See\n     * {@link ui.router.state.$state#methods_go $state.go}.\n     */\n    $state.transitionTo = function transitionTo(to, toParams, options) {\n      toParams = toParams || {};\n      options = extend({\n        location: true, inherit: false, relative: null, notify: true, reload: false, $retry: false\n      }, options || {});\n\n      var from = $state.$current, fromParams = $state.params, fromPath = from.path;\n      var evt, toState = findState(to, options.relative);\n\n      // Store the hash param for later (since it will be stripped out by various methods)\n      var hash = toParams['#'];\n\n      if (!isDefined(toState)) {\n        var redirect = { to: to, toParams: toParams, options: options };\n        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);\n\n        if (redirectResult) {\n          return redirectResult;\n        }\n\n        // Always retry once if the $stateNotFound was not prevented\n        // (handles either redirect changed or state lazy-definition)\n        to = redirect.to;\n        toParams = redirect.toParams;\n        options = redirect.options;\n        toState = findState(to, options.relative);\n\n        if (!isDefined(toState)) {\n          if (!options.relative) throw new Error(\"No such state '\" + to + \"'\");\n          throw new Error(\"Could not resolve '\" + to + \"' from state '\" + options.relative + \"'\");\n        }\n      }\n      if (toState[abstractKey]) throw new Error(\"Cannot transition to abstract state '\" + to + \"'\");\n      if (options.inherit) toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);\n      if (!toState.params.$$validates(toParams)) return TransitionFailed;\n\n      toParams = toState.params.$$values(toParams);\n      to = toState;\n\n      var toPath = to.path;\n\n      // Starting from the root of the path, keep all levels that haven't changed\n      var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];\n\n      if (!options.reload) {\n        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      } else if (isString(options.reload) || isObject(options.reload)) {\n        if (isObject(options.reload) && !options.reload.name) {\n          throw new Error('Invalid reload state object');\n        }\n        \n        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);\n        if (options.reload && !reloadState) {\n          throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        }\n\n        while (state && state === fromPath[keep] && state !== reloadState) {\n          locals = toLocals[keep] = state.locals;\n          keep++;\n          state = toPath[keep];\n        }\n      }\n\n      // If we're going to the same state and all locals are kept, we've got nothing to do.\n      // But clear 'transition', as we still want to cancel any other pending transitions.\n      // TODO: We may not want to bump 'transition' if we're called from a location change\n      // that we've initiated ourselves, because we might accidentally abort a legitimate\n      // transition initiated from code?\n      if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {\n        if (hash) toParams['#'] = hash;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);\n        if (options.location && to.navigable && to.navigable.url) {\n          $urlRouter.push(to.navigable.url, toParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n          $urlRouter.update(true);\n        }\n        $state.transition = null;\n        return $q.when($state.current);\n      }\n\n      // Filter parameters before we pass them to event handlers etc.\n      toParams = filterByKeys(to.params.$$keys(), toParams || {});\n      \n      // Re-add the saved hash before we start returning things or broadcasting $stateChangeStart\n      if (hash) toParams['#'] = hash;\n      \n      // Broadcast start event and cancel the transition if requested\n      if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeStart\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when the state transition **begins**. You can use `event.preventDefault()`\n         * to prevent the transition from happening and then the transition promise will be\n         * rejected with a `'transition prevented'` value.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         *\n         * @example\n         *\n         * <pre>\n         * $rootScope.$on('$stateChangeStart',\n         * function(event, toState, toParams, fromState, fromParams){\n         *     event.preventDefault();\n         *     // transitionTo() promise will be rejected with\n         *     // a 'transition prevented' error\n         * })\n         * </pre>\n         */\n        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          //Don't update and resync url if there's been a new transition started. see issue #2238, #600\n          if ($state.transition == null) $urlRouter.update();\n          return TransitionPrevented;\n        }\n      }\n\n      // Resolve locals for the remaining states, but don't update any global state just\n      // yet -- if anything fails to resolve the current state needs to remain untouched.\n      // We also set up an inheritance chain for the locals here. This allows the view directive\n      // to quickly look up the correct definition for each view in the current state. Even\n      // though we create the locals object itself outside resolveState(), it is initially\n      // empty and gets filled asynchronously. We need to keep track of the promise for the\n      // (fully resolved) current locals, and pass this down the chain.\n      var resolved = $q.when(locals);\n\n      for (var l = keep; l < toPath.length; l++, state = toPath[l]) {\n        locals = toLocals[l] = inherit(locals);\n        resolved = resolveState(state, toParams, state === to, resolved, locals, options);\n      }\n\n      // Once everything is resolved, we are ready to perform the actual transition\n      // and return a promise for the new state. We also keep track of what the\n      // current promise is, so that we can detect overlapping transitions and\n      // keep only the outcome of the last transition.\n      var transition = $state.transition = resolved.then(function () {\n        var l, entering, exiting;\n\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        // Exit 'from' states not kept\n        for (l = fromPath.length - 1; l >= keep; l--) {\n          exiting = fromPath[l];\n          if (exiting.self.onExit) {\n            $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);\n          }\n          exiting.locals = null;\n        }\n\n        // Enter 'to' states not kept\n        for (l = keep; l < toPath.length; l++) {\n          entering = toPath[l];\n          entering.locals = toLocals[l];\n          if (entering.self.onEnter) {\n            $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);\n          }\n        }\n\n        // Run it again, to catch any transitions in callbacks\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        // Update globals in $state\n        $state.$current = to;\n        $state.current = to.self;\n        $state.params = toParams;\n        copy($state.params, $stateParams);\n        $state.transition = null;\n\n        if (options.location && to.navigable) {\n          $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {\n            $$avoidResync: true, replace: options.location === 'replace'\n          });\n        }\n\n        if (options.notify) {\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeSuccess\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired once the state transition is **complete**.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         */\n          $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);\n        }\n        $urlRouter.update(true);\n\n        return $state.current;\n      }).then(null, function (error) {\n        // propagate TransitionSuperseded error without emitting $stateChangeCancel\n        // as it was already emitted in the success handler above\n        if (error === TransitionSupersededError) return TransitionSuperseded;\n\n        if ($state.transition !== transition) {\n          $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);\n          return TransitionSuperseded;\n        }\n\n        $state.transition = null;\n        /**\n         * @ngdoc event\n         * @name ui.router.state.$state#$stateChangeError\n         * @eventOf ui.router.state.$state\n         * @eventType broadcast on root scope\n         * @description\n         * Fired when an **error occurs** during transition. It's important to note that if you\n         * have any errors in your resolve functions (javascript errors, non-existent services, etc)\n         * they will not throw traditionally. You must listen for this $stateChangeError event to\n         * catch **ALL** errors.\n         *\n         * @param {Object} event Event object.\n         * @param {State} toState The state being transitioned to.\n         * @param {Object} toParams The params supplied to the `toState`.\n         * @param {State} fromState The current state, pre-transition.\n         * @param {Object} fromParams The params supplied to the `fromState`.\n         * @param {Error} error The resolve error object.\n         */\n        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);\n\n        if (!evt.defaultPrevented) {\n          $urlRouter.update();\n        }\n\n        return $q.reject(error);\n      });\n\n      return transition;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#is\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},\n     * but only checks for the full state name. If params is supplied then it will be\n     * tested for strict equality against the current active params object, so all params\n     * must match with none missing and no extras.\n     *\n     * @example\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     * test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it is the state.\n     */\n    $state.is = function is(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) { return undefined; }\n      if ($state.$current !== state) { return false; }\n      return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#includes\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * @example\n     * Partial and relative names\n     * <pre>\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     *\n     * // Using relative names (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * <div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n     * </pre>\n     *\n     * Basic globbing patterns\n     * <pre>\n     * $state.$current.name = 'contacts.details.item.url';\n     *\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * </pre>\n     *\n     * @param {string} stateOrName A partial name, relative name, or glob pattern\n     * to be searched for within the current state name.\n     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,\n     * that you'd like to test against the current active state.\n     * @param {object=} options An options object.  The options are:\n     *\n     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n     * .includes will test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    $state.includes = function includes(stateOrName, params, options) {\n      options = extend({ relative: $state.$current }, options || {});\n      if (isString(stateOrName) && isGlob(stateOrName)) {\n        if (!doesStateMatchGlob(stateOrName)) {\n          return false;\n        }\n        stateOrName = $state.$current.name;\n      }\n\n      var state = findState(stateOrName, options.relative);\n      if (!isDefined(state)) { return undefined; }\n      if (!isDefined($state.$current.includes[state.name])) { return false; }\n      if (!params) { return true; }\n\n      var keys = objectKeys(params);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i], paramDef = state.params[key];\n        if (paramDef && !paramDef.type.equals($stateParams[key], params[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#href\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * A url generation method that returns the compiled url for the given state populated with the given params.\n     *\n     * @example\n     * <pre>\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * </pre>\n     *\n     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.\n     * @param {object=} params An object of parameter values to fill the state's required parameters.\n     * @param {object=} options Options object. The options are:\n     *\n     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n     *    ancestor with a valid url).\n     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n     *    defines which state to be relative from.\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     * \n     * @returns {string} compiled state url\n     */\n    $state.href = function href(stateOrName, params, options) {\n      options = extend({\n        lossy:    true,\n        inherit:  true,\n        absolute: false,\n        relative: $state.$current\n      }, options || {});\n\n      var state = findState(stateOrName, options.relative);\n\n      if (!isDefined(state)) return null;\n      if (options.inherit) params = inheritParams($stateParams, params || {}, $state.$current, state);\n      \n      var nav = (state && options.lossy) ? state.navigable : state;\n\n      if (!nav || nav.url === undefined || nav.url === null) {\n        return null;\n      }\n      return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), {\n        absolute: options.absolute\n      });\n    };\n\n    /**\n     * @ngdoc function\n     * @name ui.router.state.$state#get\n     * @methodOf ui.router.state.$state\n     *\n     * @description\n     * Returns the state configuration object for any specific state or all states.\n     *\n     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for\n     * the requested state. If not provided, returns an array of ALL state configs.\n     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.\n     * @returns {Object|Array} State configuration object or array of all objects.\n     */\n    $state.get = function (stateOrName, context) {\n      if (arguments.length === 0) return map(objectKeys(states), function(name) { return states[name].self; });\n      var state = findState(stateOrName, context || $state.$current);\n      return (state && state.self) ? state.self : null;\n    };\n\n    function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {\n      // Make a restricted $stateParams with only the parameters that apply to this state if\n      // necessary. In addition to being available to the controller and onEnter/onExit callbacks,\n      // we also need $stateParams to be available for any $injector calls we make during the\n      // dependency resolution process.\n      var $stateParams = (paramsAreFiltered) ? params : filterByKeys(state.params.$$keys(), params);\n      var locals = { $stateParams: $stateParams };\n\n      // Resolve 'global' dependencies for the state, i.e. those not specific to a view.\n      // We're also including $stateParams in this; that way the parameters are restricted\n      // to the set that should be visible to the state, and are independent of when we update\n      // the global $state and $stateParams values.\n      dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);\n      var promises = [dst.resolve.then(function (globals) {\n        dst.globals = globals;\n      })];\n      if (inherited) promises.push(inherited);\n\n      function resolveViews() {\n        var viewsPromises = [];\n\n        // Resolve template and dependencies for all views.\n        forEach(state.views, function (view, name) {\n          var injectables = (view.resolve && view.resolve !== state.resolve ? view.resolve : {});\n          injectables.$template = [ function () {\n            return $view.load(name, { view: view, locals: dst.globals, params: $stateParams, notify: options.notify }) || '';\n          }];\n\n          viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {\n            // References to the controller (only instantiated at link time)\n            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {\n              var injectLocals = angular.extend({}, injectables, dst.globals);\n              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);\n            } else {\n              result.$$controller = view.controller;\n            }\n            // Provide access to the state itself for internal use\n            result.$$state = state;\n            result.$$controllerAs = view.controllerAs;\n            result.$$resolveAs = view.resolveAs;\n            dst[name] = result;\n          }));\n        });\n\n        return $q.all(viewsPromises).then(function(){\n          return dst.globals;\n        });\n      }\n\n      // Wait for all the promises and then return the activation object\n      return $q.all(promises).then(resolveViews).then(function (values) {\n        return dst;\n      });\n    }\n\n    return $state;\n  }\n\n  function shouldSkipReload(to, toParams, from, fromParams, locals, options) {\n    // Return true if there are no differences in non-search (path/object) params, false if there are differences\n    function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {\n      // Identify whether all the parameters that differ between `fromParams` and `toParams` were search params.\n      function notSearchParam(key) {\n        return fromAndToState.params[key].location != \"search\";\n      }\n      var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);\n      var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));\n      var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);\n      return nonQueryParamSet.$$equals(fromParams, toParams);\n    }\n\n    // If reload was not explicitly requested\n    // and we're transitioning to the same state we're already in\n    // and    the locals didn't change\n    //     or they changed in a way that doesn't merit reloading\n    //        (reloadOnParams:false, or reloadOnSearch.false and only search params changed)\n    // Then return true.\n    if (!options.reload && to === from &&\n      (locals === from.locals || (to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams)))) {\n      return true;\n    }\n  }\n}\n\nangular.module('ui.router.state')\n  .factory('$stateParams', function () { return {}; })\n  .constant(\"$state.runtime\", { autoinject: true })\n  .provider('$state', $StateProvider)\n  // Inject $state to initialize when entering runtime. #2574\n  .run(['$injector', function ($injector) {\n    // Allow tests (stateSpec.js) to turn this off by defining this constant\n    if ($injector.get(\"$state.runtime\").autoinject) {\n      $injector.get('$state');\n    }\n  }]);\n\n\n$ViewProvider.$inject = [];\nfunction $ViewProvider() {\n\n  this.$get = $get;\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$view\n   *\n   * @requires ui.router.util.$templateFactory\n   * @requires $rootScope\n   *\n   * @description\n   *\n   */\n  $get.$inject = ['$rootScope', '$templateFactory'];\n  function $get(   $rootScope,   $templateFactory) {\n    return {\n      // $view.load('full.viewName', { template: ..., controller: ..., resolve: ..., async: false, params: ... })\n      /**\n       * @ngdoc function\n       * @name ui.router.state.$view#load\n       * @methodOf ui.router.state.$view\n       *\n       * @description\n       *\n       * @param {string} name name\n       * @param {object} options option object.\n       */\n      load: function load(name, options) {\n        var result, defaults = {\n          template: null, controller: null, view: null, locals: null, notify: true, async: true, params: {}\n        };\n        options = extend(defaults, options);\n\n        if (options.view) {\n          result = $templateFactory.fromConfig(options.view, options.params, options.locals);\n        }\n        return result;\n      }\n    };\n  }\n}\n\nangular.module('ui.router.state').provider('$view', $ViewProvider);\n\n/**\n * @ngdoc object\n * @name ui.router.state.$uiViewScrollProvider\n *\n * @description\n * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.\n */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  /**\n   * @ngdoc function\n   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll\n   * @methodOf ui.router.state.$uiViewScrollProvider\n   *\n   * @description\n   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\n   * scrolling based on the url anchor.\n   */\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  /**\n   * @ngdoc object\n   * @name ui.router.state.$uiViewScroll\n   *\n   * @requires $anchorScroll\n   * @requires $timeout\n   *\n   * @description\n   * When called with a jqLite element, it scrolls the element into view (after a\n   * `$timeout` so the DOM has time to refresh).\n   *\n   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.\n   */\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element) {\n      return $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-view\n *\n * @requires ui.router.state.$state\n * @requires $compile\n * @requires $controller\n * @requires $injector\n * @requires ui.router.state.$uiViewScroll\n * @requires $document\n *\n * @restrict ECA\n *\n * @description\n * The ui-view directive tells $state where to place your templates.\n *\n * @param {string=} name A view name. The name should be unique amongst the other views in the\n * same state. You can have views of the same name that live in different states.\n *\n * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window\n * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\n * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you\n * scroll ui-view elements into view when they are populated during a state activation.\n *\n * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*\n *\n * @param {string=} onload Expression to evaluate whenever the view updates.\n *\n * @example\n * A view can be unnamed or named.\n * <pre>\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n * </pre>\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n * <pre>\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * </pre>\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#methods_state `views`}\n * config property, by name, in this case an empty name:\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n * <pre>\n * <div ui-view=\"main\"></div>\n * </pre>\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Really though, you'll use views to set up multiple views:\n * <pre>\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * </pre>\n *\n * <pre>\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }    \n * })\n * </pre>\n *\n * Examples for `autoscroll`:\n *\n * <pre>\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * </pre>\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * Example usage of $resolve in a view template\n * <pre>\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * </pre>\n */\n$ViewDirective.$inject = ['$state', '$injector', '$uiViewScroll', '$interpolate', '$q'];\nfunction $ViewDirective(   $state,   $injector,   $uiViewScroll,   $interpolate,   $q) {\n\n  function getService() {\n    return ($injector.has) ? function(service) {\n      return $injector.has(service) ? $injector.get(service) : null;\n    } : function(service) {\n      try {\n        return $injector.get(service);\n      } catch (e) {\n        return null;\n      }\n    };\n  }\n\n  var service = getService(),\n      $animator = service('$animator'),\n      $animate = service('$animate');\n\n  // Returns a set of DOM manipulation functions based on which Angular version\n  // it should use\n  function getRenderer(attrs, scope) {\n    var statics = function() {\n      return {\n        enter: function (element, target, cb) { target.after(element); cb(); },\n        leave: function (element, cb) { element.remove(); cb(); }\n      };\n    };\n\n    if ($animate) {\n      return {\n        enter: function(element, target, cb) {\n          if (angular.version.minor > 2) {\n            $animate.enter(element, null, target).then(cb);\n          } else {\n            $animate.enter(element, null, target, cb);\n          }\n        },\n        leave: function(element, cb) {\n          if (angular.version.minor > 2) {\n            $animate.leave(element).then(cb);\n          } else {\n            $animate.leave(element, cb);\n          }\n        }\n      };\n    }\n\n    if ($animator) {\n      var animate = $animator && $animator(scope, attrs);\n\n      return {\n        enter: function(element, target, cb) {animate.enter(element, null, target); cb(); },\n        leave: function(element, cb) { animate.leave(element); cb(); }\n      };\n    }\n\n    return statics();\n  }\n\n  var directive = {\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement, tAttrs, $transclude) {\n      return function (scope, $element, attrs) {\n        var previousEl, currentEl, currentScope, latestLocals,\n            onloadExp     = attrs.onload || '',\n            autoScrollExp = attrs.autoscroll,\n            renderer      = getRenderer(attrs, scope),\n            inherited     = $element.inheritedData('$uiView');\n\n        scope.$on('$stateChangeSuccess', function() {\n          updateView(false);\n        });\n\n        updateView(true);\n\n        function cleanupLastView() {\n          if (previousEl) {\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            var $uiViewData = currentEl.data('$uiViewAnim');\n            renderer.leave(currentEl, function() {\n              $uiViewData.$$animLeave.resolve();\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(firstTime) {\n          var newScope,\n              name            = getUiViewName(scope, attrs, $element, $interpolate),\n              previousLocals  = name && $state.$current && $state.$current.locals[name];\n\n          if (!firstTime && previousLocals === latestLocals) return; // nothing to do\n          newScope = scope.$new();\n          latestLocals = $state.$current.locals[name];\n\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoading\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           *\n           * Fired once the view **begins loading**, *before* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          newScope.$emit('$viewContentLoading', name);\n\n          var clone = $transclude(newScope, function(clone) {\n            var animEnter = $q.defer(), animLeave = $q.defer();\n            var viewAnimData = {\n              $animEnter: animEnter.promise,\n              $animLeave: animLeave.promise,\n              $$animLeave: animLeave\n            };\n\n            clone.data('$uiViewAnim', viewAnimData);\n            renderer.enter(clone, $element, function onUiViewEnter() {\n              animEnter.resolve();\n              if(currentScope) {\n                currentScope.$emit('$viewContentAnimationEnded');\n              }\n\n              if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n            cleanupLastView();\n          });\n\n          currentEl = clone;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          currentScope.$emit('$viewContentLoaded', name);\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$state', '$interpolate'];\nfunction $ViewDirectiveFill (  $compile,   $controller,   $state,   $interpolate) {\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement) {\n      var initial = tElement.html();\n      return function (scope, $element, attrs) {\n        var current = $state.$current,\n            name = getUiViewName(scope, attrs, $element, $interpolate),\n            locals  = current && current.locals[name];\n\n        if (! locals) {\n          return;\n        }\n\n        $element.data('$uiView', { name: name, state: locals.$$state });\n        $element.html(locals.$template ? locals.$template : initial);\n\n        var resolveData = angular.extend({}, locals);\n        scope[locals.$$resolveAs] = resolveData;\n\n        var link = $compile($element.contents());\n\n        if (locals.$$controller) {\n          locals.$scope = scope;\n          locals.$element = $element;\n          var controller = $controller(locals.$$controller, locals);\n          if (locals.$$controllerAs) {\n            scope[locals.$$controllerAs] = controller;\n            scope[locals.$$controllerAs][locals.$$resolveAs] = resolveData;\n          }\n          if (isFunction(controller.$onInit)) controller.$onInit();\n          $element.data('$ngControllerController', controller);\n          $element.children().data('$ngControllerController', controller);\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/**\n * Shared ui-view code for both directives:\n * Given scope, element, and its attributes, return the view's name\n */\nfunction getUiViewName(scope, attrs, element, $interpolate) {\n  var name = $interpolate(attrs.uiView || attrs.name || '')(scope);\n  var uiViewCreatedBy = element.inheritedData('$uiView');\n  return name.indexOf('@') >= 0 ?  name :  (name + '@' + (uiViewCreatedBy ? uiViewCreatedBy.state.name : ''));\n}\n\nangular.module('ui.router.state').directive('uiView', $ViewDirective);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n\nfunction parseStateRef(ref, current) {\n  var preparsed = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (preparsed) ref = current + '(' + preparsed[1] + ')';\n  parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1], paramExpr: parsed[3] || null };\n}\n\nfunction stateContext(el) {\n  var stateData = el.parent().inheritedData('$uiView');\n\n  if (stateData && stateData.state && stateData.state.name) {\n    return stateData.state;\n  }\n}\n\nfunction getTypeInfo(el) {\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n  var isForm = el[0].nodeName === \"FORM\";\n\n  return {\n    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n    clickable: !isForm\n  };\n}\n\nfunction clickHook(el, $state, $timeout, type, current) {\n  return function(e) {\n    var button = e.which || e.button, target = current();\n\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n      var transition = $timeout(function() {\n        $state.go(target.state, target.params, target.options);\n      });\n      e.preventDefault();\n\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\n      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1: 0;\n\n      e.preventDefault = function() {\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n      };\n    }\n  };\n}\n\nfunction defaultOpts(el, $state) {\n  return { relative: stateContext(el) || $state.$current, inherit: true };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref\n *\n * @requires ui.router.state.$state\n * @requires $timeout\n *\n * @restrict A\n *\n * @description\n * A directive that binds a link (`<a>` tag) to a state. If the state has an associated\n * URL, the directive will automatically generate & update the `href` attribute via\n * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\n * the link will trigger a state transition with optional parameters.\n *\n * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be\n * handled natively by the browser.\n *\n * You can also use relative state paths within ui-sref, just like the relative\n * paths passed to `$state.go()`. You just need to be aware that the path is relative\n * to the state that the link lives in, in other words the state that loaded the\n * template containing the link.\n *\n * You can specify options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\n * and `reload`.\n *\n * @example\n * Here's an example of how you'd use ui-sref and how it would compile. If you have the\n * following template:\n * <pre>\n * <a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * </pre>\n *\n * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):\n * <pre>\n * <a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * </pre>\n *\n * @param {string} ui-sref 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n */\n$StateRefDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var ref    = parseStateRef(attrs.uiSref, $state.current.name);\n      var def    = { state: ref.state, href: null, params: null };\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var unlinkInfoFn = null;\n      var hookFn;\n\n      def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});\n\n      var update = function(val) {\n        if (val) def.params = angular.copy(val);\n        def.href = $state.href(ref.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(ref.state, def.params);\n        if (def.href !== null) attrs.$set(type.attr, def.href);\n      };\n\n      if (ref.paramExpr) {\n        scope.$watch(ref.paramExpr, function(val) { if (val !== def.params) update(val); }, true);\n        def.params = angular.copy(scope.$eval(ref.paramExpr));\n      }\n      update();\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n      });\n    }\n  };\n}\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-state\n *\n * @requires ui.router.state.uiSref\n *\n * @restrict A\n *\n * @description\n * Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\n * params and override options.\n *\n * @param {string} ui-state 'stateName' can be any valid absolute or relative state\n * @param {Object} ui-state-params params to pass to {@link ui.router.state.$state#methods_href $state.href()}\n * @param {Object} ui-state-opts options to pass to {@link ui.router.state.$state#methods_go $state.go()}\n */\n$StateRefDynamicDirective.$inject = ['$state', '$timeout'];\nfunction $StateRefDynamicDirective($state, $timeout) {\n  return {\n    restrict: 'A',\n    require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n    link: function(scope, element, attrs, uiSrefActive) {\n      var type   = getTypeInfo(element);\n      var active = uiSrefActive[1] || uiSrefActive[0];\n      var group  = [attrs.uiState, attrs.uiStateParams || null, attrs.uiStateOpts || null];\n      var watch  = '[' + group.map(function(val) { return val || 'null'; }).join(', ') + ']';\n      var def    = { state: null, params: null, options: null, href: null };\n      var unlinkInfoFn = null;\n      var hookFn;\n\n      function runStateRefLink (group) {\n        def.state = group[0]; def.params = group[1]; def.options = group[2];\n        def.href = $state.href(def.state, def.params, def.options);\n\n        if (unlinkInfoFn) unlinkInfoFn();\n        if (active) unlinkInfoFn = active.$$addStateInfo(def.state, def.params);\n        if (def.href) attrs.$set(type.attr, def.href);\n      }\n\n      scope.$watch(watch, runStateRefLink, true);\n      runStateRefLink(scope.$eval(watch));\n\n      if (!type.clickable) return;\n      hookFn = clickHook(element, $state, $timeout, type, function() { return def; });\n      element[element.on ? 'on' : 'bind'](\"click\", hookFn);\n      scope.$on('$destroy', function() {\n        element[element.off ? 'off' : 'unbind'](\"click\", hookFn);\n      });\n    }\n  };\n}\n\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * A directive working alongside ui-sref to add classes to an element when the\n * related ui-sref directive's state is active, and removing them when it is inactive.\n * The primary use-case is to simplify the special appearance of navigation menus\n * relying on `ui-sref`, by having the \"active\" state's menu button appear different,\n * distinguishing it from the inactive menu items.\n *\n * ui-sref-active can live on the same element as ui-sref or on a parent element. The first\n * ui-sref-active found at the same level or above the ui-sref will be used.\n *\n * Will activate when the ui-sref's target state or any child state is active. If you\n * need to activate only when the ui-sref target state is active and *not* any of\n * it's children, then you will use\n * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}\n *\n * @example\n * Given the following template:\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n *\n * When the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n * <pre>\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * Multiple classes may be specified in a space-separated format:\n * <pre>\n * <ul>\n *   <li ui-sref-active='class1 class2 class3'>\n *     <a ui-sref=\"app.user\">link</a>\n *   </li>\n * </ul>\n * </pre>\n *\n * It is also possible to pass ui-sref-active an expression that evaluates\n * to an object hash, whose keys represent active class names and whose\n * values represent the respective state names/globs.\n * ui-sref-active will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * @Example\n * Given the following template, with \"admin\" being an abstract state:\n * <pre>\n * <div ui-sref-active=\"{'active': 'admin.*'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * </pre>\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied\n * to both the <div> and <a> elements. It is important to note that the state\n * names/globs passed to ui-sref-active shadow the state provided by ui-sref.\n */\n\n/**\n * @ngdoc directive\n * @name ui.router.state.directive:ui-sref-active-eq\n *\n * @requires ui.router.state.$state\n * @requires ui.router.state.$stateParams\n * @requires $interpolate\n *\n * @restrict A\n *\n * @description\n * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\n * when the exact target state used in the `ui-sref` is active; no child states.\n *\n */\n$StateRefActiveDirective.$inject = ['$state', '$stateParams', '$interpolate'];\nfunction $StateRefActiveDirective($state, $stateParams, $interpolate) {\n  return  {\n    restrict: \"A\",\n    controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, $element, $attrs, $timeout) {\n      var states = [], activeClasses = {}, activeEqClass, uiSrefActive;\n\n      // There probably isn't much point in $observing this\n      // uiSrefActive and uiSrefActiveEq share the same directive object with some\n      // slight difference in logic routing\n      activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\n      try {\n        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n      } catch (e) {\n        // Do nothing. uiSrefActive is not a valid expression.\n        // Fall back to using $interpolate below\n      }\n      uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n      if (isObject(uiSrefActive)) {\n        forEach(uiSrefActive, function(stateOrName, activeClass) {\n          if (isString(stateOrName)) {\n            var ref = parseStateRef(stateOrName, $state.current.name);\n            addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n          }\n        });\n      }\n\n      // Allow uiSref to communicate with uiSrefActive[Equals]\n      this.$$addStateInfo = function (newState, newParams) {\n        // we already got an explicit state provided by ui-sref-active, so we\n        // shadow the one that comes from ui-sref\n        if (isObject(uiSrefActive) && states.length > 0) {\n          return;\n        }\n        var deregister = addState(newState, newParams, uiSrefActive);\n        update();\n        return deregister;\n      };\n\n      $scope.$on('$stateChangeSuccess', update);\n\n      function addState(stateName, stateParams, activeClass) {\n        var state = $state.get(stateName, stateContext($element));\n        var stateHash = createStateHash(stateName, stateParams);\n\n        var stateInfo = {\n          state: state || { name: stateName },\n          params: stateParams,\n          hash: stateHash\n        };\n\n        states.push(stateInfo);\n        activeClasses[stateHash] = activeClass;\n\n        return function removeState() {\n          var idx = states.indexOf(stateInfo);\n          if (idx !== -1) states.splice(idx, 1);\n        };\n      }\n\n      /**\n       * @param {string} state\n       * @param {Object|string} [params]\n       * @return {string}\n       */\n      function createStateHash(state, params) {\n        if (!isString(state)) {\n          throw new Error('state should be a string');\n        }\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        params = $scope.$eval(params);\n        if (isObject(params)) {\n          return state + toJson(params);\n        }\n        return state;\n      }\n\n      // Update route state\n      function update() {\n        for (var i = 0; i < states.length; i++) {\n          if (anyMatch(states[i].state, states[i].params)) {\n            addClass($element, activeClasses[states[i].hash]);\n          } else {\n            removeClass($element, activeClasses[states[i].hash]);\n          }\n\n          if (exactMatch(states[i].state, states[i].params)) {\n            addClass($element, activeEqClass);\n          } else {\n            removeClass($element, activeEqClass);\n          }\n        }\n      }\n\n      function addClass(el, className) { $timeout(function () { el.addClass(className); }); }\n      function removeClass(el, className) { el.removeClass(className); }\n      function anyMatch(state, params) { return $state.includes(state.name, params); }\n      function exactMatch(state, params) { return $state.is(state.name, params); }\n\n      update();\n    }]\n  };\n}\n\nangular.module('ui.router.state')\n  .directive('uiSref', $StateRefDirective)\n  .directive('uiSrefActive', $StateRefActiveDirective)\n  .directive('uiSrefActiveEq', $StateRefActiveDirective)\n  .directive('uiState', $StateRefDynamicDirective);\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:isState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n  var isFilter = function (state, params) {\n    return $state.is(state, params);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * @ngdoc filter\n * @name ui.router.state.filter:includedByState\n *\n * @requires ui.router.state.$state\n *\n * @description\n * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n  var includesFilter = function (state, params, options) {\n    return $state.includes(state, params, options);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n})(window, window.angular);\n},{}],13:[function(require,module,exports){\n/**\n * @license AngularJS v1.6.2\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window) {'use strict';\n\n/**\n * @description\n *\n * This object provides a utility for producing rich Error messages within\n * Angular. It can be called as follows:\n *\n * var exampleMinErr = minErr('example');\n * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);\n *\n * The above creates an instance of minErr in the example namespace. The\n * resulting error will have a namespaced error code of example.one.  The\n * resulting error will replace {0} with the value of foo, and {1} with the\n * value of bar. The object is not restricted in the number of arguments it can\n * take.\n *\n * If fewer arguments are specified than necessary for interpolation, the extra\n * interpolation markers will be preserved in the final string.\n *\n * Since data will be parsed statically during a build step, some restrictions\n * are applied with respect to how minErr instances are created and called.\n * Instances should have names of the form namespaceMinErr for a minErr created\n * using minErr('namespace') . Error codes, namespaces and template strings\n * should all be static strings, not variables or general expressions.\n *\n * @param {string} module The namespace to use for the new minErr instance.\n * @param {function} ErrorConstructor Custom error constructor to be instantiated when returning\n *   error from returned function, for cases when a particular type of error is useful.\n * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance\n */\n\nfunction minErr(module, ErrorConstructor) {\n  ErrorConstructor = ErrorConstructor || Error;\n  return function() {\n    var SKIP_INDEXES = 2;\n\n    var templateArgs = arguments,\n      code = templateArgs[0],\n      message = '[' + (module ? module + ':' : '') + code + '] ',\n      template = templateArgs[1],\n      paramPrefix, i;\n\n    message += template.replace(/\\{\\d+\\}/g, function(match) {\n      var index = +match.slice(1, -1),\n        shiftedIndex = index + SKIP_INDEXES;\n\n      if (shiftedIndex < templateArgs.length) {\n        return toDebugString(templateArgs[shiftedIndex]);\n      }\n\n      return match;\n    });\n\n    message += '\\nhttp://errors.angularjs.org/1.6.2/' +\n      (module ? module + '/' : '') + code;\n\n    for (i = SKIP_INDEXES, paramPrefix = '?'; i < templateArgs.length; i++, paramPrefix = '&') {\n      message += paramPrefix + 'p' + (i - SKIP_INDEXES) + '=' +\n        encodeURIComponent(toDebugString(templateArgs[i]));\n    }\n\n    return new ErrorConstructor(message);\n  };\n}\n\n/* We need to tell ESLint what variables are being exported */\n/* exported\n  angular,\n  msie,\n  jqLite,\n  jQuery,\n  slice,\n  splice,\n  push,\n  toString,\n  ngMinErr,\n  angularModule,\n  uid,\n  REGEX_STRING_REGEXP,\n  VALIDITY_STATE_PROPERTY,\n\n  lowercase,\n  uppercase,\n  manualLowercase,\n  manualUppercase,\n  nodeName_,\n  isArrayLike,\n  forEach,\n  forEachSorted,\n  reverseParams,\n  nextUid,\n  setHashKey,\n  extend,\n  toInt,\n  inherit,\n  merge,\n  noop,\n  identity,\n  valueFn,\n  isUndefined,\n  isDefined,\n  isObject,\n  isBlankObject,\n  isString,\n  isNumber,\n  isNumberNaN,\n  isDate,\n  isArray,\n  isFunction,\n  isRegExp,\n  isWindow,\n  isScope,\n  isFile,\n  isFormData,\n  isBlob,\n  isBoolean,\n  isPromiseLike,\n  trim,\n  escapeForRegexp,\n  isElement,\n  makeMap,\n  includes,\n  arrayRemove,\n  copy,\n  equals,\n  csp,\n  jq,\n  concat,\n  sliceArgs,\n  bind,\n  toJsonReplacer,\n  toJson,\n  fromJson,\n  convertTimezoneToLocal,\n  timezoneToOffset,\n  startingTag,\n  tryDecodeURIComponent,\n  parseKeyValue,\n  toKeyValue,\n  encodeUriSegment,\n  encodeUriQuery,\n  angularInit,\n  bootstrap,\n  getTestability,\n  snake_case,\n  bindJQuery,\n  assertArg,\n  assertArgFn,\n  assertNotHasOwnProperty,\n  getter,\n  getBlockNodes,\n  hasOwnProperty,\n  createMap,\n  stringify,\n\n  NODE_TYPE_ELEMENT,\n  NODE_TYPE_ATTRIBUTE,\n  NODE_TYPE_TEXT,\n  NODE_TYPE_COMMENT,\n  NODE_TYPE_DOCUMENT,\n  NODE_TYPE_DOCUMENT_FRAGMENT\n*/\n\n////////////////////////////////////\n\n/**\n * @ngdoc module\n * @name ng\n * @module ng\n * @installation\n * @description\n *\n * # ng (core module)\n * The ng module is loaded by default when an AngularJS application is started. The module itself\n * contains the essential components for an AngularJS application to function. The table below\n * lists a high level breakdown of each of the services/factories, filters, directives and testing\n * components available within this core module.\n *\n * <div doc-module-components=\"ng\"></div>\n */\n\nvar REGEX_STRING_REGEXP = /^\\/(.+)\\/([a-z]*)$/;\n\n// The name of a form control's ValidityState property.\n// This is used so that it's possible for internal tests to create mock ValidityStates.\nvar VALIDITY_STATE_PROPERTY = 'validity';\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @ngdoc function\n * @name angular.lowercase\n * @module ng\n * @kind function\n *\n * @deprecated\n * sinceVersion=\"1.5.0\"\n * removeVersion=\"1.7.0\"\n * Use [String.prototype.toLowerCase](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase) instead.\n *\n * @description Converts the specified string to lowercase.\n * @param {string} string String to be converted to lowercase.\n * @returns {string} Lowercased string.\n */\nvar lowercase = function(string) {return isString(string) ? string.toLowerCase() : string;};\n\n/**\n * @ngdoc function\n * @name angular.uppercase\n * @module ng\n * @kind function\n *\n * @deprecated\n * sinceVersion=\"1.5.0\"\n * removeVersion=\"1.7.0\"\n * Use [String.prototype.toUpperCase](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase) instead.\n *\n * @description Converts the specified string to uppercase.\n * @param {string} string String to be converted to uppercase.\n * @returns {string} Uppercased string.\n */\nvar uppercase = function(string) {return isString(string) ? string.toUpperCase() : string;};\n\n\nvar manualLowercase = function(s) {\n  /* eslint-disable no-bitwise */\n  return isString(s)\n      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\n      : s;\n  /* eslint-enable */\n};\nvar manualUppercase = function(s) {\n  /* eslint-disable no-bitwise */\n  return isString(s)\n      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\n      : s;\n  /* eslint-enable */\n};\n\n\n// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\n// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\n// with correct but slower alternatives. See https://github.com/angular/angular.js/issues/11387\nif ('i' !== 'I'.toLowerCase()) {\n  lowercase = manualLowercase;\n  uppercase = manualUppercase;\n}\n\n\nvar\n    msie,             // holds major version number for IE, or NaN if UA is not IE.\n    jqLite,           // delay binding since jQuery could be loaded after us.\n    jQuery,           // delay binding\n    slice             = [].slice,\n    splice            = [].splice,\n    push              = [].push,\n    toString          = Object.prototype.toString,\n    getPrototypeOf    = Object.getPrototypeOf,\n    ngMinErr          = minErr('ng'),\n\n    /** @name angular */\n    angular           = window.angular || (window.angular = {}),\n    angularModule,\n    uid               = 0;\n\n// Support: IE 9-11 only\n/**\n * documentMode is an IE-only property\n * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx\n */\nmsie = window.document.documentMode;\n\n\n/**\n * @private\n * @param {*} obj\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,\n *                   String ...)\n */\nfunction isArrayLike(obj) {\n\n  // `null`, `undefined` and `window` are not array-like\n  if (obj == null || isWindow(obj)) return false;\n\n  // arrays, strings and jQuery/jqLite objects are array like\n  // * jqLite is either the jQuery or jqLite constructor function\n  // * we have to check the existence of jqLite first as this method is called\n  //   via the forEach method when constructing the jqLite object in the first place\n  if (isArray(obj) || isString(obj) || (jqLite && obj instanceof jqLite)) return true;\n\n  // Support: iOS 8.2 (not reproducible in simulator)\n  // \"length\" in obj used to prevent JIT error (gh-11508)\n  var length = 'length' in Object(obj) && obj.length;\n\n  // NodeList objects (with `item` method) and\n  // other objects with suitable length characteristics are array-like\n  return isNumber(length) &&\n    (length >= 0 && ((length - 1) in obj || obj instanceof Array) || typeof obj.item === 'function');\n\n}\n\n/**\n * @ngdoc function\n * @name angular.forEach\n * @module ng\n * @kind function\n *\n * @description\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\n * object or an array. The `iterator` function is invoked with `iterator(value, key, obj)`, where `value`\n * is the value of an object property or an array element, `key` is the object property key or\n * array element index and obj is the `obj` itself. Specifying a `context` for the function is optional.\n *\n * It is worth noting that `.forEach` does not iterate over inherited properties because it filters\n * using the `hasOwnProperty` method.\n *\n * Unlike ES262's\n * [Array.prototype.forEach](http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18),\n * providing 'undefined' or 'null' values for `obj` will not throw a TypeError, but rather just\n * return the value provided.\n *\n   ```js\n     var values = {name: 'misko', gender: 'male'};\n     var log = [];\n     angular.forEach(values, function(value, key) {\n       this.push(key + ': ' + value);\n     }, log);\n     expect(log).toEqual(['name: misko', 'gender: male']);\n   ```\n *\n * @param {Object|Array} obj Object to iterate over.\n * @param {Function} iterator Iterator function.\n * @param {Object=} context Object to become context (`this`) for the iterator function.\n * @returns {Object|Array} Reference to `obj`.\n */\n\nfunction forEach(obj, iterator, context) {\n  var key, length;\n  if (obj) {\n    if (isFunction(obj)) {\n      for (key in obj) {\n        if (key !== 'prototype' && key !== 'length' && key !== 'name' && obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    } else if (isArray(obj) || isArrayLike(obj)) {\n      var isPrimitive = typeof obj !== 'object';\n      for (key = 0, length = obj.length; key < length; key++) {\n        if (isPrimitive || key in obj) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    } else if (obj.forEach && obj.forEach !== forEach) {\n        obj.forEach(iterator, context, obj);\n    } else if (isBlankObject(obj)) {\n      // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty\n      for (key in obj) {\n        iterator.call(context, obj[key], key, obj);\n      }\n    } else if (typeof obj.hasOwnProperty === 'function') {\n      // Slow path for objects inheriting Object.prototype, hasOwnProperty check needed\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    } else {\n      // Slow path for objects which do not have a method `hasOwnProperty`\n      for (key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n          iterator.call(context, obj[key], key, obj);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction forEachSorted(obj, iterator, context) {\n  var keys = Object.keys(obj).sort();\n  for (var i = 0; i < keys.length; i++) {\n    iterator.call(context, obj[keys[i]], keys[i]);\n  }\n  return keys;\n}\n\n\n/**\n * when using forEach the params are value, key, but it is often useful to have key, value.\n * @param {function(string, *)} iteratorFn\n * @returns {function(*, string)}\n */\nfunction reverseParams(iteratorFn) {\n  return function(value, key) {iteratorFn(key, value);};\n}\n\n/**\n * A consistent way of creating unique IDs in angular.\n *\n * Using simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\n * we hit number precision issues in JavaScript.\n *\n * Math.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M\n *\n * @returns {number} an unique alpha-numeric string\n */\nfunction nextUid() {\n  return ++uid;\n}\n\n\n/**\n * Set or clear the hashkey for an object.\n * @param obj object\n * @param h the hashkey (!truthy to delete the hashkey)\n */\nfunction setHashKey(obj, h) {\n  if (h) {\n    obj.$$hashKey = h;\n  } else {\n    delete obj.$$hashKey;\n  }\n}\n\n\nfunction baseExtend(dst, objs, deep) {\n  var h = dst.$$hashKey;\n\n  for (var i = 0, ii = objs.length; i < ii; ++i) {\n    var obj = objs[i];\n    if (!isObject(obj) && !isFunction(obj)) continue;\n    var keys = Object.keys(obj);\n    for (var j = 0, jj = keys.length; j < jj; j++) {\n      var key = keys[j];\n      var src = obj[key];\n\n      if (deep && isObject(src)) {\n        if (isDate(src)) {\n          dst[key] = new Date(src.valueOf());\n        } else if (isRegExp(src)) {\n          dst[key] = new RegExp(src);\n        } else if (src.nodeName) {\n          dst[key] = src.cloneNode(true);\n        } else if (isElement(src)) {\n          dst[key] = src.clone();\n        } else {\n          if (!isObject(dst[key])) dst[key] = isArray(src) ? [] : {};\n          baseExtend(dst[key], [src], true);\n        }\n      } else {\n        dst[key] = src;\n      }\n    }\n  }\n\n  setHashKey(dst, h);\n  return dst;\n}\n\n/**\n * @ngdoc function\n * @name angular.extend\n * @module ng\n * @kind function\n *\n * @description\n * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)\n * to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so\n * by passing an empty object as the target: `var object = angular.extend({}, object1, object2)`.\n *\n * **Note:** Keep in mind that `angular.extend` does not support recursive merge (deep copy). Use\n * {@link angular.merge} for this.\n *\n * @param {Object} dst Destination object.\n * @param {...Object} src Source object(s).\n * @returns {Object} Reference to `dst`.\n */\nfunction extend(dst) {\n  return baseExtend(dst, slice.call(arguments, 1), false);\n}\n\n\n/**\n* @ngdoc function\n* @name angular.merge\n* @module ng\n* @kind function\n*\n* @description\n* Deeply extends the destination object `dst` by copying own enumerable properties from the `src` object(s)\n* to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so\n* by passing an empty object as the target: `var object = angular.merge({}, object1, object2)`.\n*\n* Unlike {@link angular.extend extend()}, `merge()` recursively descends into object properties of source\n* objects, performing a deep copy.\n*\n* @param {Object} dst Destination object.\n* @param {...Object} src Source object(s).\n* @returns {Object} Reference to `dst`.\n*/\nfunction merge(dst) {\n  return baseExtend(dst, slice.call(arguments, 1), true);\n}\n\n\n\nfunction toInt(str) {\n  return parseInt(str, 10);\n}\n\nvar isNumberNaN = Number.isNaN || function isNumberNaN(num) {\n  // eslint-disable-next-line no-self-compare\n  return num !== num;\n};\n\n\nfunction inherit(parent, extra) {\n  return extend(Object.create(parent), extra);\n}\n\n/**\n * @ngdoc function\n * @name angular.noop\n * @module ng\n * @kind function\n *\n * @description\n * A function that performs no operations. This function can be useful when writing code in the\n * functional style.\n   ```js\n     function foo(callback) {\n       var result = calculateResult();\n       (callback || angular.noop)(result);\n     }\n   ```\n */\nfunction noop() {}\nnoop.$inject = [];\n\n\n/**\n * @ngdoc function\n * @name angular.identity\n * @module ng\n * @kind function\n *\n * @description\n * A function that returns its first argument. This function is useful when writing code in the\n * functional style.\n *\n   ```js\n   function transformer(transformationFn, value) {\n     return (transformationFn || angular.identity)(value);\n   };\n\n   // E.g.\n   function getResult(fn, input) {\n     return (fn || angular.identity)(input);\n   };\n\n   getResult(function(n) { return n * 2; }, 21);   // returns 42\n   getResult(null, 21);                            // returns 21\n   getResult(undefined, 21);                       // returns 21\n   ```\n *\n * @param {*} value to be returned.\n * @returns {*} the value passed in.\n */\nfunction identity($) {return $;}\nidentity.$inject = [];\n\n\nfunction valueFn(value) {return function valueRef() {return value;};}\n\nfunction hasCustomToString(obj) {\n  return isFunction(obj.toString) && obj.toString !== toString;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isUndefined\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is undefined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value) {return typeof value === 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDefined\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is defined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value) {return typeof value !== 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isObject\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects. Note that JavaScript arrays are objects.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value) {\n  // http://jsperf.com/isobject4\n  return value !== null && typeof value === 'object';\n}\n\n\n/**\n * Determine if a value is an object with a null prototype\n *\n * @returns {boolean} True if `value` is an `Object` with a null prototype\n */\nfunction isBlankObject(value) {\n  return value !== null && typeof value === 'object' && !getPrototypeOf(value);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isString\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `String`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value) {return typeof value === 'string';}\n\n\n/**\n * @ngdoc function\n * @name angular.isNumber\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `Number`.\n *\n * This includes the \"special\" numbers `NaN`, `+Infinity` and `-Infinity`.\n *\n * If you wish to exclude these then you can use the native\n * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite)\n * method.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value) {return typeof value === 'number';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDate\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a value is a date.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isArray\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is an `Array`. Alias of Array.isArray.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nvar isArray = Array.isArray;\n\n/**\n * @ngdoc function\n * @name angular.isFunction\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `Function`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value) {return typeof value === 'function';}\n\n\n/**\n * Determines if a value is a regular expression object.\n *\n * @private\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `RegExp`.\n */\nfunction isRegExp(value) {\n  return toString.call(value) === '[object RegExp]';\n}\n\n\n/**\n * Checks if `obj` is a window object.\n *\n * @private\n * @param {*} obj Object to check\n * @returns {boolean} True if `obj` is a window obj.\n */\nfunction isWindow(obj) {\n  return obj && obj.window === obj;\n}\n\n\nfunction isScope(obj) {\n  return obj && obj.$evalAsync && obj.$watch;\n}\n\n\nfunction isFile(obj) {\n  return toString.call(obj) === '[object File]';\n}\n\n\nfunction isFormData(obj) {\n  return toString.call(obj) === '[object FormData]';\n}\n\n\nfunction isBlob(obj) {\n  return toString.call(obj) === '[object Blob]';\n}\n\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\n\nfunction isPromiseLike(obj) {\n  return obj && isFunction(obj.then);\n}\n\n\nvar TYPED_ARRAY_REGEXP = /^\\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/;\nfunction isTypedArray(value) {\n  return value && isNumber(value.length) && TYPED_ARRAY_REGEXP.test(toString.call(value));\n}\n\nfunction isArrayBuffer(obj) {\n  return toString.call(obj) === '[object ArrayBuffer]';\n}\n\n\nvar trim = function(value) {\n  return isString(value) ? value.trim() : value;\n};\n\n// Copied from:\n// http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1021\n// Prereq: s is a string.\nvar escapeForRegexp = function(s) {\n  return s\n    .replace(/([-()[\\]{}+?*.$^|,:#<!\\\\])/g, '\\\\$1')\n    // eslint-disable-next-line no-control-regex\n    .replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * @ngdoc function\n * @name angular.isElement\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a DOM element (or wrapped jQuery element).\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n */\nfunction isElement(node) {\n  return !!(node &&\n    (node.nodeName  // We are a direct element.\n    || (node.prop && node.attr && node.find)));  // We have an on and find method part of jQuery API.\n}\n\n/**\n * @param str 'key1,key2,...'\n * @returns {object} in the form of {key1:true, key2:true, ...}\n */\nfunction makeMap(str) {\n  var obj = {}, items = str.split(','), i;\n  for (i = 0; i < items.length; i++) {\n    obj[items[i]] = true;\n  }\n  return obj;\n}\n\n\nfunction nodeName_(element) {\n  return lowercase(element.nodeName || (element[0] && element[0].nodeName));\n}\n\nfunction includes(array, obj) {\n  return Array.prototype.indexOf.call(array, obj) !== -1;\n}\n\nfunction arrayRemove(array, value) {\n  var index = array.indexOf(value);\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n  return index;\n}\n\n/**\n * @ngdoc function\n * @name angular.copy\n * @module ng\n * @kind function\n *\n * @description\n * Creates a deep copy of `source`, which should be an object or an array.\n *\n * * If no destination is supplied, a copy of the object or array is created.\n * * If a destination is provided, all of its elements (for arrays) or properties (for objects)\n *   are deleted and then all elements/properties from the source are copied to it.\n * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.\n * * If `source` is identical to `destination` an exception will be thrown.\n *\n * <br />\n * <div class=\"alert alert-warning\">\n *   Only enumerable properties are taken into account. Non-enumerable properties (both on `source`\n *   and on `destination`) will be ignored.\n * </div>\n *\n * @param {*} source The source that will be used to make a copy.\n *                   Can be any type, including primitives, `null`, and `undefined`.\n * @param {(Object|Array)=} destination Destination into which the source is copied. If\n *     provided, must be of the same type as `source`.\n * @returns {*} The copy or updated `destination`, if `destination` was specified.\n *\n * @example\n  <example module=\"copyExample\" name=\"angular-copy\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <form novalidate class=\"simple-form\">\n          <label>Name: <input type=\"text\" ng-model=\"user.name\" /></label><br />\n          <label>Age:  <input type=\"number\" ng-model=\"user.age\" /></label><br />\n          Gender: <label><input type=\"radio\" ng-model=\"user.gender\" value=\"male\" />male</label>\n                  <label><input type=\"radio\" ng-model=\"user.gender\" value=\"female\" />female</label><br />\n          <button ng-click=\"reset()\">RESET</button>\n          <button ng-click=\"update(user)\">SAVE</button>\n        </form>\n        <pre>form = {{user | json}}</pre>\n        <pre>master = {{master | json}}</pre>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      // Module: copyExample\n      angular.\n        module('copyExample', []).\n        controller('ExampleController', ['$scope', function($scope) {\n          $scope.master = {};\n\n          $scope.reset = function() {\n            // Example with 1 argument\n            $scope.user = angular.copy($scope.master);\n          };\n\n          $scope.update = function(user) {\n            // Example with 2 arguments\n            angular.copy(user, $scope.master);\n          };\n\n          $scope.reset();\n        }]);\n    </file>\n  </example>\n */\nfunction copy(source, destination) {\n  var stackSource = [];\n  var stackDest = [];\n\n  if (destination) {\n    if (isTypedArray(destination) || isArrayBuffer(destination)) {\n      throw ngMinErr('cpta', 'Can\\'t copy! TypedArray destination cannot be mutated.');\n    }\n    if (source === destination) {\n      throw ngMinErr('cpi', 'Can\\'t copy! Source and destination are identical.');\n    }\n\n    // Empty the destination object\n    if (isArray(destination)) {\n      destination.length = 0;\n    } else {\n      forEach(destination, function(value, key) {\n        if (key !== '$$hashKey') {\n          delete destination[key];\n        }\n      });\n    }\n\n    stackSource.push(source);\n    stackDest.push(destination);\n    return copyRecurse(source, destination);\n  }\n\n  return copyElement(source);\n\n  function copyRecurse(source, destination) {\n    var h = destination.$$hashKey;\n    var key;\n    if (isArray(source)) {\n      for (var i = 0, ii = source.length; i < ii; i++) {\n        destination.push(copyElement(source[i]));\n      }\n    } else if (isBlankObject(source)) {\n      // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty\n      for (key in source) {\n        destination[key] = copyElement(source[key]);\n      }\n    } else if (source && typeof source.hasOwnProperty === 'function') {\n      // Slow path, which must rely on hasOwnProperty\n      for (key in source) {\n        if (source.hasOwnProperty(key)) {\n          destination[key] = copyElement(source[key]);\n        }\n      }\n    } else {\n      // Slowest path --- hasOwnProperty can't be called as a method\n      for (key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          destination[key] = copyElement(source[key]);\n        }\n      }\n    }\n    setHashKey(destination, h);\n    return destination;\n  }\n\n  function copyElement(source) {\n    // Simple values\n    if (!isObject(source)) {\n      return source;\n    }\n\n    // Already copied values\n    var index = stackSource.indexOf(source);\n    if (index !== -1) {\n      return stackDest[index];\n    }\n\n    if (isWindow(source) || isScope(source)) {\n      throw ngMinErr('cpws',\n        'Can\\'t copy! Making copies of Window or Scope instances is not supported.');\n    }\n\n    var needsRecurse = false;\n    var destination = copyType(source);\n\n    if (destination === undefined) {\n      destination = isArray(source) ? [] : Object.create(getPrototypeOf(source));\n      needsRecurse = true;\n    }\n\n    stackSource.push(source);\n    stackDest.push(destination);\n\n    return needsRecurse\n      ? copyRecurse(source, destination)\n      : destination;\n  }\n\n  function copyType(source) {\n    switch (toString.call(source)) {\n      case '[object Int8Array]':\n      case '[object Int16Array]':\n      case '[object Int32Array]':\n      case '[object Float32Array]':\n      case '[object Float64Array]':\n      case '[object Uint8Array]':\n      case '[object Uint8ClampedArray]':\n      case '[object Uint16Array]':\n      case '[object Uint32Array]':\n        return new source.constructor(copyElement(source.buffer), source.byteOffset, source.length);\n\n      case '[object ArrayBuffer]':\n        // Support: IE10\n        if (!source.slice) {\n          // If we're in this case we know the environment supports ArrayBuffer\n          /* eslint-disable no-undef */\n          var copied = new ArrayBuffer(source.byteLength);\n          new Uint8Array(copied).set(new Uint8Array(source));\n          /* eslint-enable */\n          return copied;\n        }\n        return source.slice(0);\n\n      case '[object Boolean]':\n      case '[object Number]':\n      case '[object String]':\n      case '[object Date]':\n        return new source.constructor(source.valueOf());\n\n      case '[object RegExp]':\n        var re = new RegExp(source.source, source.toString().match(/[^/]*$/)[0]);\n        re.lastIndex = source.lastIndex;\n        return re;\n\n      case '[object Blob]':\n        return new source.constructor([source], {type: source.type});\n    }\n\n    if (isFunction(source.cloneNode)) {\n      return source.cloneNode(true);\n    }\n  }\n}\n\n\n/**\n * @ngdoc function\n * @name angular.equals\n * @module ng\n * @kind function\n *\n * @description\n * Determines if two objects or two values are equivalent. Supports value types, regular\n * expressions, arrays and objects.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `angular.equals`.\n * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)\n * * Both values represent the same regular expression (In JavaScript,\n *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual\n *   representation matches).\n *\n * During a property comparison, properties of `function` type and properties with names\n * that begin with `$` are ignored.\n *\n * Scope and DOMWindow objects are being compared only by identify (`===`).\n *\n * @param {*} o1 Object or value to compare.\n * @param {*} o2 Object or value to compare.\n * @returns {boolean} True if arguments are equal.\n *\n * @example\n   <example module=\"equalsExample\" name=\"equalsExample\">\n     <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <form novalidate>\n          <h3>User 1</h3>\n          Name: <input type=\"text\" ng-model=\"user1.name\">\n          Age: <input type=\"number\" ng-model=\"user1.age\">\n\n          <h3>User 2</h3>\n          Name: <input type=\"text\" ng-model=\"user2.name\">\n          Age: <input type=\"number\" ng-model=\"user2.age\">\n\n          <div>\n            <br/>\n            <input type=\"button\" value=\"Compare\" ng-click=\"compare()\">\n          </div>\n          User 1: <pre>{{user1 | json}}</pre>\n          User 2: <pre>{{user2 | json}}</pre>\n          Equal: <pre>{{result}}</pre>\n        </form>\n      </div>\n    </file>\n    <file name=\"script.js\">\n        angular.module('equalsExample', []).controller('ExampleController', ['$scope', function($scope) {\n          $scope.user1 = {};\n          $scope.user2 = {};\n          $scope.compare = function() {\n            $scope.result = angular.equals($scope.user1, $scope.user2);\n          };\n        }]);\n    </file>\n  </example>\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  // eslint-disable-next-line no-self-compare\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n  if (t1 === t2 && t1 === 'object') {\n    if (isArray(o1)) {\n      if (!isArray(o2)) return false;\n      if ((length = o1.length) === o2.length) {\n        for (key = 0; key < length; key++) {\n          if (!equals(o1[key], o2[key])) return false;\n        }\n        return true;\n      }\n    } else if (isDate(o1)) {\n      if (!isDate(o2)) return false;\n      return equals(o1.getTime(), o2.getTime());\n    } else if (isRegExp(o1)) {\n      if (!isRegExp(o2)) return false;\n      return o1.toString() === o2.toString();\n    } else {\n      if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) ||\n        isArray(o2) || isDate(o2) || isRegExp(o2)) return false;\n      keySet = createMap();\n      for (key in o1) {\n        if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\n        if (!equals(o1[key], o2[key])) return false;\n        keySet[key] = true;\n      }\n      for (key in o2) {\n        if (!(key in keySet) &&\n            key.charAt(0) !== '$' &&\n            isDefined(o2[key]) &&\n            !isFunction(o2[key])) return false;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\nvar csp = function() {\n  if (!isDefined(csp.rules)) {\n\n\n    var ngCspElement = (window.document.querySelector('[ng-csp]') ||\n                    window.document.querySelector('[data-ng-csp]'));\n\n    if (ngCspElement) {\n      var ngCspAttribute = ngCspElement.getAttribute('ng-csp') ||\n                    ngCspElement.getAttribute('data-ng-csp');\n      csp.rules = {\n        noUnsafeEval: !ngCspAttribute || (ngCspAttribute.indexOf('no-unsafe-eval') !== -1),\n        noInlineStyle: !ngCspAttribute || (ngCspAttribute.indexOf('no-inline-style') !== -1)\n      };\n    } else {\n      csp.rules = {\n        noUnsafeEval: noUnsafeEval(),\n        noInlineStyle: false\n      };\n    }\n  }\n\n  return csp.rules;\n\n  function noUnsafeEval() {\n    try {\n      // eslint-disable-next-line no-new, no-new-func\n      new Function('');\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n};\n\n/**\n * @ngdoc directive\n * @module ng\n * @name ngJq\n *\n * @element ANY\n * @param {string=} ngJq the name of the library available under `window`\n * to be used for angular.element\n * @description\n * Use this directive to force the angular.element library.  This should be\n * used to force either jqLite by leaving ng-jq blank or setting the name of\n * the jquery variable under window (eg. jQuery).\n *\n * Since angular looks for this directive when it is loaded (doesn't wait for the\n * DOMContentLoaded event), it must be placed on an element that comes before the script\n * which loads angular. Also, only the first instance of `ng-jq` will be used and all\n * others ignored.\n *\n * @example\n * This example shows how to force jqLite using the `ngJq` directive to the `html` tag.\n ```html\n <!doctype html>\n <html ng-app ng-jq>\n ...\n ...\n </html>\n ```\n * @example\n * This example shows how to use a jQuery based library of a different name.\n * The library name must be available at the top most 'window'.\n ```html\n <!doctype html>\n <html ng-app ng-jq=\"jQueryLib\">\n ...\n ...\n </html>\n ```\n */\nvar jq = function() {\n  if (isDefined(jq.name_)) return jq.name_;\n  var el;\n  var i, ii = ngAttrPrefixes.length, prefix, name;\n  for (i = 0; i < ii; ++i) {\n    prefix = ngAttrPrefixes[i];\n    el = window.document.querySelector('[' + prefix.replace(':', '\\\\:') + 'jq]');\n    if (el) {\n      name = el.getAttribute(prefix + 'jq');\n      break;\n    }\n  }\n\n  return (jq.name_ = name);\n};\n\nfunction concat(array1, array2, index) {\n  return array1.concat(slice.call(array2, index));\n}\n\nfunction sliceArgs(args, startIndex) {\n  return slice.call(args, startIndex || 0);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.bind\n * @module ng\n * @kind function\n *\n * @description\n * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\n * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\n * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as\n * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).\n *\n * @param {Object} self Context which `fn` should be evaluated in.\n * @param {function()} fn Function to be bound.\n * @param {...*} args Optional arguments to be prebound to the `fn` function call.\n * @returns {function()} Function that wraps the `fn` with all the specified bindings.\n */\nfunction bind(self, fn) {\n  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\n  if (isFunction(fn) && !(fn instanceof RegExp)) {\n    return curryArgs.length\n      ? function() {\n          return arguments.length\n            ? fn.apply(self, concat(curryArgs, arguments, 0))\n            : fn.apply(self, curryArgs);\n        }\n      : function() {\n          return arguments.length\n            ? fn.apply(self, arguments)\n            : fn.call(self);\n        };\n  } else {\n    // In IE, native methods are not functions so they cannot be bound (note: they don't need to be).\n    return fn;\n  }\n}\n\n\nfunction toJsonReplacer(key, value) {\n  var val = value;\n\n  if (typeof key === 'string' && key.charAt(0) === '$' && key.charAt(1) === '$') {\n    val = undefined;\n  } else if (isWindow(value)) {\n    val = '$WINDOW';\n  } else if (value &&  window.document === value) {\n    val = '$DOCUMENT';\n  } else if (isScope(value)) {\n    val = '$SCOPE';\n  }\n\n  return val;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.toJson\n * @module ng\n * @kind function\n *\n * @description\n * Serializes input into a JSON-formatted string. Properties with leading $$ characters will be\n * stripped since angular uses this notation internally.\n *\n * @param {Object|Array|Date|string|number|boolean} obj Input to be serialized into JSON.\n * @param {boolean|number} [pretty=2] If set to true, the JSON output will contain newlines and whitespace.\n *    If set to an integer, the JSON output will contain that many spaces per indentation.\n * @returns {string|undefined} JSON-ified string representing `obj`.\n * @knownIssue\n *\n * The Safari browser throws a `RangeError` instead of returning `null` when it tries to stringify a `Date`\n * object with an invalid date value. The only reliable way to prevent this is to monkeypatch the\n * `Date.prototype.toJSON` method as follows:\n *\n * ```\n * var _DatetoJSON = Date.prototype.toJSON;\n * Date.prototype.toJSON = function() {\n *   try {\n *     return _DatetoJSON.call(this);\n *   } catch(e) {\n *     if (e instanceof RangeError) {\n *       return null;\n *     }\n *     throw e;\n *   }\n * };\n * ```\n *\n * See https://github.com/angular/angular.js/pull/14221 for more information.\n */\nfunction toJson(obj, pretty) {\n  if (isUndefined(obj)) return undefined;\n  if (!isNumber(pretty)) {\n    pretty = pretty ? 2 : null;\n  }\n  return JSON.stringify(obj, toJsonReplacer, pretty);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.fromJson\n * @module ng\n * @kind function\n *\n * @description\n * Deserializes a JSON string.\n *\n * @param {string} json JSON string to deserialize.\n * @returns {Object|Array|string|number} Deserialized JSON string.\n */\nfunction fromJson(json) {\n  return isString(json)\n      ? JSON.parse(json)\n      : json;\n}\n\n\nvar ALL_COLONS = /:/g;\nfunction timezoneToOffset(timezone, fallback) {\n  // Support: IE 9-11 only, Edge 13-14+\n  // IE/Edge do not \"understand\" colon (`:`) in timezone\n  timezone = timezone.replace(ALL_COLONS, '');\n  var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n  return isNumberNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\n\n\nfunction addDateMinutes(date, minutes) {\n  date = new Date(date.getTime());\n  date.setMinutes(date.getMinutes() + minutes);\n  return date;\n}\n\n\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n  reverse = reverse ? -1 : 1;\n  var dateTimezoneOffset = date.getTimezoneOffset();\n  var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n  return addDateMinutes(date, reverse * (timezoneOffset - dateTimezoneOffset));\n}\n\n\n/**\n * @returns {string} Returns the string representation of the element.\n */\nfunction startingTag(element) {\n  element = jqLite(element).clone();\n  try {\n    // turns out IE does not let you set .html() on elements which\n    // are not allowed to have children. So we just ignore it.\n    element.empty();\n  } catch (e) { /* empty */ }\n  var elemHtml = jqLite('<div>').append(element).html();\n  try {\n    return element[0].nodeType === NODE_TYPE_TEXT ? lowercase(elemHtml) :\n        elemHtml.\n          match(/^(<[^>]+>)/)[1].\n          replace(/^<([\\w-]+)/, function(match, nodeName) {return '<' + lowercase(nodeName);});\n  } catch (e) {\n    return lowercase(elemHtml);\n  }\n\n}\n\n\n/////////////////////////////////////////////////\n\n/**\n * Tries to decode the URI component without throwing an exception.\n *\n * @private\n * @param str value potential URI component to check.\n * @returns {boolean} True if `value` can be decoded\n * with the decodeURIComponent function.\n */\nfunction tryDecodeURIComponent(value) {\n  try {\n    return decodeURIComponent(value);\n  } catch (e) {\n    // Ignore any invalid uri component.\n  }\n}\n\n\n/**\n * Parses an escaped url query string into key-value pairs.\n * @returns {Object.<string,boolean|Array>}\n */\nfunction parseKeyValue(/**string*/keyValue) {\n  var obj = {};\n  forEach((keyValue || '').split('&'), function(keyValue) {\n    var splitPoint, key, val;\n    if (keyValue) {\n      key = keyValue = keyValue.replace(/\\+/g,'%20');\n      splitPoint = keyValue.indexOf('=');\n      if (splitPoint !== -1) {\n        key = keyValue.substring(0, splitPoint);\n        val = keyValue.substring(splitPoint + 1);\n      }\n      key = tryDecodeURIComponent(key);\n      if (isDefined(key)) {\n        val = isDefined(val) ? tryDecodeURIComponent(val) : true;\n        if (!hasOwnProperty.call(obj, key)) {\n          obj[key] = val;\n        } else if (isArray(obj[key])) {\n          obj[key].push(val);\n        } else {\n          obj[key] = [obj[key],val];\n        }\n      }\n    }\n  });\n  return obj;\n}\n\nfunction toKeyValue(obj) {\n  var parts = [];\n  forEach(obj, function(value, key) {\n    if (isArray(value)) {\n      forEach(value, function(arrayValue) {\n        parts.push(encodeUriQuery(key, true) +\n                   (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));\n      });\n    } else {\n    parts.push(encodeUriQuery(key, true) +\n               (value === true ? '' : '=' + encodeUriQuery(value, true)));\n    }\n  });\n  return parts.length ? parts.join('&') : '';\n}\n\n\n/**\n * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n * segments:\n *    segment       = *pchar\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriSegment(val) {\n  return encodeUriQuery(val, true).\n             replace(/%26/gi, '&').\n             replace(/%3D/gi, '=').\n             replace(/%2B/gi, '+');\n}\n\n\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriQuery(val, pctEncodeSpaces) {\n  return encodeURIComponent(val).\n             replace(/%40/gi, '@').\n             replace(/%3A/gi, ':').\n             replace(/%24/g, '$').\n             replace(/%2C/gi, ',').\n             replace(/%3B/gi, ';').\n             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\nvar ngAttrPrefixes = ['ng-', 'data-ng-', 'ng:', 'x-ng-'];\n\nfunction getNgAttribute(element, ngAttr) {\n  var attr, i, ii = ngAttrPrefixes.length;\n  for (i = 0; i < ii; ++i) {\n    attr = ngAttrPrefixes[i] + ngAttr;\n    if (isString(attr = element.getAttribute(attr))) {\n      return attr;\n    }\n  }\n  return null;\n}\n\nfunction allowAutoBootstrap(document) {\n  var script = document.currentScript;\n  var src = script && script.getAttribute('src');\n\n  if (!src) {\n    return true;\n  }\n\n  var link = document.createElement('a');\n  link.href = src;\n\n  if (document.location.origin === link.origin) {\n    // Same-origin resources are always allowed, even for non-whitelisted schemes.\n    return true;\n  }\n  // Disabled bootstrapping unless angular.js was loaded from a known scheme used on the web.\n  // This is to prevent angular.js bundled with browser extensions from being used to bypass the\n  // content security policy in web pages and other browser extensions.\n  switch (link.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'blob:':\n    case 'file:':\n    case 'data:':\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Cached as it has to run during loading so that document.currentScript is available.\nvar isAutoBootstrapAllowed = allowAutoBootstrap(window.document);\n\n/**\n * @ngdoc directive\n * @name ngApp\n * @module ng\n *\n * @element ANY\n * @param {angular.Module} ngApp an optional application\n *   {@link angular.module module} name to load.\n * @param {boolean=} ngStrictDi if this attribute is present on the app element, the injector will be\n *   created in \"strict-di\" mode. This means that the application will fail to invoke functions which\n *   do not use explicit function annotation (and are thus unsuitable for minification), as described\n *   in {@link guide/di the Dependency Injection guide}, and useful debugging info will assist in\n *   tracking down the root of these bugs.\n *\n * @description\n *\n * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive\n * designates the **root element** of the application and is typically placed near the root element\n * of the page - e.g. on the `<body>` or `<html>` tags.\n *\n * There are a few things to keep in mind when using `ngApp`:\n * - only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`\n *   found in the document will be used to define the root element to auto-bootstrap as an\n *   application. To run multiple applications in an HTML document you must manually bootstrap them using\n *   {@link angular.bootstrap} instead.\n * - AngularJS applications cannot be nested within each other.\n * - Do not use a directive that uses {@link ng.$compile#transclusion transclusion} on the same element as `ngApp`.\n *   This includes directives such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and\n *   {@link ngRoute.ngView `ngView`}.\n *   Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},\n *   causing animations to stop working and making the injector inaccessible from outside the app.\n *\n * You can specify an **AngularJS module** to be used as the root module for the application.  This\n * module will be loaded into the {@link auto.$injector} when the application is bootstrapped. It\n * should contain the application code needed or have dependencies on other modules that will\n * contain the code. See {@link angular.module} for more information.\n *\n * In the example below if the `ngApp` directive were not placed on the `html` element then the\n * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`\n * would not be resolved to `3`.\n *\n * `ngApp` is the easiest, and most common way to bootstrap an application.\n *\n <example module=\"ngAppDemo\" name=\"ng-app\">\n   <file name=\"index.html\">\n   <div ng-controller=\"ngAppDemoController\">\n     I can add: {{a}} + {{b}} =  {{ a+b }}\n   </div>\n   </file>\n   <file name=\"script.js\">\n   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {\n     $scope.a = 1;\n     $scope.b = 2;\n   });\n   </file>\n </example>\n *\n * Using `ngStrictDi`, you would see something like this:\n *\n <example ng-app-included=\"true\" name=\"strict-di\">\n   <file name=\"index.html\">\n   <div ng-app=\"ngAppStrictDemo\" ng-strict-di>\n       <div ng-controller=\"GoodController1\">\n           I can add: {{a}} + {{b}} =  {{ a+b }}\n\n           <p>This renders because the controller does not fail to\n              instantiate, by using explicit annotation style (see\n              script.js for details)\n           </p>\n       </div>\n\n       <div ng-controller=\"GoodController2\">\n           Name: <input ng-model=\"name\"><br />\n           Hello, {{name}}!\n\n           <p>This renders because the controller does not fail to\n              instantiate, by using explicit annotation style\n              (see script.js for details)\n           </p>\n       </div>\n\n       <div ng-controller=\"BadController\">\n           I can add: {{a}} + {{b}} =  {{ a+b }}\n\n           <p>The controller could not be instantiated, due to relying\n              on automatic function annotations (which are disabled in\n              strict mode). As such, the content of this section is not\n              interpolated, and there should be an error in your web console.\n           </p>\n       </div>\n   </div>\n   </file>\n   <file name=\"script.js\">\n   angular.module('ngAppStrictDemo', [])\n     // BadController will fail to instantiate, due to relying on automatic function annotation,\n     // rather than an explicit annotation\n     .controller('BadController', function($scope) {\n       $scope.a = 1;\n       $scope.b = 2;\n     })\n     // Unlike BadController, GoodController1 and GoodController2 will not fail to be instantiated,\n     // due to using explicit annotations using the array style and $inject property, respectively.\n     .controller('GoodController1', ['$scope', function($scope) {\n       $scope.a = 1;\n       $scope.b = 2;\n     }])\n     .controller('GoodController2', GoodController2);\n     function GoodController2($scope) {\n       $scope.name = 'World';\n     }\n     GoodController2.$inject = ['$scope'];\n   </file>\n   <file name=\"style.css\">\n   div[ng-controller] {\n       margin-bottom: 1em;\n       -webkit-border-radius: 4px;\n       border-radius: 4px;\n       border: 1px solid;\n       padding: .5em;\n   }\n   div[ng-controller^=Good] {\n       border-color: #d6e9c6;\n       background-color: #dff0d8;\n       color: #3c763d;\n   }\n   div[ng-controller^=Bad] {\n       border-color: #ebccd1;\n       background-color: #f2dede;\n       color: #a94442;\n       margin-bottom: 0;\n   }\n   </file>\n </example>\n */\nfunction angularInit(element, bootstrap) {\n  var appElement,\n      module,\n      config = {};\n\n  // The element `element` has priority over any other element.\n  forEach(ngAttrPrefixes, function(prefix) {\n    var name = prefix + 'app';\n\n    if (!appElement && element.hasAttribute && element.hasAttribute(name)) {\n      appElement = element;\n      module = element.getAttribute(name);\n    }\n  });\n  forEach(ngAttrPrefixes, function(prefix) {\n    var name = prefix + 'app';\n    var candidate;\n\n    if (!appElement && (candidate = element.querySelector('[' + name.replace(':', '\\\\:') + ']'))) {\n      appElement = candidate;\n      module = candidate.getAttribute(name);\n    }\n  });\n  if (appElement) {\n    if (!isAutoBootstrapAllowed) {\n      window.console.error('Angular: disabling automatic bootstrap. <script> protocol indicates ' +\n          'an extension, document.location.href does not match.');\n      return;\n    }\n    config.strictDi = getNgAttribute(appElement, 'strict-di') !== null;\n    bootstrap(appElement, module ? [module] : [], config);\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.bootstrap\n * @module ng\n * @description\n * Use this function to manually start up angular application.\n *\n * For more information, see the {@link guide/bootstrap Bootstrap guide}.\n *\n * Angular will detect if it has been loaded into the browser more than once and only allow the\n * first loaded script to be bootstrapped and will report a warning to the browser console for\n * each of the subsequent scripts. This prevents strange results in applications, where otherwise\n * multiple instances of Angular try to work on the DOM.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Protractor based end-to-end tests cannot use this function to bootstrap manually.\n * They must use {@link ng.directive:ngApp ngApp}.\n * </div>\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Do not bootstrap the app on an element with a directive that uses {@link ng.$compile#transclusion transclusion},\n * such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and {@link ngRoute.ngView `ngView`}.\n * Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},\n * causing animations to stop working and making the injector inaccessible from outside the app.\n * </div>\n *\n * ```html\n * <!doctype html>\n * <html>\n * <body>\n * <div ng-controller=\"WelcomeController\">\n *   {{greeting}}\n * </div>\n *\n * <script src=\"angular.js\"></script>\n * <script>\n *   var app = angular.module('demo', [])\n *   .controller('WelcomeController', function($scope) {\n *       $scope.greeting = 'Welcome!';\n *   });\n *   angular.bootstrap(document, ['demo']);\n * </script>\n * </body>\n * </html>\n * ```\n *\n * @param {DOMElement} element DOM element which is the root of angular application.\n * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.\n *     Each item in the array should be the name of a predefined module or a (DI annotated)\n *     function that will be invoked by the injector as a `config` block.\n *     See: {@link angular.module modules}\n * @param {Object=} config an object for defining configuration options for the application. The\n *     following keys are supported:\n *\n * * `strictDi` - disable automatic function annotation for the application. This is meant to\n *   assist in finding bugs which break minified code. Defaults to `false`.\n *\n * @returns {auto.$injector} Returns the newly created injector for this app.\n */\nfunction bootstrap(element, modules, config) {\n  if (!isObject(config)) config = {};\n  var defaultConfig = {\n    strictDi: false\n  };\n  config = extend(defaultConfig, config);\n  var doBootstrap = function() {\n    element = jqLite(element);\n\n    if (element.injector()) {\n      var tag = (element[0] === window.document) ? 'document' : startingTag(element);\n      // Encode angle brackets to prevent input from being sanitized to empty string #8683.\n      throw ngMinErr(\n          'btstrpd',\n          'App already bootstrapped with this element \\'{0}\\'',\n          tag.replace(/</,'&lt;').replace(/>/,'&gt;'));\n    }\n\n    modules = modules || [];\n    modules.unshift(['$provide', function($provide) {\n      $provide.value('$rootElement', element);\n    }]);\n\n    if (config.debugInfoEnabled) {\n      // Pushing so that this overrides `debugInfoEnabled` setting defined in user's `modules`.\n      modules.push(['$compileProvider', function($compileProvider) {\n        $compileProvider.debugInfoEnabled(true);\n      }]);\n    }\n\n    modules.unshift('ng');\n    var injector = createInjector(modules, config.strictDi);\n    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector',\n       function bootstrapApply(scope, element, compile, injector) {\n        scope.$apply(function() {\n          element.data('$injector', injector);\n          compile(element)(scope);\n        });\n      }]\n    );\n    return injector;\n  };\n\n  var NG_ENABLE_DEBUG_INFO = /^NG_ENABLE_DEBUG_INFO!/;\n  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\n\n  if (window && NG_ENABLE_DEBUG_INFO.test(window.name)) {\n    config.debugInfoEnabled = true;\n    window.name = window.name.replace(NG_ENABLE_DEBUG_INFO, '');\n  }\n\n  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\n    return doBootstrap();\n  }\n\n  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\n  angular.resumeBootstrap = function(extraModules) {\n    forEach(extraModules, function(module) {\n      modules.push(module);\n    });\n    return doBootstrap();\n  };\n\n  if (isFunction(angular.resumeDeferredBootstrap)) {\n    angular.resumeDeferredBootstrap();\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.reloadWithDebugInfo\n * @module ng\n * @description\n * Use this function to reload the current application with debug information turned on.\n * This takes precedence over a call to `$compileProvider.debugInfoEnabled(false)`.\n *\n * See {@link ng.$compileProvider#debugInfoEnabled} for more.\n */\nfunction reloadWithDebugInfo() {\n  window.name = 'NG_ENABLE_DEBUG_INFO!' + window.name;\n  window.location.reload();\n}\n\n/**\n * @name angular.getTestability\n * @module ng\n * @description\n * Get the testability service for the instance of Angular on the given\n * element.\n * @param {DOMElement} element DOM element which is the root of angular application.\n */\nfunction getTestability(rootElement) {\n  var injector = angular.element(rootElement).injector();\n  if (!injector) {\n    throw ngMinErr('test',\n      'no injector found for element argument to getTestability');\n  }\n  return injector.get('$$testability');\n}\n\nvar SNAKE_CASE_REGEXP = /[A-Z]/g;\nfunction snake_case(name, separator) {\n  separator = separator || '_';\n  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n    return (pos ? separator : '') + letter.toLowerCase();\n  });\n}\n\nvar bindJQueryFired = false;\nfunction bindJQuery() {\n  var originalCleanData;\n\n  if (bindJQueryFired) {\n    return;\n  }\n\n  // bind to jQuery if present;\n  var jqName = jq();\n  jQuery = isUndefined(jqName) ? window.jQuery :   // use jQuery (if present)\n           !jqName             ? undefined     :   // use jqLite\n                                 window[jqName];   // use jQuery specified by `ngJq`\n\n  // Use jQuery if it exists with proper functionality, otherwise default to us.\n  // Angular 1.2+ requires jQuery 1.7+ for on()/off() support.\n  // Angular 1.3+ technically requires at least jQuery 2.1+ but it may work with older\n  // versions. It will not work for sure with jQuery <1.7, though.\n  if (jQuery && jQuery.fn.on) {\n    jqLite = jQuery;\n    extend(jQuery.fn, {\n      scope: JQLitePrototype.scope,\n      isolateScope: JQLitePrototype.isolateScope,\n      controller: /** @type {?} */ (JQLitePrototype).controller,\n      injector: JQLitePrototype.injector,\n      inheritedData: JQLitePrototype.inheritedData\n    });\n\n    // All nodes removed from the DOM via various jQuery APIs like .remove()\n    // are passed through jQuery.cleanData. Monkey-patch this method to fire\n    // the $destroy event on all removed nodes.\n    originalCleanData = jQuery.cleanData;\n    jQuery.cleanData = function(elems) {\n      var events;\n      for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n        events = jQuery._data(elem, 'events');\n        if (events && events.$destroy) {\n          jQuery(elem).triggerHandler('$destroy');\n        }\n      }\n      originalCleanData(elems);\n    };\n  } else {\n    jqLite = JQLite;\n  }\n\n  angular.element = jqLite;\n\n  // Prevent double-proxying.\n  bindJQueryFired = true;\n}\n\n/**\n * throw error if the argument is falsy.\n */\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw ngMinErr('areq', 'Argument \\'{0}\\' is {1}', (name || '?'), (reason || 'required'));\n  }\n  return arg;\n}\n\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\n  if (acceptArrayAnnotation && isArray(arg)) {\n      arg = arg[arg.length - 1];\n  }\n\n  assertArg(isFunction(arg), name, 'not a function, got ' +\n      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));\n  return arg;\n}\n\n/**\n * throw error if the name given is hasOwnProperty\n * @param  {String} name    the name to test\n * @param  {String} context the context in which the name is used, such as module or directive\n */\nfunction assertNotHasOwnProperty(name, context) {\n  if (name === 'hasOwnProperty') {\n    throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\n  }\n}\n\n/**\n * Return the value accessible from the object by path. Any undefined traversals are ignored\n * @param {Object} obj starting object\n * @param {String} path path to traverse\n * @param {boolean} [bindFnToScope=true]\n * @returns {Object} value as accessible by path\n */\n//TODO(misko): this function needs to be removed\nfunction getter(obj, path, bindFnToScope) {\n  if (!path) return obj;\n  var keys = path.split('.');\n  var key;\n  var lastInstance = obj;\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    key = keys[i];\n    if (obj) {\n      obj = (lastInstance = obj)[key];\n    }\n  }\n  if (!bindFnToScope && isFunction(obj)) {\n    return bind(lastInstance, obj);\n  }\n  return obj;\n}\n\n/**\n * Return the DOM siblings between the first and last node in the given array.\n * @param {Array} array like object\n * @returns {Array} the inputted object or a jqLite collection containing the nodes\n */\nfunction getBlockNodes(nodes) {\n  // TODO(perf): update `nodes` instead of creating a new object?\n  var node = nodes[0];\n  var endNode = nodes[nodes.length - 1];\n  var blockNodes;\n\n  for (var i = 1; node !== endNode && (node = node.nextSibling); i++) {\n    if (blockNodes || nodes[i] !== node) {\n      if (!blockNodes) {\n        blockNodes = jqLite(slice.call(nodes, 0, i));\n      }\n      blockNodes.push(node);\n    }\n  }\n\n  return blockNodes || nodes;\n}\n\n\n/**\n * Creates a new object without a prototype. This object is useful for lookup without having to\n * guard against prototypically inherited properties via hasOwnProperty.\n *\n * Related micro-benchmarks:\n * - http://jsperf.com/object-create2\n * - http://jsperf.com/proto-map-lookup/2\n * - http://jsperf.com/for-in-vs-object-keys2\n *\n * @returns {Object}\n */\nfunction createMap() {\n  return Object.create(null);\n}\n\nfunction stringify(value) {\n  if (value == null) { // null || undefined\n    return '';\n  }\n  switch (typeof value) {\n    case 'string':\n      break;\n    case 'number':\n      value = '' + value;\n      break;\n    default:\n      if (hasCustomToString(value) && !isArray(value) && !isDate(value)) {\n        value = value.toString();\n      } else {\n        value = toJson(value);\n      }\n  }\n\n  return value;\n}\n\nvar NODE_TYPE_ELEMENT = 1;\nvar NODE_TYPE_ATTRIBUTE = 2;\nvar NODE_TYPE_TEXT = 3;\nvar NODE_TYPE_COMMENT = 8;\nvar NODE_TYPE_DOCUMENT = 9;\nvar NODE_TYPE_DOCUMENT_FRAGMENT = 11;\n\n/**\n * @ngdoc type\n * @name angular.Module\n * @module ng\n * @description\n *\n * Interface for configuring angular {@link angular.module modules}.\n */\n\nfunction setupModuleLoader(window) {\n\n  var $injectorMinErr = minErr('$injector');\n  var ngMinErr = minErr('ng');\n\n  function ensure(obj, name, factory) {\n    return obj[name] || (obj[name] = factory());\n  }\n\n  var angular = ensure(window, 'angular', Object);\n\n  // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap\n  angular.$$minErr = angular.$$minErr || minErr;\n\n  return ensure(angular, 'module', function() {\n    /** @type {Object.<string, angular.Module>} */\n    var modules = {};\n\n    /**\n     * @ngdoc function\n     * @name angular.module\n     * @module ng\n     * @description\n     *\n     * The `angular.module` is a global place for creating, registering and retrieving Angular\n     * modules.\n     * All modules (angular core or 3rd party) that should be available to an application must be\n     * registered using this mechanism.\n     *\n     * Passing one argument retrieves an existing {@link angular.Module},\n     * whereas passing more than one argument creates a new {@link angular.Module}\n     *\n     *\n     * # Module\n     *\n     * A module is a collection of services, directives, controllers, filters, and configuration information.\n     * `angular.module` is used to configure the {@link auto.$injector $injector}.\n     *\n     * ```js\n     * // Create a new module\n     * var myModule = angular.module('myModule', []);\n     *\n     * // register a new service\n     * myModule.value('appName', 'MyCoolApp');\n     *\n     * // configure existing services inside initialization blocks.\n     * myModule.config(['$locationProvider', function($locationProvider) {\n     *   // Configure existing providers\n     *   $locationProvider.hashPrefix('!');\n     * }]);\n     * ```\n     *\n     * Then you can create an injector and load your modules like this:\n     *\n     * ```js\n     * var injector = angular.injector(['ng', 'myModule'])\n     * ```\n     *\n     * However it's more likely that you'll just use\n     * {@link ng.directive:ngApp ngApp} or\n     * {@link angular.bootstrap} to simplify this process for you.\n     *\n     * @param {!string} name The name of the module to create or retrieve.\n     * @param {!Array.<string>=} requires If specified then new module is being created. If\n     *        unspecified then the module is being retrieved for further configuration.\n     * @param {Function=} configFn Optional configuration function for the module. Same as\n     *        {@link angular.Module#config Module#config()}.\n     * @returns {angular.Module} new module with the {@link angular.Module} api.\n     */\n    return function module(name, requires, configFn) {\n      var assertNotHasOwnProperty = function(name, context) {\n        if (name === 'hasOwnProperty') {\n          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\n        }\n      };\n\n      assertNotHasOwnProperty(name, 'module');\n      if (requires && modules.hasOwnProperty(name)) {\n        modules[name] = null;\n      }\n      return ensure(modules, name, function() {\n        if (!requires) {\n          throw $injectorMinErr('nomod', 'Module \\'{0}\\' is not available! You either misspelled ' +\n             'the module name or forgot to load it. If registering a module ensure that you ' +\n             'specify the dependencies as the second argument.', name);\n        }\n\n        /** @type {!Array.<Array.<*>>} */\n        var invokeQueue = [];\n\n        /** @type {!Array.<Function>} */\n        var configBlocks = [];\n\n        /** @type {!Array.<Function>} */\n        var runBlocks = [];\n\n        var config = invokeLater('$injector', 'invoke', 'push', configBlocks);\n\n        /** @type {angular.Module} */\n        var moduleInstance = {\n          // Private state\n          _invokeQueue: invokeQueue,\n          _configBlocks: configBlocks,\n          _runBlocks: runBlocks,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#requires\n           * @module ng\n           *\n           * @description\n           * Holds the list of modules which the injector will load before the current module is\n           * loaded.\n           */\n          requires: requires,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#name\n           * @module ng\n           *\n           * @description\n           * Name of the module.\n           */\n          name: name,\n\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#provider\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} providerType Construction function for creating new instance of the\n           *                                service.\n           * @description\n           * See {@link auto.$provide#provider $provide.provider()}.\n           */\n          provider: invokeLaterAndSetModuleName('$provide', 'provider'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#factory\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} providerFunction Function for creating new instance of the service.\n           * @description\n           * See {@link auto.$provide#factory $provide.factory()}.\n           */\n          factory: invokeLaterAndSetModuleName('$provide', 'factory'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#service\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} constructor A constructor function that will be instantiated.\n           * @description\n           * See {@link auto.$provide#service $provide.service()}.\n           */\n          service: invokeLaterAndSetModuleName('$provide', 'service'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#value\n           * @module ng\n           * @param {string} name service name\n           * @param {*} object Service instance object.\n           * @description\n           * See {@link auto.$provide#value $provide.value()}.\n           */\n          value: invokeLater('$provide', 'value'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#constant\n           * @module ng\n           * @param {string} name constant name\n           * @param {*} object Constant value.\n           * @description\n           * Because the constants are fixed, they get applied before other provide methods.\n           * See {@link auto.$provide#constant $provide.constant()}.\n           */\n          constant: invokeLater('$provide', 'constant', 'unshift'),\n\n           /**\n           * @ngdoc method\n           * @name angular.Module#decorator\n           * @module ng\n           * @param {string} name The name of the service to decorate.\n           * @param {Function} decorFn This function will be invoked when the service needs to be\n           *                           instantiated and should return the decorated service instance.\n           * @description\n           * See {@link auto.$provide#decorator $provide.decorator()}.\n           */\n          decorator: invokeLaterAndSetModuleName('$provide', 'decorator', configBlocks),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#animation\n           * @module ng\n           * @param {string} name animation name\n           * @param {Function} animationFactory Factory function for creating new instance of an\n           *                                    animation.\n           * @description\n           *\n           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.\n           *\n           *\n           * Defines an animation hook that can be later used with\n           * {@link $animate $animate} service and directives that use this service.\n           *\n           * ```js\n           * module.animation('.animation-name', function($inject1, $inject2) {\n           *   return {\n           *     eventName : function(element, done) {\n           *       //code to run the animation\n           *       //once complete, then run done()\n           *       return function cancellationFunction(element) {\n           *         //code to cancel the animation\n           *       }\n           *     }\n           *   }\n           * })\n           * ```\n           *\n           * See {@link ng.$animateProvider#register $animateProvider.register()} and\n           * {@link ngAnimate ngAnimate module} for more information.\n           */\n          animation: invokeLaterAndSetModuleName('$animateProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#filter\n           * @module ng\n           * @param {string} name Filter name - this must be a valid angular expression identifier\n           * @param {Function} filterFactory Factory function for creating new instance of filter.\n           * @description\n           * See {@link ng.$filterProvider#register $filterProvider.register()}.\n           *\n           * <div class=\"alert alert-warning\">\n           * **Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.\n           * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace\n           * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores\n           * (`myapp_subsection_filterx`).\n           * </div>\n           */\n          filter: invokeLaterAndSetModuleName('$filterProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#controller\n           * @module ng\n           * @param {string|Object} name Controller name, or an object map of controllers where the\n           *    keys are the names and the values are the constructors.\n           * @param {Function} constructor Controller constructor function.\n           * @description\n           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\n           */\n          controller: invokeLaterAndSetModuleName('$controllerProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#directive\n           * @module ng\n           * @param {string|Object} name Directive name, or an object map of directives where the\n           *    keys are the names and the values are the factories.\n           * @param {Function} directiveFactory Factory function for creating new instance of\n           * directives.\n           * @description\n           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\n           */\n          directive: invokeLaterAndSetModuleName('$compileProvider', 'directive'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#component\n           * @module ng\n           * @param {string} name Name of the component in camel-case (i.e. myComp which will match as my-comp)\n           * @param {Object} options Component definition object (a simplified\n           *    {@link ng.$compile#directive-definition-object directive definition object})\n           *\n           * @description\n           * See {@link ng.$compileProvider#component $compileProvider.component()}.\n           */\n          component: invokeLaterAndSetModuleName('$compileProvider', 'component'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#config\n           * @module ng\n           * @param {Function} configFn Execute this function on module load. Useful for service\n           *    configuration.\n           * @description\n           * Use this method to register work which needs to be performed on module loading.\n           * For more about how to configure services, see\n           * {@link providers#provider-recipe Provider Recipe}.\n           */\n          config: config,\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#run\n           * @module ng\n           * @param {Function} initializationFn Execute this function after injector creation.\n           *    Useful for application initialization.\n           * @description\n           * Use this method to register work which should be performed when the injector is done\n           * loading all modules.\n           */\n          run: function(block) {\n            runBlocks.push(block);\n            return this;\n          }\n        };\n\n        if (configFn) {\n          config(configFn);\n        }\n\n        return moduleInstance;\n\n        /**\n         * @param {string} provider\n         * @param {string} method\n         * @param {String=} insertMethod\n         * @returns {angular.Module}\n         */\n        function invokeLater(provider, method, insertMethod, queue) {\n          if (!queue) queue = invokeQueue;\n          return function() {\n            queue[insertMethod || 'push']([provider, method, arguments]);\n            return moduleInstance;\n          };\n        }\n\n        /**\n         * @param {string} provider\n         * @param {string} method\n         * @returns {angular.Module}\n         */\n        function invokeLaterAndSetModuleName(provider, method, queue) {\n          if (!queue) queue = invokeQueue;\n          return function(recipeName, factoryFunction) {\n            if (factoryFunction && isFunction(factoryFunction)) factoryFunction.$$moduleName = name;\n            queue.push([provider, method, arguments]);\n            return moduleInstance;\n          };\n        }\n      });\n    };\n  });\n\n}\n\n/* global shallowCopy: true */\n\n/**\n * Creates a shallow copy of an object, an array or a primitive.\n *\n * Assumes that there are no proto properties for objects.\n */\nfunction shallowCopy(src, dst) {\n  if (isArray(src)) {\n    dst = dst || [];\n\n    for (var i = 0, ii = src.length; i < ii; i++) {\n      dst[i] = src[i];\n    }\n  } else if (isObject(src)) {\n    dst = dst || {};\n\n    for (var key in src) {\n      if (!(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst || src;\n}\n\n/* global toDebugString: true */\n\nfunction serializeObject(obj) {\n  var seen = [];\n\n  return JSON.stringify(obj, function(key, val) {\n    val = toJsonReplacer(key, val);\n    if (isObject(val)) {\n\n      if (seen.indexOf(val) >= 0) return '...';\n\n      seen.push(val);\n    }\n    return val;\n  });\n}\n\nfunction toDebugString(obj) {\n  if (typeof obj === 'function') {\n    return obj.toString().replace(/ \\{[\\s\\S]*$/, '');\n  } else if (isUndefined(obj)) {\n    return 'undefined';\n  } else if (typeof obj !== 'string') {\n    return serializeObject(obj);\n  }\n  return obj;\n}\n\n/* global angularModule: true,\n  version: true,\n\n  $CompileProvider,\n\n  htmlAnchorDirective,\n  inputDirective,\n  inputDirective,\n  formDirective,\n  scriptDirective,\n  selectDirective,\n  optionDirective,\n  ngBindDirective,\n  ngBindHtmlDirective,\n  ngBindTemplateDirective,\n  ngClassDirective,\n  ngClassEvenDirective,\n  ngClassOddDirective,\n  ngCloakDirective,\n  ngControllerDirective,\n  ngFormDirective,\n  ngHideDirective,\n  ngIfDirective,\n  ngIncludeDirective,\n  ngIncludeFillContentDirective,\n  ngInitDirective,\n  ngNonBindableDirective,\n  ngPluralizeDirective,\n  ngRepeatDirective,\n  ngShowDirective,\n  ngStyleDirective,\n  ngSwitchDirective,\n  ngSwitchWhenDirective,\n  ngSwitchDefaultDirective,\n  ngOptionsDirective,\n  ngTranscludeDirective,\n  ngModelDirective,\n  ngListDirective,\n  ngChangeDirective,\n  patternDirective,\n  patternDirective,\n  requiredDirective,\n  requiredDirective,\n  minlengthDirective,\n  minlengthDirective,\n  maxlengthDirective,\n  maxlengthDirective,\n  ngValueDirective,\n  ngModelOptionsDirective,\n  ngAttributeAliasDirectives,\n  ngEventDirectives,\n\n  $AnchorScrollProvider,\n  $AnimateProvider,\n  $CoreAnimateCssProvider,\n  $$CoreAnimateJsProvider,\n  $$CoreAnimateQueueProvider,\n  $$AnimateRunnerFactoryProvider,\n  $$AnimateAsyncRunFactoryProvider,\n  $BrowserProvider,\n  $CacheFactoryProvider,\n  $ControllerProvider,\n  $DateProvider,\n  $DocumentProvider,\n  $$IsDocumentHiddenProvider,\n  $ExceptionHandlerProvider,\n  $FilterProvider,\n  $$ForceReflowProvider,\n  $InterpolateProvider,\n  $IntervalProvider,\n  $HttpProvider,\n  $HttpParamSerializerProvider,\n  $HttpParamSerializerJQLikeProvider,\n  $HttpBackendProvider,\n  $xhrFactoryProvider,\n  $jsonpCallbacksProvider,\n  $LocationProvider,\n  $LogProvider,\n  $$MapProvider,\n  $ParseProvider,\n  $RootScopeProvider,\n  $QProvider,\n  $$QProvider,\n  $$SanitizeUriProvider,\n  $SceProvider,\n  $SceDelegateProvider,\n  $SnifferProvider,\n  $TemplateCacheProvider,\n  $TemplateRequestProvider,\n  $$TestabilityProvider,\n  $TimeoutProvider,\n  $$RAFProvider,\n  $WindowProvider,\n  $$jqLiteProvider,\n  $$CookieReaderProvider\n*/\n\n\n/**\n * @ngdoc object\n * @name angular.version\n * @module ng\n * @description\n * An object that contains information about the current AngularJS version.\n *\n * This object has the following properties:\n *\n * - `full` – `{string}` – Full version string, such as \"0.9.18\".\n * - `major` – `{number}` – Major version number, such as \"0\".\n * - `minor` – `{number}` – Minor version number, such as \"9\".\n * - `dot` – `{number}` – Dot version number, such as \"18\".\n * - `codeName` – `{string}` – Code name of the release, such as \"jiggling-armfat\".\n */\nvar version = {\n  // These placeholder strings will be replaced by grunt's `build` task.\n  // They need to be double- or single-quoted.\n  full: '1.6.2',\n  major: 1,\n  minor: 6,\n  dot: 2,\n  codeName: 'llamacorn-lovehug'\n};\n\n\nfunction publishExternalAPI(angular) {\n  extend(angular, {\n    'bootstrap': bootstrap,\n    'copy': copy,\n    'extend': extend,\n    'merge': merge,\n    'equals': equals,\n    'element': jqLite,\n    'forEach': forEach,\n    'injector': createInjector,\n    'noop': noop,\n    'bind': bind,\n    'toJson': toJson,\n    'fromJson': fromJson,\n    'identity': identity,\n    'isUndefined': isUndefined,\n    'isDefined': isDefined,\n    'isString': isString,\n    'isFunction': isFunction,\n    'isObject': isObject,\n    'isNumber': isNumber,\n    'isElement': isElement,\n    'isArray': isArray,\n    'version': version,\n    'isDate': isDate,\n    'lowercase': lowercase,\n    'uppercase': uppercase,\n    'callbacks': {$$counter: 0},\n    'getTestability': getTestability,\n    'reloadWithDebugInfo': reloadWithDebugInfo,\n    '$$minErr': minErr,\n    '$$csp': csp,\n    '$$encodeUriSegment': encodeUriSegment,\n    '$$encodeUriQuery': encodeUriQuery,\n    '$$stringify': stringify\n  });\n\n  angularModule = setupModuleLoader(window);\n\n  angularModule('ng', ['ngLocale'], ['$provide',\n    function ngModule($provide) {\n      // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.\n      $provide.provider({\n        $$sanitizeUri: $$SanitizeUriProvider\n      });\n      $provide.provider('$compile', $CompileProvider).\n        directive({\n            a: htmlAnchorDirective,\n            input: inputDirective,\n            textarea: inputDirective,\n            form: formDirective,\n            script: scriptDirective,\n            select: selectDirective,\n            option: optionDirective,\n            ngBind: ngBindDirective,\n            ngBindHtml: ngBindHtmlDirective,\n            ngBindTemplate: ngBindTemplateDirective,\n            ngClass: ngClassDirective,\n            ngClassEven: ngClassEvenDirective,\n            ngClassOdd: ngClassOddDirective,\n            ngCloak: ngCloakDirective,\n            ngController: ngControllerDirective,\n            ngForm: ngFormDirective,\n            ngHide: ngHideDirective,\n            ngIf: ngIfDirective,\n            ngInclude: ngIncludeDirective,\n            ngInit: ngInitDirective,\n            ngNonBindable: ngNonBindableDirective,\n            ngPluralize: ngPluralizeDirective,\n            ngRepeat: ngRepeatDirective,\n            ngShow: ngShowDirective,\n            ngStyle: ngStyleDirective,\n            ngSwitch: ngSwitchDirective,\n            ngSwitchWhen: ngSwitchWhenDirective,\n            ngSwitchDefault: ngSwitchDefaultDirective,\n            ngOptions: ngOptionsDirective,\n            ngTransclude: ngTranscludeDirective,\n            ngModel: ngModelDirective,\n            ngList: ngListDirective,\n            ngChange: ngChangeDirective,\n            pattern: patternDirective,\n            ngPattern: patternDirective,\n            required: requiredDirective,\n            ngRequired: requiredDirective,\n            minlength: minlengthDirective,\n            ngMinlength: minlengthDirective,\n            maxlength: maxlengthDirective,\n            ngMaxlength: maxlengthDirective,\n            ngValue: ngValueDirective,\n            ngModelOptions: ngModelOptionsDirective\n        }).\n        directive({\n          ngInclude: ngIncludeFillContentDirective\n        }).\n        directive(ngAttributeAliasDirectives).\n        directive(ngEventDirectives);\n      $provide.provider({\n        $anchorScroll: $AnchorScrollProvider,\n        $animate: $AnimateProvider,\n        $animateCss: $CoreAnimateCssProvider,\n        $$animateJs: $$CoreAnimateJsProvider,\n        $$animateQueue: $$CoreAnimateQueueProvider,\n        $$AnimateRunner: $$AnimateRunnerFactoryProvider,\n        $$animateAsyncRun: $$AnimateAsyncRunFactoryProvider,\n        $browser: $BrowserProvider,\n        $cacheFactory: $CacheFactoryProvider,\n        $controller: $ControllerProvider,\n        $document: $DocumentProvider,\n        $$isDocumentHidden: $$IsDocumentHiddenProvider,\n        $exceptionHandler: $ExceptionHandlerProvider,\n        $filter: $FilterProvider,\n        $$forceReflow: $$ForceReflowProvider,\n        $interpolate: $InterpolateProvider,\n        $interval: $IntervalProvider,\n        $http: $HttpProvider,\n        $httpParamSerializer: $HttpParamSerializerProvider,\n        $httpParamSerializerJQLike: $HttpParamSerializerJQLikeProvider,\n        $httpBackend: $HttpBackendProvider,\n        $xhrFactory: $xhrFactoryProvider,\n        $jsonpCallbacks: $jsonpCallbacksProvider,\n        $location: $LocationProvider,\n        $log: $LogProvider,\n        $parse: $ParseProvider,\n        $rootScope: $RootScopeProvider,\n        $q: $QProvider,\n        $$q: $$QProvider,\n        $sce: $SceProvider,\n        $sceDelegate: $SceDelegateProvider,\n        $sniffer: $SnifferProvider,\n        $templateCache: $TemplateCacheProvider,\n        $templateRequest: $TemplateRequestProvider,\n        $$testability: $$TestabilityProvider,\n        $timeout: $TimeoutProvider,\n        $window: $WindowProvider,\n        $$rAF: $$RAFProvider,\n        $$jqLite: $$jqLiteProvider,\n        $$Map: $$MapProvider,\n        $$cookieReader: $$CookieReaderProvider\n      });\n    }\n  ]);\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/* global\n  JQLitePrototype: true,\n  BOOLEAN_ATTR: true,\n  ALIASED_ATTR: true\n*/\n\n//////////////////////////////////\n//JQLite\n//////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.element\n * @module ng\n * @kind function\n *\n * @description\n * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\n *\n * If jQuery is available, `angular.element` is an alias for the\n * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`\n * delegates to Angular's built-in subset of jQuery, called \"jQuery lite\" or **jqLite**.\n *\n * jqLite is a tiny, API-compatible subset of jQuery that allows\n * Angular to manipulate the DOM in a cross-browser compatible way. jqLite implements only the most\n * commonly needed functionality with the goal of having a very small footprint.\n *\n * To use `jQuery`, simply ensure it is loaded before the `angular.js` file. You can also use the\n * {@link ngJq `ngJq`} directive to specify that jqlite should be used over jQuery, or to use a\n * specific version of jQuery if multiple versions exist on the page.\n *\n * <div class=\"alert alert-info\">**Note:** All element references in Angular are always wrapped with jQuery or\n * jqLite (such as the element argument in a directive's compile / link function). They are never raw DOM references.</div>\n *\n * <div class=\"alert alert-warning\">**Note:** Keep in mind that this function will not find elements\n * by tag name / CSS selector. For lookups by tag name, try instead `angular.element(document).find(...)`\n * or `$document.find()`, or use the standard DOM APIs, e.g. `document.querySelectorAll()`.</div>\n *\n * ## Angular's jqLite\n * jqLite provides only the following jQuery methods:\n *\n * - [`addClass()`](http://api.jquery.com/addClass/) - Does not support a function as first argument\n * - [`after()`](http://api.jquery.com/after/)\n * - [`append()`](http://api.jquery.com/append/)\n * - [`attr()`](http://api.jquery.com/attr/) - Does not support functions as parameters\n * - [`bind()`](http://api.jquery.com/bind/) (_deprecated_, use [`on()`](http://api.jquery.com/on/)) - Does not support namespaces, selectors or eventData\n * - [`children()`](http://api.jquery.com/children/) - Does not support selectors\n * - [`clone()`](http://api.jquery.com/clone/)\n * - [`contents()`](http://api.jquery.com/contents/)\n * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyle()`.\n *   As a setter, does not convert numbers to strings or append 'px', and also does not have automatic property prefixing.\n * - [`data()`](http://api.jquery.com/data/)\n * - [`detach()`](http://api.jquery.com/detach/)\n * - [`empty()`](http://api.jquery.com/empty/)\n * - [`eq()`](http://api.jquery.com/eq/)\n * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name\n * - [`hasClass()`](http://api.jquery.com/hasClass/)\n * - [`html()`](http://api.jquery.com/html/)\n * - [`next()`](http://api.jquery.com/next/) - Does not support selectors\n * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData\n * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces, selectors or event object as parameter\n * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors\n * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors\n * - [`prepend()`](http://api.jquery.com/prepend/)\n * - [`prop()`](http://api.jquery.com/prop/)\n * - [`ready()`](http://api.jquery.com/ready/) (_deprecated_, use `angular.element(callback)` instead of `angular.element(document).ready(callback)`)\n * - [`remove()`](http://api.jquery.com/remove/)\n * - [`removeAttr()`](http://api.jquery.com/removeAttr/) - Does not support multiple attributes\n * - [`removeClass()`](http://api.jquery.com/removeClass/) - Does not support a function as first argument\n * - [`removeData()`](http://api.jquery.com/removeData/)\n * - [`replaceWith()`](http://api.jquery.com/replaceWith/)\n * - [`text()`](http://api.jquery.com/text/)\n * - [`toggleClass()`](http://api.jquery.com/toggleClass/) - Does not support a function as first argument\n * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers\n * - [`unbind()`](http://api.jquery.com/unbind/) (_deprecated_, use [`off()`](http://api.jquery.com/off/)) - Does not support namespaces or event object as parameter\n * - [`val()`](http://api.jquery.com/val/)\n * - [`wrap()`](http://api.jquery.com/wrap/)\n *\n * ## jQuery/jqLite Extras\n * Angular also provides the following additional methods and events to both jQuery and jqLite:\n *\n * ### Events\n * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event\n *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM\n *    element before it is removed.\n *\n * ### Methods\n * - `controller(name)` - retrieves the controller of the current element or its parent. By default\n *   retrieves controller associated with the `ngController` directive. If `name` is provided as\n *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\n *   `'ngModel'`).\n * - `injector()` - retrieves the injector of the current element or its parent.\n * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current\n *   element or its parent. Requires {@link guide/production#disabling-debug-data Debug Data} to\n *   be enabled.\n * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the\n *   current element. This getter should be used only on elements that contain a directive which starts a new isolate\n *   scope. Calling `scope()` on this element always returns the original non-isolate scope.\n *   Requires {@link guide/production#disabling-debug-data Debug Data} to be enabled.\n * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\n *   parent element is reached.\n *\n * @knownIssue You cannot spy on `angular.element` if you are using Jasmine version 1.x. See\n * https://github.com/angular/angular.js/issues/14251 for more information.\n *\n * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\n * @returns {Object} jQuery object.\n */\n\nJQLite.expando = 'ng339';\n\nvar jqCache = JQLite.cache = {},\n    jqId = 1;\n\n/*\n * !!! This is an undocumented \"private\" function !!!\n */\nJQLite._data = function(node) {\n  //jQuery always returns an object on cache miss\n  return this.cache[node[this.expando]] || {};\n};\n\nfunction jqNextId() { return ++jqId; }\n\n\nvar DASH_LOWERCASE_REGEXP = /-([a-z])/g;\nvar MS_HACK_REGEXP = /^-ms-/;\nvar MOUSE_EVENT_MAP = { mouseleave: 'mouseout', mouseenter: 'mouseover' };\nvar jqLiteMinErr = minErr('jqLite');\n\n/**\n * Converts kebab-case to camelCase.\n * There is also a special case for the ms prefix starting with a lowercase letter.\n * @param name Name to normalize\n */\nfunction cssKebabToCamel(name) {\n    return kebabToCamel(name.replace(MS_HACK_REGEXP, 'ms-'));\n}\n\nfunction fnCamelCaseReplace(all, letter) {\n  return letter.toUpperCase();\n}\n\n/**\n * Converts kebab-case to camelCase.\n * @param name Name to normalize\n */\nfunction kebabToCamel(name) {\n  return name\n    .replace(DASH_LOWERCASE_REGEXP, fnCamelCaseReplace);\n}\n\nvar SINGLE_TAG_REGEXP = /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/;\nvar HTML_REGEXP = /<|&#?\\w+;/;\nvar TAG_NAME_REGEXP = /<([\\w:-]+)/;\nvar XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi;\n\nvar wrapMap = {\n  'option': [1, '<select multiple=\"multiple\">', '</select>'],\n\n  'thead': [1, '<table>', '</table>'],\n  'col': [2, '<table><colgroup>', '</colgroup></table>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n  'td': [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  '_default': [0, '', '']\n};\n\nwrapMap.optgroup = wrapMap.option;\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction jqLiteIsTextNode(html) {\n  return !HTML_REGEXP.test(html);\n}\n\nfunction jqLiteAcceptsData(node) {\n  // The window object can accept data but has no nodeType\n  // Otherwise we are only interested in elements (1) and documents (9)\n  var nodeType = node.nodeType;\n  return nodeType === NODE_TYPE_ELEMENT || !nodeType || nodeType === NODE_TYPE_DOCUMENT;\n}\n\nfunction jqLiteHasData(node) {\n  for (var key in jqCache[node.ng339]) {\n    return true;\n  }\n  return false;\n}\n\nfunction jqLiteCleanData(nodes) {\n  for (var i = 0, ii = nodes.length; i < ii; i++) {\n    jqLiteRemoveData(nodes[i]);\n  }\n}\n\nfunction jqLiteBuildFragment(html, context) {\n  var tmp, tag, wrap,\n      fragment = context.createDocumentFragment(),\n      nodes = [], i;\n\n  if (jqLiteIsTextNode(html)) {\n    // Convert non-html into a text node\n    nodes.push(context.createTextNode(html));\n  } else {\n    // Convert html into DOM nodes\n    tmp = fragment.appendChild(context.createElement('div'));\n    tag = (TAG_NAME_REGEXP.exec(html) || ['', ''])[1].toLowerCase();\n    wrap = wrapMap[tag] || wrapMap._default;\n    tmp.innerHTML = wrap[1] + html.replace(XHTML_TAG_REGEXP, '<$1></$2>') + wrap[2];\n\n    // Descend through wrappers to the right content\n    i = wrap[0];\n    while (i--) {\n      tmp = tmp.lastChild;\n    }\n\n    nodes = concat(nodes, tmp.childNodes);\n\n    tmp = fragment.firstChild;\n    tmp.textContent = '';\n  }\n\n  // Remove wrapper from fragment\n  fragment.textContent = '';\n  fragment.innerHTML = ''; // Clear inner HTML\n  forEach(nodes, function(node) {\n    fragment.appendChild(node);\n  });\n\n  return fragment;\n}\n\nfunction jqLiteParseHTML(html, context) {\n  context = context || window.document;\n  var parsed;\n\n  if ((parsed = SINGLE_TAG_REGEXP.exec(html))) {\n    return [context.createElement(parsed[1])];\n  }\n\n  if ((parsed = jqLiteBuildFragment(html, context))) {\n    return parsed.childNodes;\n  }\n\n  return [];\n}\n\nfunction jqLiteWrapNode(node, wrapper) {\n  var parent = node.parentNode;\n\n  if (parent) {\n    parent.replaceChild(wrapper, node);\n  }\n\n  wrapper.appendChild(node);\n}\n\n\n// IE9-11 has no method \"contains\" in SVG element and in Node.prototype. Bug #10259.\nvar jqLiteContains = window.Node.prototype.contains || /** @this */ function(arg) {\n  // eslint-disable-next-line no-bitwise\n  return !!(this.compareDocumentPosition(arg) & 16);\n};\n\n/////////////////////////////////////////////\nfunction JQLite(element) {\n  if (element instanceof JQLite) {\n    return element;\n  }\n\n  var argIsString;\n\n  if (isString(element)) {\n    element = trim(element);\n    argIsString = true;\n  }\n  if (!(this instanceof JQLite)) {\n    if (argIsString && element.charAt(0) !== '<') {\n      throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');\n    }\n    return new JQLite(element);\n  }\n\n  if (argIsString) {\n    jqLiteAddNodes(this, jqLiteParseHTML(element));\n  } else if (isFunction(element)) {\n    jqLiteReady(element);\n  } else {\n    jqLiteAddNodes(this, element);\n  }\n}\n\nfunction jqLiteClone(element) {\n  return element.cloneNode(true);\n}\n\nfunction jqLiteDealoc(element, onlyDescendants) {\n  if (!onlyDescendants) jqLiteRemoveData(element);\n\n  if (element.querySelectorAll) {\n    var descendants = element.querySelectorAll('*');\n    for (var i = 0, l = descendants.length; i < l; i++) {\n      jqLiteRemoveData(descendants[i]);\n    }\n  }\n}\n\nfunction jqLiteOff(element, type, fn, unsupported) {\n  if (isDefined(unsupported)) throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');\n\n  var expandoStore = jqLiteExpandoStore(element);\n  var events = expandoStore && expandoStore.events;\n  var handle = expandoStore && expandoStore.handle;\n\n  if (!handle) return; //no listeners registered\n\n  if (!type) {\n    for (type in events) {\n      if (type !== '$destroy') {\n        element.removeEventListener(type, handle);\n      }\n      delete events[type];\n    }\n  } else {\n\n    var removeHandler = function(type) {\n      var listenerFns = events[type];\n      if (isDefined(fn)) {\n        arrayRemove(listenerFns || [], fn);\n      }\n      if (!(isDefined(fn) && listenerFns && listenerFns.length > 0)) {\n        element.removeEventListener(type, handle);\n        delete events[type];\n      }\n    };\n\n    forEach(type.split(' '), function(type) {\n      removeHandler(type);\n      if (MOUSE_EVENT_MAP[type]) {\n        removeHandler(MOUSE_EVENT_MAP[type]);\n      }\n    });\n  }\n}\n\nfunction jqLiteRemoveData(element, name) {\n  var expandoId = element.ng339;\n  var expandoStore = expandoId && jqCache[expandoId];\n\n  if (expandoStore) {\n    if (name) {\n      delete expandoStore.data[name];\n      return;\n    }\n\n    if (expandoStore.handle) {\n      if (expandoStore.events.$destroy) {\n        expandoStore.handle({}, '$destroy');\n      }\n      jqLiteOff(element);\n    }\n    delete jqCache[expandoId];\n    element.ng339 = undefined; // don't delete DOM expandos. IE and Chrome don't like it\n  }\n}\n\n\nfunction jqLiteExpandoStore(element, createIfNecessary) {\n  var expandoId = element.ng339,\n      expandoStore = expandoId && jqCache[expandoId];\n\n  if (createIfNecessary && !expandoStore) {\n    element.ng339 = expandoId = jqNextId();\n    expandoStore = jqCache[expandoId] = {events: {}, data: {}, handle: undefined};\n  }\n\n  return expandoStore;\n}\n\n\nfunction jqLiteData(element, key, value) {\n  if (jqLiteAcceptsData(element)) {\n    var prop;\n\n    var isSimpleSetter = isDefined(value);\n    var isSimpleGetter = !isSimpleSetter && key && !isObject(key);\n    var massGetter = !key;\n    var expandoStore = jqLiteExpandoStore(element, !isSimpleGetter);\n    var data = expandoStore && expandoStore.data;\n\n    if (isSimpleSetter) { // data('key', value)\n      data[kebabToCamel(key)] = value;\n    } else {\n      if (massGetter) {  // data()\n        return data;\n      } else {\n        if (isSimpleGetter) { // data('key')\n          // don't force creation of expandoStore if it doesn't exist yet\n          return data && data[kebabToCamel(key)];\n        } else { // mass-setter: data({key1: val1, key2: val2})\n          for (prop in key) {\n            data[kebabToCamel(prop)] = key[prop];\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction jqLiteHasClass(element, selector) {\n  if (!element.getAttribute) return false;\n  return ((' ' + (element.getAttribute('class') || '') + ' ').replace(/[\\n\\t]/g, ' ').\n      indexOf(' ' + selector + ' ') > -1);\n}\n\nfunction jqLiteRemoveClass(element, cssClasses) {\n  if (cssClasses && element.setAttribute) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      element.setAttribute('class', trim(\n          (' ' + (element.getAttribute('class') || '') + ' ')\n          .replace(/[\\n\\t]/g, ' ')\n          .replace(' ' + trim(cssClass) + ' ', ' '))\n      );\n    });\n  }\n}\n\nfunction jqLiteAddClass(element, cssClasses) {\n  if (cssClasses && element.setAttribute) {\n    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')\n                            .replace(/[\\n\\t]/g, ' ');\n\n    forEach(cssClasses.split(' '), function(cssClass) {\n      cssClass = trim(cssClass);\n      if (existingClasses.indexOf(' ' + cssClass + ' ') === -1) {\n        existingClasses += cssClass + ' ';\n      }\n    });\n\n    element.setAttribute('class', trim(existingClasses));\n  }\n}\n\n\nfunction jqLiteAddNodes(root, elements) {\n  // THIS CODE IS VERY HOT. Don't make changes without benchmarking.\n\n  if (elements) {\n\n    // if a Node (the most common case)\n    if (elements.nodeType) {\n      root[root.length++] = elements;\n    } else {\n      var length = elements.length;\n\n      // if an Array or NodeList and not a Window\n      if (typeof length === 'number' && elements.window !== elements) {\n        if (length) {\n          for (var i = 0; i < length; i++) {\n            root[root.length++] = elements[i];\n          }\n        }\n      } else {\n        root[root.length++] = elements;\n      }\n    }\n  }\n}\n\n\nfunction jqLiteController(element, name) {\n  return jqLiteInheritedData(element, '$' + (name || 'ngController') + 'Controller');\n}\n\nfunction jqLiteInheritedData(element, name, value) {\n  // if element is the document object work with the html element instead\n  // this makes $(document).scope() possible\n  if (element.nodeType === NODE_TYPE_DOCUMENT) {\n    element = element.documentElement;\n  }\n  var names = isArray(name) ? name : [name];\n\n  while (element) {\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      if (isDefined(value = jqLite.data(element, names[i]))) return value;\n    }\n\n    // If dealing with a document fragment node with a host element, and no parent, use the host\n    // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM\n    // to lookup parent controllers.\n    element = element.parentNode || (element.nodeType === NODE_TYPE_DOCUMENT_FRAGMENT && element.host);\n  }\n}\n\nfunction jqLiteEmpty(element) {\n  jqLiteDealoc(element, true);\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nfunction jqLiteRemove(element, keepData) {\n  if (!keepData) jqLiteDealoc(element);\n  var parent = element.parentNode;\n  if (parent) parent.removeChild(element);\n}\n\n\nfunction jqLiteDocumentLoaded(action, win) {\n  win = win || window;\n  if (win.document.readyState === 'complete') {\n    // Force the action to be run async for consistent behavior\n    // from the action's point of view\n    // i.e. it will definitely not be in a $apply\n    win.setTimeout(action);\n  } else {\n    // No need to unbind this handler as load is only ever called once\n    jqLite(win).on('load', action);\n  }\n}\n\nfunction jqLiteReady(fn) {\n  function trigger() {\n    window.document.removeEventListener('DOMContentLoaded', trigger);\n    window.removeEventListener('load', trigger);\n    fn();\n  }\n\n  // check if document is already loaded\n  if (window.document.readyState === 'complete') {\n    window.setTimeout(fn);\n  } else {\n    // We can not use jqLite since we are not done loading and jQuery could be loaded later.\n\n    // Works for modern browsers and IE9\n    window.document.addEventListener('DOMContentLoaded', trigger);\n\n    // Fallback to window.onload for others\n    window.addEventListener('load', trigger);\n  }\n}\n\n//////////////////////////////////////////\n// Functions which are declared directly.\n//////////////////////////////////////////\nvar JQLitePrototype = JQLite.prototype = {\n  ready: jqLiteReady,\n  toString: function() {\n    var value = [];\n    forEach(this, function(e) { value.push('' + e);});\n    return '[' + value.join(', ') + ']';\n  },\n\n  eq: function(index) {\n      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\n  },\n\n  length: 0,\n  push: push,\n  sort: [].sort,\n  splice: [].splice\n};\n\n//////////////////////////////////////////\n// Functions iterating getter/setters.\n// these functions return self on setter and\n// value on get.\n//////////////////////////////////////////\nvar BOOLEAN_ATTR = {};\nforEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {\n  BOOLEAN_ATTR[lowercase(value)] = value;\n});\nvar BOOLEAN_ELEMENTS = {};\nforEach('input,select,option,textarea,button,form,details'.split(','), function(value) {\n  BOOLEAN_ELEMENTS[value] = true;\n});\nvar ALIASED_ATTR = {\n  'ngMinlength': 'minlength',\n  'ngMaxlength': 'maxlength',\n  'ngMin': 'min',\n  'ngMax': 'max',\n  'ngPattern': 'pattern',\n  'ngStep': 'step'\n};\n\nfunction getBooleanAttrName(element, name) {\n  // check dom last since we will most likely fail on name\n  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\n\n  // booleanAttr is here twice to minimize DOM access\n  return booleanAttr && BOOLEAN_ELEMENTS[nodeName_(element)] && booleanAttr;\n}\n\nfunction getAliasedAttrName(name) {\n  return ALIASED_ATTR[name];\n}\n\nforEach({\n  data: jqLiteData,\n  removeData: jqLiteRemoveData,\n  hasData: jqLiteHasData,\n  cleanData: jqLiteCleanData\n}, function(fn, name) {\n  JQLite[name] = fn;\n});\n\nforEach({\n  data: jqLiteData,\n  inheritedData: jqLiteInheritedData,\n\n  scope: function(element) {\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n    return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, ['$isolateScope', '$scope']);\n  },\n\n  isolateScope: function(element) {\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n    return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');\n  },\n\n  controller: jqLiteController,\n\n  injector: function(element) {\n    return jqLiteInheritedData(element, '$injector');\n  },\n\n  removeAttr: function(element, name) {\n    element.removeAttribute(name);\n  },\n\n  hasClass: jqLiteHasClass,\n\n  css: function(element, name, value) {\n    name = cssKebabToCamel(name);\n\n    if (isDefined(value)) {\n      element.style[name] = value;\n    } else {\n      return element.style[name];\n    }\n  },\n\n  attr: function(element, name, value) {\n    var ret;\n    var nodeType = element.nodeType;\n    if (nodeType === NODE_TYPE_TEXT || nodeType === NODE_TYPE_ATTRIBUTE || nodeType === NODE_TYPE_COMMENT ||\n      !element.getAttribute) {\n      return;\n    }\n\n    var lowercasedName = lowercase(name);\n    var isBooleanAttr = BOOLEAN_ATTR[lowercasedName];\n\n    if (isDefined(value)) {\n      // setter\n\n      if (value === null || (value === false && isBooleanAttr)) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, isBooleanAttr ? lowercasedName : value);\n      }\n    } else {\n      // getter\n\n      ret = element.getAttribute(name);\n\n      if (isBooleanAttr && ret !== null) {\n        ret = lowercasedName;\n      }\n      // Normalize non-existing attributes to undefined (as jQuery).\n      return ret === null ? undefined : ret;\n    }\n  },\n\n  prop: function(element, name, value) {\n    if (isDefined(value)) {\n      element[name] = value;\n    } else {\n      return element[name];\n    }\n  },\n\n  text: (function() {\n    getText.$dv = '';\n    return getText;\n\n    function getText(element, value) {\n      if (isUndefined(value)) {\n        var nodeType = element.nodeType;\n        return (nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_TEXT) ? element.textContent : '';\n      }\n      element.textContent = value;\n    }\n  })(),\n\n  val: function(element, value) {\n    if (isUndefined(value)) {\n      if (element.multiple && nodeName_(element) === 'select') {\n        var result = [];\n        forEach(element.options, function(option) {\n          if (option.selected) {\n            result.push(option.value || option.text);\n          }\n        });\n        return result;\n      }\n      return element.value;\n    }\n    element.value = value;\n  },\n\n  html: function(element, value) {\n    if (isUndefined(value)) {\n      return element.innerHTML;\n    }\n    jqLiteDealoc(element, true);\n    element.innerHTML = value;\n  },\n\n  empty: jqLiteEmpty\n}, function(fn, name) {\n  /**\n   * Properties: writes return selection, reads return first value\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var i, key;\n    var nodeCount = this.length;\n\n    // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\n    // in a way that survives minification.\n    // jqLiteEmpty takes no arguments but is a setter.\n    if (fn !== jqLiteEmpty &&\n        (isUndefined((fn.length === 2 && (fn !== jqLiteHasClass && fn !== jqLiteController)) ? arg1 : arg2))) {\n      if (isObject(arg1)) {\n\n        // we are a write, but the object properties are the key/values\n        for (i = 0; i < nodeCount; i++) {\n          if (fn === jqLiteData) {\n            // data() takes the whole object in jQuery\n            fn(this[i], arg1);\n          } else {\n            for (key in arg1) {\n              fn(this[i], key, arg1[key]);\n            }\n          }\n        }\n        // return self for chaining\n        return this;\n      } else {\n        // we are a read, so read the first child.\n        // TODO: do we still need this?\n        var value = fn.$dv;\n        // Only if we have $dv do we iterate over all, otherwise it is just the first element.\n        var jj = (isUndefined(value)) ? Math.min(nodeCount, 1) : nodeCount;\n        for (var j = 0; j < jj; j++) {\n          var nodeValue = fn(this[j], arg1, arg2);\n          value = value ? value + nodeValue : nodeValue;\n        }\n        return value;\n      }\n    } else {\n      // we are a write, so apply to all children\n      for (i = 0; i < nodeCount; i++) {\n        fn(this[i], arg1, arg2);\n      }\n      // return self for chaining\n      return this;\n    }\n  };\n});\n\nfunction createEventHandler(element, events) {\n  var eventHandler = function(event, type) {\n    // jQuery specific api\n    event.isDefaultPrevented = function() {\n      return event.defaultPrevented;\n    };\n\n    var eventFns = events[type || event.type];\n    var eventFnsLength = eventFns ? eventFns.length : 0;\n\n    if (!eventFnsLength) return;\n\n    if (isUndefined(event.immediatePropagationStopped)) {\n      var originalStopImmediatePropagation = event.stopImmediatePropagation;\n      event.stopImmediatePropagation = function() {\n        event.immediatePropagationStopped = true;\n\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n\n        if (originalStopImmediatePropagation) {\n          originalStopImmediatePropagation.call(event);\n        }\n      };\n    }\n\n    event.isImmediatePropagationStopped = function() {\n      return event.immediatePropagationStopped === true;\n    };\n\n    // Some events have special handlers that wrap the real handler\n    var handlerWrapper = eventFns.specialHandlerWrapper || defaultHandlerWrapper;\n\n    // Copy event handlers in case event handlers array is modified during execution.\n    if ((eventFnsLength > 1)) {\n      eventFns = shallowCopy(eventFns);\n    }\n\n    for (var i = 0; i < eventFnsLength; i++) {\n      if (!event.isImmediatePropagationStopped()) {\n        handlerWrapper(element, event, eventFns[i]);\n      }\n    }\n  };\n\n  // TODO: this is a hack for angularMocks/clearDataCache that makes it possible to deregister all\n  //       events on `element`\n  eventHandler.elem = element;\n  return eventHandler;\n}\n\nfunction defaultHandlerWrapper(element, event, handler) {\n  handler.call(element, event);\n}\n\nfunction specialMouseHandlerWrapper(target, event, handler) {\n  // Refer to jQuery's implementation of mouseenter & mouseleave\n  // Read about mouseenter and mouseleave:\n  // http://www.quirksmode.org/js/events_mouse.html#link8\n  var related = event.relatedTarget;\n  // For mousenter/leave call the handler if related is outside the target.\n  // NB: No relatedTarget if the mouse left/entered the browser window\n  if (!related || (related !== target && !jqLiteContains.call(target, related))) {\n    handler.call(target, event);\n  }\n}\n\n//////////////////////////////////////////\n// Functions iterating traversal.\n// These functions chain results into a single\n// selector.\n//////////////////////////////////////////\nforEach({\n  removeData: jqLiteRemoveData,\n\n  on: function jqLiteOn(element, type, fn, unsupported) {\n    if (isDefined(unsupported)) throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');\n\n    // Do not add event handlers to non-elements because they will not be cleaned up.\n    if (!jqLiteAcceptsData(element)) {\n      return;\n    }\n\n    var expandoStore = jqLiteExpandoStore(element, true);\n    var events = expandoStore.events;\n    var handle = expandoStore.handle;\n\n    if (!handle) {\n      handle = expandoStore.handle = createEventHandler(element, events);\n    }\n\n    // http://jsperf.com/string-indexof-vs-split\n    var types = type.indexOf(' ') >= 0 ? type.split(' ') : [type];\n    var i = types.length;\n\n    var addHandler = function(type, specialHandlerWrapper, noEventListener) {\n      var eventFns = events[type];\n\n      if (!eventFns) {\n        eventFns = events[type] = [];\n        eventFns.specialHandlerWrapper = specialHandlerWrapper;\n        if (type !== '$destroy' && !noEventListener) {\n          element.addEventListener(type, handle);\n        }\n      }\n\n      eventFns.push(fn);\n    };\n\n    while (i--) {\n      type = types[i];\n      if (MOUSE_EVENT_MAP[type]) {\n        addHandler(MOUSE_EVENT_MAP[type], specialMouseHandlerWrapper);\n        addHandler(type, undefined, true);\n      } else {\n        addHandler(type);\n      }\n    }\n  },\n\n  off: jqLiteOff,\n\n  one: function(element, type, fn) {\n    element = jqLite(element);\n\n    //add the listener twice so that when it is called\n    //you can remove the original function and still be\n    //able to call element.off(ev, fn) normally\n    element.on(type, function onFn() {\n      element.off(type, fn);\n      element.off(type, onFn);\n    });\n    element.on(type, fn);\n  },\n\n  replaceWith: function(element, replaceNode) {\n    var index, parent = element.parentNode;\n    jqLiteDealoc(element);\n    forEach(new JQLite(replaceNode), function(node) {\n      if (index) {\n        parent.insertBefore(node, index.nextSibling);\n      } else {\n        parent.replaceChild(node, element);\n      }\n      index = node;\n    });\n  },\n\n  children: function(element) {\n    var children = [];\n    forEach(element.childNodes, function(element) {\n      if (element.nodeType === NODE_TYPE_ELEMENT) {\n        children.push(element);\n      }\n    });\n    return children;\n  },\n\n  contents: function(element) {\n    return element.contentDocument || element.childNodes || [];\n  },\n\n  append: function(element, node) {\n    var nodeType = element.nodeType;\n    if (nodeType !== NODE_TYPE_ELEMENT && nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT) return;\n\n    node = new JQLite(node);\n\n    for (var i = 0, ii = node.length; i < ii; i++) {\n      var child = node[i];\n      element.appendChild(child);\n    }\n  },\n\n  prepend: function(element, node) {\n    if (element.nodeType === NODE_TYPE_ELEMENT) {\n      var index = element.firstChild;\n      forEach(new JQLite(node), function(child) {\n        element.insertBefore(child, index);\n      });\n    }\n  },\n\n  wrap: function(element, wrapNode) {\n    jqLiteWrapNode(element, jqLite(wrapNode).eq(0).clone()[0]);\n  },\n\n  remove: jqLiteRemove,\n\n  detach: function(element) {\n    jqLiteRemove(element, true);\n  },\n\n  after: function(element, newElement) {\n    var index = element, parent = element.parentNode;\n\n    if (parent) {\n      newElement = new JQLite(newElement);\n\n      for (var i = 0, ii = newElement.length; i < ii; i++) {\n        var node = newElement[i];\n        parent.insertBefore(node, index.nextSibling);\n        index = node;\n      }\n    }\n  },\n\n  addClass: jqLiteAddClass,\n  removeClass: jqLiteRemoveClass,\n\n  toggleClass: function(element, selector, condition) {\n    if (selector) {\n      forEach(selector.split(' '), function(className) {\n        var classCondition = condition;\n        if (isUndefined(classCondition)) {\n          classCondition = !jqLiteHasClass(element, className);\n        }\n        (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);\n      });\n    }\n  },\n\n  parent: function(element) {\n    var parent = element.parentNode;\n    return parent && parent.nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT ? parent : null;\n  },\n\n  next: function(element) {\n    return element.nextElementSibling;\n  },\n\n  find: function(element, selector) {\n    if (element.getElementsByTagName) {\n      return element.getElementsByTagName(selector);\n    } else {\n      return [];\n    }\n  },\n\n  clone: jqLiteClone,\n\n  triggerHandler: function(element, event, extraParameters) {\n\n    var dummyEvent, eventFnsCopy, handlerArgs;\n    var eventName = event.type || event;\n    var expandoStore = jqLiteExpandoStore(element);\n    var events = expandoStore && expandoStore.events;\n    var eventFns = events && events[eventName];\n\n    if (eventFns) {\n      // Create a dummy event to pass to the handlers\n      dummyEvent = {\n        preventDefault: function() { this.defaultPrevented = true; },\n        isDefaultPrevented: function() { return this.defaultPrevented === true; },\n        stopImmediatePropagation: function() { this.immediatePropagationStopped = true; },\n        isImmediatePropagationStopped: function() { return this.immediatePropagationStopped === true; },\n        stopPropagation: noop,\n        type: eventName,\n        target: element\n      };\n\n      // If a custom event was provided then extend our dummy event with it\n      if (event.type) {\n        dummyEvent = extend(dummyEvent, event);\n      }\n\n      // Copy event handlers in case event handlers array is modified during execution.\n      eventFnsCopy = shallowCopy(eventFns);\n      handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];\n\n      forEach(eventFnsCopy, function(fn) {\n        if (!dummyEvent.isImmediatePropagationStopped()) {\n          fn.apply(element, handlerArgs);\n        }\n      });\n    }\n  }\n}, function(fn, name) {\n  /**\n   * chaining functions\n   */\n  JQLite.prototype[name] = function(arg1, arg2, arg3) {\n    var value;\n\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (isUndefined(value)) {\n        value = fn(this[i], arg1, arg2, arg3);\n        if (isDefined(value)) {\n          // any function which returns a value needs to be wrapped\n          value = jqLite(value);\n        }\n      } else {\n        jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));\n      }\n    }\n    return isDefined(value) ? value : this;\n  };\n});\n\n// bind legacy bind/unbind to on/off\nJQLite.prototype.bind = JQLite.prototype.on;\nJQLite.prototype.unbind = JQLite.prototype.off;\n\n\n// Provider for private $$jqLite service\n/** @this */\nfunction $$jqLiteProvider() {\n  this.$get = function $$jqLite() {\n    return extend(JQLite, {\n      hasClass: function(node, classes) {\n        if (node.attr) node = node[0];\n        return jqLiteHasClass(node, classes);\n      },\n      addClass: function(node, classes) {\n        if (node.attr) node = node[0];\n        return jqLiteAddClass(node, classes);\n      },\n      removeClass: function(node, classes) {\n        if (node.attr) node = node[0];\n        return jqLiteRemoveClass(node, classes);\n      }\n    });\n  };\n}\n\n/**\n * Computes a hash of an 'obj'.\n * Hash of a:\n *  string is string\n *  number is number as string\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\n *         that is also assigned to the $$hashKey property of the object.\n *\n * @param obj\n * @returns {string} hash string such that the same input will have the same hash string.\n *         The resulting string key is in 'type:hashKey' format.\n */\nfunction hashKey(obj, nextUidFn) {\n  var key = obj && obj.$$hashKey;\n\n  if (key) {\n    if (typeof key === 'function') {\n      key = obj.$$hashKey();\n    }\n    return key;\n  }\n\n  var objType = typeof obj;\n  if (objType === 'function' || (objType === 'object' && obj !== null)) {\n    key = obj.$$hashKey = objType + ':' + (nextUidFn || nextUid)();\n  } else {\n    key = objType + ':' + obj;\n  }\n\n  return key;\n}\n\n// A minimal ES2015 Map implementation.\n// Should be bug/feature equivalent to the native implementations of supported browsers\n// (for the features required in Angular).\n// See https://kangax.github.io/compat-table/es6/#test-Map\nvar nanKey = Object.create(null);\nfunction NgMapShim() {\n  this._keys = [];\n  this._values = [];\n  this._lastKey = NaN;\n  this._lastIndex = -1;\n}\nNgMapShim.prototype = {\n  _idx: function(key) {\n    if (key === this._lastKey) {\n      return this._lastIndex;\n    }\n    this._lastKey = key;\n    this._lastIndex = this._keys.indexOf(key);\n    return this._lastIndex;\n  },\n  _transformKey: function(key) {\n    return isNumberNaN(key) ? nanKey : key;\n  },\n  get: function(key) {\n    key = this._transformKey(key);\n    var idx = this._idx(key);\n    if (idx !== -1) {\n      return this._values[idx];\n    }\n  },\n  set: function(key, value) {\n    key = this._transformKey(key);\n    var idx = this._idx(key);\n    if (idx === -1) {\n      idx = this._lastIndex = this._keys.length;\n    }\n    this._keys[idx] = key;\n    this._values[idx] = value;\n\n    // Support: IE11\n    // Do not `return this` to simulate the partial IE11 implementation\n  },\n  delete: function(key) {\n    key = this._transformKey(key);\n    var idx = this._idx(key);\n    if (idx === -1) {\n      return false;\n    }\n    this._keys.splice(idx, 1);\n    this._values.splice(idx, 1);\n    this._lastKey = NaN;\n    this._lastIndex = -1;\n    return true;\n  }\n};\n\n// For now, always use `NgMapShim`, even if `window.Map` is available. Some native implementations\n// are still buggy (often in subtle ways) and can cause hard-to-debug failures. When native `Map`\n// implementations get more stable, we can reconsider switching to `window.Map` (when available).\nvar NgMap = NgMapShim;\n\nvar $$MapProvider = [/** @this */function() {\n  this.$get = [function() {\n    return NgMap;\n  }];\n}];\n\n/**\n * @ngdoc function\n * @module ng\n * @name angular.injector\n * @kind function\n *\n * @description\n * Creates an injector object that can be used for retrieving services as well as for\n * dependency injection (see {@link guide/di dependency injection}).\n *\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\n *     {@link angular.module}. The `ng` module must be explicitly added.\n * @param {boolean=} [strictDi=false] Whether the injector should be in strict mode, which\n *     disallows argument name annotation inference.\n * @returns {injector} Injector object. See {@link auto.$injector $injector}.\n *\n * @example\n * Typical usage\n * ```js\n *   // create an injector\n *   var $injector = angular.injector(['ng']);\n *\n *   // use the injector to kick off your application\n *   // use the type inference to auto inject arguments, or use implicit injection\n *   $injector.invoke(function($rootScope, $compile, $document) {\n *     $compile($document)($rootScope);\n *     $rootScope.$digest();\n *   });\n * ```\n *\n * Sometimes you want to get access to the injector of a currently running Angular app\n * from outside Angular. Perhaps, you want to inject and compile some markup after the\n * application has been bootstrapped. You can do this using the extra `injector()` added\n * to JQuery/jqLite elements. See {@link angular.element}.\n *\n * *This is fairly rare but could be the case if a third party library is injecting the\n * markup.*\n *\n * In the following example a new block of HTML containing a `ng-controller`\n * directive is added to the end of the document body by JQuery. We then compile and link\n * it into the current AngularJS scope.\n *\n * ```js\n * var $div = $('<div ng-controller=\"MyCtrl\">{{content.label}}</div>');\n * $(document.body).append($div);\n *\n * angular.element(document).injector().invoke(function($compile) {\n *   var scope = angular.element($div).scope();\n *   $compile($div)(scope);\n * });\n * ```\n */\n\n\n/**\n * @ngdoc module\n * @name auto\n * @installation\n * @description\n *\n * Implicit module which gets automatically added to each {@link auto.$injector $injector}.\n */\n\nvar ARROW_ARG = /^([^(]+?)=>/;\nvar FN_ARGS = /^[^(]*\\(\\s*([^)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar $injectorMinErr = minErr('$injector');\n\nfunction stringifyFn(fn) {\n  return Function.prototype.toString.call(fn);\n}\n\nfunction extractArgs(fn) {\n  var fnText = stringifyFn(fn).replace(STRIP_COMMENTS, ''),\n      args = fnText.match(ARROW_ARG) || fnText.match(FN_ARGS);\n  return args;\n}\n\nfunction anonFn(fn) {\n  // For anonymous functions, showing at the very least the function signature can help in\n  // debugging.\n  var args = extractArgs(fn);\n  if (args) {\n    return 'function(' + (args[1] || '').replace(/[\\s\\r\\n]+/, ' ') + ')';\n  }\n  return 'fn';\n}\n\nfunction annotate(fn, strictDi, name) {\n  var $inject,\n      argDecl,\n      last;\n\n  if (typeof fn === 'function') {\n    if (!($inject = fn.$inject)) {\n      $inject = [];\n      if (fn.length) {\n        if (strictDi) {\n          if (!isString(name) || !name) {\n            name = fn.name || anonFn(fn);\n          }\n          throw $injectorMinErr('strictdi',\n            '{0} is not using explicit annotation and cannot be invoked in strict mode', name);\n        }\n        argDecl = extractArgs(fn);\n        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg) {\n          arg.replace(FN_ARG, function(all, underscore, name) {\n            $inject.push(name);\n          });\n        });\n      }\n      fn.$inject = $inject;\n    }\n  } else if (isArray(fn)) {\n    last = fn.length - 1;\n    assertArgFn(fn[last], 'fn');\n    $inject = fn.slice(0, last);\n  } else {\n    assertArgFn(fn, 'fn', true);\n  }\n  return $inject;\n}\n\n///////////////////////////////////////\n\n/**\n * @ngdoc service\n * @name $injector\n *\n * @description\n *\n * `$injector` is used to retrieve object instances as defined by\n * {@link auto.$provide provider}, instantiate types, invoke methods,\n * and load modules.\n *\n * The following always holds true:\n *\n * ```js\n *   var $injector = angular.injector();\n *   expect($injector.get('$injector')).toBe($injector);\n *   expect($injector.invoke(function($injector) {\n *     return $injector;\n *   })).toBe($injector);\n * ```\n *\n * # Injection Function Annotation\n *\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\n * following are all valid ways of annotating function with injection arguments and are equivalent.\n *\n * ```js\n *   // inferred (only works if code not minified/obfuscated)\n *   $injector.invoke(function(serviceA){});\n *\n *   // annotated\n *   function explicit(serviceA) {};\n *   explicit.$inject = ['serviceA'];\n *   $injector.invoke(explicit);\n *\n *   // inline\n *   $injector.invoke(['serviceA', function(serviceA){}]);\n * ```\n *\n * ## Inference\n *\n * In JavaScript calling `toString()` on a function returns the function definition. The definition\n * can then be parsed and the function arguments can be extracted. This method of discovering\n * annotations is disallowed when the injector is in strict mode.\n * *NOTE:* This does not work with minification, and obfuscation tools since these tools change the\n * argument names.\n *\n * ## `$inject` Annotation\n * By adding an `$inject` property onto a function the injection parameters can be specified.\n *\n * ## Inline\n * As an array of injection names, where the last item in the array is the function to call.\n */\n\n/**\n * @ngdoc method\n * @name $injector#get\n *\n * @description\n * Return an instance of the service.\n *\n * @param {string} name The name of the instance to retrieve.\n * @param {string=} caller An optional string to provide the origin of the function call for error messages.\n * @return {*} The instance.\n */\n\n/**\n * @ngdoc method\n * @name $injector#invoke\n *\n * @description\n * Invoke the method and supply the method arguments from the `$injector`.\n *\n * @param {Function|Array.<string|Function>} fn The injectable function to invoke. Function parameters are\n *   injected according to the {@link guide/di $inject Annotation} rules.\n * @param {Object=} self The `this` for the invoked method.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\n *                         object first, before the `$injector` is consulted.\n * @returns {*} the value returned by the invoked `fn` function.\n */\n\n/**\n * @ngdoc method\n * @name $injector#has\n *\n * @description\n * Allows the user to query if the particular service exists.\n *\n * @param {string} name Name of the service to query.\n * @returns {boolean} `true` if injector has given service.\n */\n\n/**\n * @ngdoc method\n * @name $injector#instantiate\n * @description\n * Create a new instance of JS type. The method takes a constructor function, invokes the new\n * operator, and supplies all of the arguments to the constructor function as specified by the\n * constructor annotation.\n *\n * @param {Function} Type Annotated constructor function.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\n * object first, before the `$injector` is consulted.\n * @returns {Object} new instance of `Type`.\n */\n\n/**\n * @ngdoc method\n * @name $injector#annotate\n *\n * @description\n * Returns an array of service names which the function is requesting for injection. This API is\n * used by the injector to determine which services need to be injected into the function when the\n * function is invoked. There are three ways in which the function can be annotated with the needed\n * dependencies.\n *\n * # Argument names\n *\n * The simplest form is to extract the dependencies from the arguments of the function. This is done\n * by converting the function into a string using `toString()` method and extracting the argument\n * names.\n * ```js\n *   // Given\n *   function MyController($scope, $route) {\n *     // ...\n *   }\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * ```\n *\n * You can disallow this method by using strict injection mode.\n *\n * This method does not work with code minification / obfuscation. For this reason the following\n * annotation strategies are supported.\n *\n * # The `$inject` property\n *\n * If a function has an `$inject` property and its value is an array of strings, then the strings\n * represent names of services to be injected into the function.\n * ```js\n *   // Given\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\n *     // ...\n *   }\n *   // Define function dependencies\n *   MyController['$inject'] = ['$scope', '$route'];\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * ```\n *\n * # The array notation\n *\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property\n * is very inconvenient. In these situations using the array notation to specify the dependencies in\n * a way that survives minification is a better choice:\n *\n * ```js\n *   // We wish to write this (not minification / obfuscation safe)\n *   injector.invoke(function($compile, $rootScope) {\n *     // ...\n *   });\n *\n *   // We are forced to write break inlining\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n *     // ...\n *   };\n *   tmpFn.$inject = ['$compile', '$rootScope'];\n *   injector.invoke(tmpFn);\n *\n *   // To better support inline function the inline annotation is supported\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n *     // ...\n *   }]);\n *\n *   // Therefore\n *   expect(injector.annotate(\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n *    ).toEqual(['$compile', '$rootScope']);\n * ```\n *\n * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to\n * be retrieved as described above.\n *\n * @param {boolean=} [strictDi=false] Disallow argument name annotation inference.\n *\n * @returns {Array.<string>} The names of the services which the function requires.\n */\n\n\n\n/**\n * @ngdoc service\n * @name $provide\n *\n * @description\n *\n * The {@link auto.$provide $provide} service has a number of methods for registering components\n * with the {@link auto.$injector $injector}. Many of these functions are also exposed on\n * {@link angular.Module}.\n *\n * An Angular **service** is a singleton object created by a **service factory**.  These **service\n * factories** are functions which, in turn, are created by a **service provider**.\n * The **service providers** are constructor functions. When instantiated they must contain a\n * property called `$get`, which holds the **service factory** function.\n *\n * When you request a service, the {@link auto.$injector $injector} is responsible for finding the\n * correct **service provider**, instantiating it and then calling its `$get` **service factory**\n * function to get the instance of the **service**.\n *\n * Often services have no configuration options and there is no need to add methods to the service\n * provider.  The provider will be no more than a constructor function with a `$get` property. For\n * these cases the {@link auto.$provide $provide} service has additional helper methods to register\n * services without specifying a provider.\n *\n * * {@link auto.$provide#provider provider(name, provider)} - registers a **service provider** with the\n *     {@link auto.$injector $injector}\n * * {@link auto.$provide#constant constant(name, obj)} - registers a value/object that can be accessed by\n *     providers and services.\n * * {@link auto.$provide#value value(name, obj)} - registers a value/object that can only be accessed by\n *     services, not providers.\n * * {@link auto.$provide#factory factory(name, fn)} - registers a service **factory function**\n *     that will be wrapped in a **service provider** object, whose `$get` property will contain the\n *     given factory function.\n * * {@link auto.$provide#service service(name, Fn)} - registers a **constructor function**\n *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n *      a new object using the given constructor function.\n * * {@link auto.$provide#decorator decorator(name, decorFn)} - registers a **decorator function** that\n *      will be able to modify or replace the implementation of another service.\n *\n * See the individual methods for more information and examples.\n */\n\n/**\n * @ngdoc method\n * @name $provide#provider\n * @description\n *\n * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions\n * are constructor functions, whose instances are responsible for \"providing\" a factory for a\n * service.\n *\n * Service provider names start with the name of the service they provide followed by `Provider`.\n * For example, the {@link ng.$log $log} service has a provider called\n * {@link ng.$logProvider $logProvider}.\n *\n * Service provider objects can have additional methods which allow configuration of the provider\n * and its service. Importantly, you can configure what kind of service is created by the `$get`\n * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\n * method {@link ng.$logProvider#debugEnabled debugEnabled}\n * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the\n * console or not.\n *\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name +\n                        'Provider'` key.\n * @param {(Object|function())} provider If the provider is:\n *\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.\n *   - `Constructor`: a new instance of the provider will be created using\n *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.\n *\n * @returns {Object} registered provider instance\n\n * @example\n *\n * The following example shows how to create a simple event tracking service and register it using\n * {@link auto.$provide#provider $provide.provider()}.\n *\n * ```js\n *  // Define the eventTracker provider\n *  function EventTrackerProvider() {\n *    var trackingUrl = '/track';\n *\n *    // A provider method for configuring where the tracked events should been saved\n *    this.setTrackingUrl = function(url) {\n *      trackingUrl = url;\n *    };\n *\n *    // The service factory function\n *    this.$get = ['$http', function($http) {\n *      var trackedEvents = {};\n *      return {\n *        // Call this to track an event\n *        event: function(event) {\n *          var count = trackedEvents[event] || 0;\n *          count += 1;\n *          trackedEvents[event] = count;\n *          return count;\n *        },\n *        // Call this to save the tracked events to the trackingUrl\n *        save: function() {\n *          $http.post(trackingUrl, trackedEvents);\n *        }\n *      };\n *    }];\n *  }\n *\n *  describe('eventTracker', function() {\n *    var postSpy;\n *\n *    beforeEach(module(function($provide) {\n *      // Register the eventTracker provider\n *      $provide.provider('eventTracker', EventTrackerProvider);\n *    }));\n *\n *    beforeEach(module(function(eventTrackerProvider) {\n *      // Configure eventTracker provider\n *      eventTrackerProvider.setTrackingUrl('/custom-track');\n *    }));\n *\n *    it('tracks events', inject(function(eventTracker) {\n *      expect(eventTracker.event('login')).toEqual(1);\n *      expect(eventTracker.event('login')).toEqual(2);\n *    }));\n *\n *    it('saves to the tracking url', inject(function(eventTracker, $http) {\n *      postSpy = spyOn($http, 'post');\n *      eventTracker.event('login');\n *      eventTracker.save();\n *      expect(postSpy).toHaveBeenCalled();\n *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');\n *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');\n *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });\n *    }));\n *  });\n * ```\n */\n\n/**\n * @ngdoc method\n * @name $provide#factory\n * @description\n *\n * Register a **service factory**, which will be called to return the service instance.\n * This is short for registering a service where its provider consists of only a `$get` property,\n * which is the given service factory function.\n * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\n * configure your service in a provider.\n *\n * @param {string} name The name of the instance.\n * @param {Function|Array.<string|Function>} $getFn The injectable $getFn for the instance creation.\n *                      Internally this is a short hand for `$provide.provider(name, {$get: $getFn})`.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here is an example of registering a service\n * ```js\n *   $provide.factory('ping', ['$http', function($http) {\n *     return function ping() {\n *       return $http.send('/ping');\n *     };\n *   }]);\n * ```\n * You would then inject and use this service like this:\n * ```js\n *   someModule.controller('Ctrl', ['ping', function(ping) {\n *     ping();\n *   }]);\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#service\n * @description\n *\n * Register a **service constructor**, which will be invoked with `new` to create the service\n * instance.\n * This is short for registering a service where its provider's `$get` property is a factory\n * function that returns an instance instantiated by the injector from the service constructor\n * function.\n *\n * Internally it looks a bit like this:\n *\n * ```\n * {\n *   $get: function() {\n *     return $injector.instantiate(constructor);\n *   }\n * }\n * ```\n *\n *\n * You should use {@link auto.$provide#service $provide.service(class)} if you define your service\n * as a type/class.\n *\n * @param {string} name The name of the instance.\n * @param {Function|Array.<string|Function>} constructor An injectable class (constructor function)\n *     that will be instantiated.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here is an example of registering a service using\n * {@link auto.$provide#service $provide.service(class)}.\n * ```js\n *   var Ping = function($http) {\n *     this.$http = $http;\n *   };\n *\n *   Ping.$inject = ['$http'];\n *\n *   Ping.prototype.send = function() {\n *     return this.$http.get('/ping');\n *   };\n *   $provide.service('ping', Ping);\n * ```\n * You would then inject and use this service like this:\n * ```js\n *   someModule.controller('Ctrl', ['ping', function(ping) {\n *     ping.send();\n *   }]);\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#value\n * @description\n *\n * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a\n * number, an array, an object or a function. This is short for registering a service where its\n * provider's `$get` property is a factory function that takes no arguments and returns the **value\n * service**. That also means it is not possible to inject other services into a value service.\n *\n * Value services are similar to constant services, except that they cannot be injected into a\n * module configuration function (see {@link angular.Module#config}) but they can be overridden by\n * an Angular {@link auto.$provide#decorator decorator}.\n *\n * @param {string} name The name of the instance.\n * @param {*} value The value.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here are some examples of creating value services.\n * ```js\n *   $provide.value('ADMIN_USER', 'admin');\n *\n *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });\n *\n *   $provide.value('halfOf', function(value) {\n *     return value / 2;\n *   });\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#constant\n * @description\n *\n * Register a **constant service** with the {@link auto.$injector $injector}, such as a string,\n * a number, an array, an object or a function. Like the {@link auto.$provide#value value}, it is not\n * possible to inject other services into a constant.\n *\n * But unlike {@link auto.$provide#value value}, a constant can be\n * injected into a module configuration function (see {@link angular.Module#config}) and it cannot\n * be overridden by an Angular {@link auto.$provide#decorator decorator}.\n *\n * @param {string} name The name of the constant.\n * @param {*} value The constant value.\n * @returns {Object} registered instance\n *\n * @example\n * Here a some examples of creating constants:\n * ```js\n *   $provide.constant('SHARD_HEIGHT', 306);\n *\n *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);\n *\n *   $provide.constant('double', function(value) {\n *     return value * 2;\n *   });\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#decorator\n * @description\n *\n * Register a **decorator function** with the {@link auto.$injector $injector}. A decorator function\n * intercepts the creation of a service, allowing it to override or modify the behavior of the\n * service. The return value of the decorator function may be the original service, or a new service\n * that replaces (or wraps and delegates to) the original service.\n *\n * You can find out more about using decorators in the {@link guide/decorators} guide.\n *\n * @param {string} name The name of the service to decorate.\n * @param {Function|Array.<string|Function>} decorator This function will be invoked when the service needs to be\n *    provided and should return the decorated service instance. The function is called using\n *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.\n *    Local injection arguments:\n *\n *    * `$delegate` - The original service instance, which can be replaced, monkey patched, configured,\n *      decorated or delegated to.\n *\n * @example\n * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting\n * calls to {@link ng.$log#error $log.warn()}.\n * ```js\n *   $provide.decorator('$log', ['$delegate', function($delegate) {\n *     $delegate.warn = $delegate.error;\n *     return $delegate;\n *   }]);\n * ```\n */\n\n\nfunction createInjector(modulesToLoad, strictDi) {\n  strictDi = (strictDi === true);\n  var INSTANTIATING = {},\n      providerSuffix = 'Provider',\n      path = [],\n      loadedModules = new NgMap(),\n      providerCache = {\n        $provide: {\n            provider: supportObject(provider),\n            factory: supportObject(factory),\n            service: supportObject(service),\n            value: supportObject(value),\n            constant: supportObject(constant),\n            decorator: decorator\n          }\n      },\n      providerInjector = (providerCache.$injector =\n          createInternalInjector(providerCache, function(serviceName, caller) {\n            if (angular.isString(caller)) {\n              path.push(caller);\n            }\n            throw $injectorMinErr('unpr', 'Unknown provider: {0}', path.join(' <- '));\n          })),\n      instanceCache = {},\n      protoInstanceInjector =\n          createInternalInjector(instanceCache, function(serviceName, caller) {\n            var provider = providerInjector.get(serviceName + providerSuffix, caller);\n            return instanceInjector.invoke(\n                provider.$get, provider, undefined, serviceName);\n          }),\n      instanceInjector = protoInstanceInjector;\n\n  providerCache['$injector' + providerSuffix] = { $get: valueFn(protoInstanceInjector) };\n  var runBlocks = loadModules(modulesToLoad);\n  instanceInjector = protoInstanceInjector.get('$injector');\n  instanceInjector.strictDi = strictDi;\n  forEach(runBlocks, function(fn) { if (fn) instanceInjector.invoke(fn); });\n\n  return instanceInjector;\n\n  ////////////////////////////////////\n  // $provider\n  ////////////////////////////////////\n\n  function supportObject(delegate) {\n    return function(key, value) {\n      if (isObject(key)) {\n        forEach(key, reverseParams(delegate));\n      } else {\n        return delegate(key, value);\n      }\n    };\n  }\n\n  function provider(name, provider_) {\n    assertNotHasOwnProperty(name, 'service');\n    if (isFunction(provider_) || isArray(provider_)) {\n      provider_ = providerInjector.instantiate(provider_);\n    }\n    if (!provider_.$get) {\n      throw $injectorMinErr('pget', 'Provider \\'{0}\\' must define $get factory method.', name);\n    }\n    return (providerCache[name + providerSuffix] = provider_);\n  }\n\n  function enforceReturnValue(name, factory) {\n    return /** @this */ function enforcedReturnValue() {\n      var result = instanceInjector.invoke(factory, this);\n      if (isUndefined(result)) {\n        throw $injectorMinErr('undef', 'Provider \\'{0}\\' must return a value from $get factory method.', name);\n      }\n      return result;\n    };\n  }\n\n  function factory(name, factoryFn, enforce) {\n    return provider(name, {\n      $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn\n    });\n  }\n\n  function service(name, constructor) {\n    return factory(name, ['$injector', function($injector) {\n      return $injector.instantiate(constructor);\n    }]);\n  }\n\n  function value(name, val) { return factory(name, valueFn(val), false); }\n\n  function constant(name, value) {\n    assertNotHasOwnProperty(name, 'constant');\n    providerCache[name] = value;\n    instanceCache[name] = value;\n  }\n\n  function decorator(serviceName, decorFn) {\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\n        orig$get = origProvider.$get;\n\n    origProvider.$get = function() {\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\n    };\n  }\n\n  ////////////////////////////////////\n  // Module Loading\n  ////////////////////////////////////\n  function loadModules(modulesToLoad) {\n    assertArg(isUndefined(modulesToLoad) || isArray(modulesToLoad), 'modulesToLoad', 'not an array');\n    var runBlocks = [], moduleFn;\n    forEach(modulesToLoad, function(module) {\n      if (loadedModules.get(module)) return;\n      loadedModules.set(module, true);\n\n      function runInvokeQueue(queue) {\n        var i, ii;\n        for (i = 0, ii = queue.length; i < ii; i++) {\n          var invokeArgs = queue[i],\n              provider = providerInjector.get(invokeArgs[0]);\n\n          provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\n        }\n      }\n\n      try {\n        if (isString(module)) {\n          moduleFn = angularModule(module);\n          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\n          runInvokeQueue(moduleFn._invokeQueue);\n          runInvokeQueue(moduleFn._configBlocks);\n        } else if (isFunction(module)) {\n            runBlocks.push(providerInjector.invoke(module));\n        } else if (isArray(module)) {\n            runBlocks.push(providerInjector.invoke(module));\n        } else {\n          assertArgFn(module, 'module');\n        }\n      } catch (e) {\n        if (isArray(module)) {\n          module = module[module.length - 1];\n        }\n        if (e.message && e.stack && e.stack.indexOf(e.message) === -1) {\n          // Safari & FF's stack traces don't contain error.message content\n          // unlike those of Chrome and IE\n          // So if stack doesn't contain message, we create a new string that contains both.\n          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.\n          // eslint-disable-next-line no-ex-assign\n          e = e.message + '\\n' + e.stack;\n        }\n        throw $injectorMinErr('modulerr', 'Failed to instantiate module {0} due to:\\n{1}',\n                  module, e.stack || e.message || e);\n      }\n    });\n    return runBlocks;\n  }\n\n  ////////////////////////////////////\n  // internal Injector\n  ////////////////////////////////////\n\n  function createInternalInjector(cache, factory) {\n\n    function getService(serviceName, caller) {\n      if (cache.hasOwnProperty(serviceName)) {\n        if (cache[serviceName] === INSTANTIATING) {\n          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',\n                    serviceName + ' <- ' + path.join(' <- '));\n        }\n        return cache[serviceName];\n      } else {\n        try {\n          path.unshift(serviceName);\n          cache[serviceName] = INSTANTIATING;\n          cache[serviceName] = factory(serviceName, caller);\n          return cache[serviceName];\n        } catch (err) {\n          if (cache[serviceName] === INSTANTIATING) {\n            delete cache[serviceName];\n          }\n          throw err;\n        } finally {\n          path.shift();\n        }\n      }\n    }\n\n\n    function injectionArgs(fn, locals, serviceName) {\n      var args = [],\n          $inject = createInjector.$$annotate(fn, strictDi, serviceName);\n\n      for (var i = 0, length = $inject.length; i < length; i++) {\n        var key = $inject[i];\n        if (typeof key !== 'string') {\n          throw $injectorMinErr('itkn',\n                  'Incorrect injection token! Expected service name as string, got {0}', key);\n        }\n        args.push(locals && locals.hasOwnProperty(key) ? locals[key] :\n                                                         getService(key, serviceName));\n      }\n      return args;\n    }\n\n    function isClass(func) {\n      // Support: IE 9-11 only\n      // IE 9-11 do not support classes and IE9 leaks with the code below.\n      if (msie || typeof func !== 'function') {\n        return false;\n      }\n      var result = func.$$ngIsClass;\n      if (!isBoolean(result)) {\n        // Support: Edge 12-13 only\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/6156135/\n        result = func.$$ngIsClass = /^(?:class\\b|constructor\\()/.test(stringifyFn(func));\n      }\n      return result;\n    }\n\n    function invoke(fn, self, locals, serviceName) {\n      if (typeof locals === 'string') {\n        serviceName = locals;\n        locals = null;\n      }\n\n      var args = injectionArgs(fn, locals, serviceName);\n      if (isArray(fn)) {\n        fn = fn[fn.length - 1];\n      }\n\n      if (!isClass(fn)) {\n        // http://jsperf.com/angularjs-invoke-apply-vs-switch\n        // #5388\n        return fn.apply(self, args);\n      } else {\n        args.unshift(null);\n        return new (Function.prototype.bind.apply(fn, args))();\n      }\n    }\n\n\n    function instantiate(Type, locals, serviceName) {\n      // Check if Type is annotated and use just the given function at n-1 as parameter\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\n      var ctor = (isArray(Type) ? Type[Type.length - 1] : Type);\n      var args = injectionArgs(Type, locals, serviceName);\n      // Empty object at position 0 is ignored for invocation with `new`, but required.\n      args.unshift(null);\n      return new (Function.prototype.bind.apply(ctor, args))();\n    }\n\n\n    return {\n      invoke: invoke,\n      instantiate: instantiate,\n      get: getService,\n      annotate: createInjector.$$annotate,\n      has: function(name) {\n        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);\n      }\n    };\n  }\n}\n\ncreateInjector.$$annotate = annotate;\n\n/**\n * @ngdoc provider\n * @name $anchorScrollProvider\n * @this\n *\n * @description\n * Use `$anchorScrollProvider` to disable automatic scrolling whenever\n * {@link ng.$location#hash $location.hash()} changes.\n */\nfunction $AnchorScrollProvider() {\n\n  var autoScrollingEnabled = true;\n\n  /**\n   * @ngdoc method\n   * @name $anchorScrollProvider#disableAutoScrolling\n   *\n   * @description\n   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\n   * Use this method to disable automatic scrolling.\n   *\n   * If automatic scrolling is disabled, one must explicitly call\n   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\n   * current hash.\n   */\n  this.disableAutoScrolling = function() {\n    autoScrollingEnabled = false;\n  };\n\n  /**\n   * @ngdoc service\n   * @name $anchorScroll\n   * @kind function\n   * @requires $window\n   * @requires $location\n   * @requires $rootScope\n   *\n   * @description\n   * When called, it scrolls to the element related to the specified `hash` or (if omitted) to the\n   * current value of {@link ng.$location#hash $location.hash()}, according to the rules specified\n   * in the\n   * [HTML5 spec](http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document).\n   *\n   * It also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to\n   * match any anchor whenever it changes. This can be disabled by calling\n   * {@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.\n   *\n   * Additionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a\n   * vertical scroll-offset (either fixed or dynamic).\n   *\n   * @param {string=} hash The hash specifying the element to scroll to. If omitted, the value of\n   *                       {@link ng.$location#hash $location.hash()} will be used.\n   *\n   * @property {(number|function|jqLite)} yOffset\n   * If set, specifies a vertical scroll-offset. This is often useful when there are fixed\n   * positioned elements at the top of the page, such as navbars, headers etc.\n   *\n   * `yOffset` can be specified in various ways:\n   * - **number**: A fixed number of pixels to be used as offset.<br /><br />\n   * - **function**: A getter function called everytime `$anchorScroll()` is executed. Must return\n   *   a number representing the offset (in pixels).<br /><br />\n   * - **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from\n   *   the top of the page to the element's bottom will be used as offset.<br />\n   *   **Note**: The element will be taken into account only as long as its `position` is set to\n   *   `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust\n   *   their height and/or positioning according to the viewport's size.\n   *\n   * <br />\n   * <div class=\"alert alert-warning\">\n   * In order for `yOffset` to work properly, scrolling should take place on the document's root and\n   * not some child element.\n   * </div>\n   *\n   * @example\n     <example module=\"anchorScrollExample\" name=\"anchor-scroll\">\n       <file name=\"index.html\">\n         <div id=\"scrollArea\" ng-controller=\"ScrollController\">\n           <a ng-click=\"gotoBottom()\">Go to bottom</a>\n           <a id=\"bottom\"></a> You're at the bottom!\n         </div>\n       </file>\n       <file name=\"script.js\">\n         angular.module('anchorScrollExample', [])\n           .controller('ScrollController', ['$scope', '$location', '$anchorScroll',\n             function($scope, $location, $anchorScroll) {\n               $scope.gotoBottom = function() {\n                 // set the location.hash to the id of\n                 // the element you wish to scroll to.\n                 $location.hash('bottom');\n\n                 // call $anchorScroll()\n                 $anchorScroll();\n               };\n             }]);\n       </file>\n       <file name=\"style.css\">\n         #scrollArea {\n           height: 280px;\n           overflow: auto;\n         }\n\n         #bottom {\n           display: block;\n           margin-top: 2000px;\n         }\n       </file>\n     </example>\n   *\n   * <hr />\n   * The example below illustrates the use of a vertical scroll-offset (specified as a fixed value).\n   * See {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.\n   *\n   * @example\n     <example module=\"anchorScrollOffsetExample\" name=\"anchor-scroll-offset\">\n       <file name=\"index.html\">\n         <div class=\"fixed-header\" ng-controller=\"headerCtrl\">\n           <a href=\"\" ng-click=\"gotoAnchor(x)\" ng-repeat=\"x in [1,2,3,4,5]\">\n             Go to anchor {{x}}\n           </a>\n         </div>\n         <div id=\"anchor{{x}}\" class=\"anchor\" ng-repeat=\"x in [1,2,3,4,5]\">\n           Anchor {{x}} of 5\n         </div>\n       </file>\n       <file name=\"script.js\">\n         angular.module('anchorScrollOffsetExample', [])\n           .run(['$anchorScroll', function($anchorScroll) {\n             $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels\n           }])\n           .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',\n             function($anchorScroll, $location, $scope) {\n               $scope.gotoAnchor = function(x) {\n                 var newHash = 'anchor' + x;\n                 if ($location.hash() !== newHash) {\n                   // set the $location.hash to `newHash` and\n                   // $anchorScroll will automatically scroll to it\n                   $location.hash('anchor' + x);\n                 } else {\n                   // call $anchorScroll() explicitly,\n                   // since $location.hash hasn't changed\n                   $anchorScroll();\n                 }\n               };\n             }\n           ]);\n       </file>\n       <file name=\"style.css\">\n         body {\n           padding-top: 50px;\n         }\n\n         .anchor {\n           border: 2px dashed DarkOrchid;\n           padding: 10px 10px 200px 10px;\n         }\n\n         .fixed-header {\n           background-color: rgba(0, 0, 0, 0.2);\n           height: 50px;\n           position: fixed;\n           top: 0; left: 0; right: 0;\n         }\n\n         .fixed-header > a {\n           display: inline-block;\n           margin: 5px 15px;\n         }\n       </file>\n     </example>\n   */\n  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\n    var document = $window.document;\n\n    // Helper function to get first anchor from a NodeList\n    // (using `Array#some()` instead of `angular#forEach()` since it's more performant\n    //  and working in all supported browsers.)\n    function getFirstAnchor(list) {\n      var result = null;\n      Array.prototype.some.call(list, function(element) {\n        if (nodeName_(element) === 'a') {\n          result = element;\n          return true;\n        }\n      });\n      return result;\n    }\n\n    function getYOffset() {\n\n      var offset = scroll.yOffset;\n\n      if (isFunction(offset)) {\n        offset = offset();\n      } else if (isElement(offset)) {\n        var elem = offset[0];\n        var style = $window.getComputedStyle(elem);\n        if (style.position !== 'fixed') {\n          offset = 0;\n        } else {\n          offset = elem.getBoundingClientRect().bottom;\n        }\n      } else if (!isNumber(offset)) {\n        offset = 0;\n      }\n\n      return offset;\n    }\n\n    function scrollTo(elem) {\n      if (elem) {\n        elem.scrollIntoView();\n\n        var offset = getYOffset();\n\n        if (offset) {\n          // `offset` is the number of pixels we should scroll UP in order to align `elem` properly.\n          // This is true ONLY if the call to `elem.scrollIntoView()` initially aligns `elem` at the\n          // top of the viewport.\n          //\n          // IF the number of pixels from the top of `elem` to the end of the page's content is less\n          // than the height of the viewport, then `elem.scrollIntoView()` will align the `elem` some\n          // way down the page.\n          //\n          // This is often the case for elements near the bottom of the page.\n          //\n          // In such cases we do not need to scroll the whole `offset` up, just the difference between\n          // the top of the element and the offset, which is enough to align the top of `elem` at the\n          // desired position.\n          var elemTop = elem.getBoundingClientRect().top;\n          $window.scrollBy(0, elemTop - offset);\n        }\n      } else {\n        $window.scrollTo(0, 0);\n      }\n    }\n\n    function scroll(hash) {\n      // Allow numeric hashes\n      hash = isString(hash) ? hash : isNumber(hash) ? hash.toString() : $location.hash();\n      var elm;\n\n      // empty hash, scroll to the top of the page\n      if (!hash) scrollTo(null);\n\n      // element with given id\n      else if ((elm = document.getElementById(hash))) scrollTo(elm);\n\n      // first anchor with given name :-D\n      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) scrollTo(elm);\n\n      // no element and hash === 'top', scroll to the top of the page\n      else if (hash === 'top') scrollTo(null);\n    }\n\n    // does not scroll when user clicks on anchor link that is currently on\n    // (no url change, no $location.hash() change), browser native does scroll\n    if (autoScrollingEnabled) {\n      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\n        function autoScrollWatchAction(newVal, oldVal) {\n          // skip the initial scroll if $location.hash is empty\n          if (newVal === oldVal && newVal === '') return;\n\n          jqLiteDocumentLoaded(function() {\n            $rootScope.$evalAsync(scroll);\n          });\n        });\n    }\n\n    return scroll;\n  }];\n}\n\nvar $animateMinErr = minErr('$animate');\nvar ELEMENT_NODE = 1;\nvar NG_ANIMATE_CLASSNAME = 'ng-animate';\n\nfunction mergeClasses(a,b) {\n  if (!a && !b) return '';\n  if (!a) return b;\n  if (!b) return a;\n  if (isArray(a)) a = a.join(' ');\n  if (isArray(b)) b = b.join(' ');\n  return a + ' ' + b;\n}\n\nfunction extractElementNode(element) {\n  for (var i = 0; i < element.length; i++) {\n    var elm = element[i];\n    if (elm.nodeType === ELEMENT_NODE) {\n      return elm;\n    }\n  }\n}\n\nfunction splitClasses(classes) {\n  if (isString(classes)) {\n    classes = classes.split(' ');\n  }\n\n  // Use createMap() to prevent class assumptions involving property names in\n  // Object.prototype\n  var obj = createMap();\n  forEach(classes, function(klass) {\n    // sometimes the split leaves empty string values\n    // incase extra spaces were applied to the options\n    if (klass.length) {\n      obj[klass] = true;\n    }\n  });\n  return obj;\n}\n\n// if any other type of options value besides an Object value is\n// passed into the $animate.method() animation then this helper code\n// will be run which will ignore it. While this patch is not the\n// greatest solution to this, a lot of existing plugins depend on\n// $animate to either call the callback (< 1.2) or return a promise\n// that can be changed. This helper function ensures that the options\n// are wiped clean incase a callback function is provided.\nfunction prepareAnimateOptions(options) {\n  return isObject(options)\n      ? options\n      : {};\n}\n\nvar $$CoreAnimateJsProvider = /** @this */ function() {\n  this.$get = noop;\n};\n\n// this is prefixed with Core since it conflicts with\n// the animateQueueProvider defined in ngAnimate/animateQueue.js\nvar $$CoreAnimateQueueProvider = /** @this */ function() {\n  var postDigestQueue = new NgMap();\n  var postDigestElements = [];\n\n  this.$get = ['$$AnimateRunner', '$rootScope',\n       function($$AnimateRunner,   $rootScope) {\n    return {\n      enabled: noop,\n      on: noop,\n      off: noop,\n      pin: noop,\n\n      push: function(element, event, options, domOperation) {\n        if (domOperation) {\n          domOperation();\n        }\n\n        options = options || {};\n        if (options.from) {\n          element.css(options.from);\n        }\n        if (options.to) {\n          element.css(options.to);\n        }\n\n        if (options.addClass || options.removeClass) {\n          addRemoveClassesPostDigest(element, options.addClass, options.removeClass);\n        }\n\n        var runner = new $$AnimateRunner();\n\n        // since there are no animations to run the runner needs to be\n        // notified that the animation call is complete.\n        runner.complete();\n        return runner;\n      }\n    };\n\n\n    function updateData(data, classes, value) {\n      var changed = false;\n      if (classes) {\n        classes = isString(classes) ? classes.split(' ') :\n                  isArray(classes) ? classes : [];\n        forEach(classes, function(className) {\n          if (className) {\n            changed = true;\n            data[className] = value;\n          }\n        });\n      }\n      return changed;\n    }\n\n    function handleCSSClassChanges() {\n      forEach(postDigestElements, function(element) {\n        var data = postDigestQueue.get(element);\n        if (data) {\n          var existing = splitClasses(element.attr('class'));\n          var toAdd = '';\n          var toRemove = '';\n          forEach(data, function(status, className) {\n            var hasClass = !!existing[className];\n            if (status !== hasClass) {\n              if (status) {\n                toAdd += (toAdd.length ? ' ' : '') + className;\n              } else {\n                toRemove += (toRemove.length ? ' ' : '') + className;\n              }\n            }\n          });\n\n          forEach(element, function(elm) {\n            if (toAdd) {\n              jqLiteAddClass(elm, toAdd);\n            }\n            if (toRemove) {\n              jqLiteRemoveClass(elm, toRemove);\n            }\n          });\n          postDigestQueue.delete(element);\n        }\n      });\n      postDigestElements.length = 0;\n    }\n\n\n    function addRemoveClassesPostDigest(element, add, remove) {\n      var data = postDigestQueue.get(element) || {};\n\n      var classesAdded = updateData(data, add, true);\n      var classesRemoved = updateData(data, remove, false);\n\n      if (classesAdded || classesRemoved) {\n\n        postDigestQueue.set(element, data);\n        postDigestElements.push(element);\n\n        if (postDigestElements.length === 1) {\n          $rootScope.$$postDigest(handleCSSClassChanges);\n        }\n      }\n    }\n  }];\n};\n\n/**\n * @ngdoc provider\n * @name $animateProvider\n *\n * @description\n * Default implementation of $animate that doesn't perform any animations, instead just\n * synchronously performs DOM updates and resolves the returned runner promise.\n *\n * In order to enable animations the `ngAnimate` module has to be loaded.\n *\n * To see the functional implementation check out `src/ngAnimate/animate.js`.\n */\nvar $AnimateProvider = ['$provide', /** @this */ function($provide) {\n  var provider = this;\n\n  this.$$registeredAnimations = Object.create(null);\n\n   /**\n   * @ngdoc method\n   * @name $animateProvider#register\n   *\n   * @description\n   * Registers a new injectable animation factory function. The factory function produces the\n   * animation object which contains callback functions for each event that is expected to be\n   * animated.\n   *\n   *   * `eventFn`: `function(element, ... , doneFunction, options)`\n   *   The element to animate, the `doneFunction` and the options fed into the animation. Depending\n   *   on the type of animation additional arguments will be injected into the animation function. The\n   *   list below explains the function signatures for the different animation methods:\n   *\n   *   - setClass: function(element, addedClasses, removedClasses, doneFunction, options)\n   *   - addClass: function(element, addedClasses, doneFunction, options)\n   *   - removeClass: function(element, removedClasses, doneFunction, options)\n   *   - enter, leave, move: function(element, doneFunction, options)\n   *   - animate: function(element, fromStyles, toStyles, doneFunction, options)\n   *\n   *   Make sure to trigger the `doneFunction` once the animation is fully complete.\n   *\n   * ```js\n   *   return {\n   *     //enter, leave, move signature\n   *     eventFn : function(element, done, options) {\n   *       //code to run the animation\n   *       //once complete, then run done()\n   *       return function endFunction(wasCancelled) {\n   *         //code to cancel the animation\n   *       }\n   *     }\n   *   }\n   * ```\n   *\n   * @param {string} name The name of the animation (this is what the class-based CSS value will be compared to).\n   * @param {Function} factory The factory function that will be executed to return the animation\n   *                           object.\n   */\n  this.register = function(name, factory) {\n    if (name && name.charAt(0) !== '.') {\n      throw $animateMinErr('notcsel', 'Expecting class selector starting with \\'.\\' got \\'{0}\\'.', name);\n    }\n\n    var key = name + '-animation';\n    provider.$$registeredAnimations[name.substr(1)] = key;\n    $provide.factory(key, factory);\n  };\n\n  /**\n   * @ngdoc method\n   * @name $animateProvider#classNameFilter\n   *\n   * @description\n   * Sets and/or returns the CSS class regular expression that is checked when performing\n   * an animation. Upon bootstrap the classNameFilter value is not set at all and will\n   * therefore enable $animate to attempt to perform an animation on any element that is triggered.\n   * When setting the `classNameFilter` value, animations will only be performed on elements\n   * that successfully match the filter expression. This in turn can boost performance\n   * for low-powered devices as well as applications containing a lot of structural operations.\n   * @param {RegExp=} expression The className expression which will be checked against all animations\n   * @return {RegExp} The current CSS className expression value. If null then there is no expression value\n   */\n  this.classNameFilter = function(expression) {\n    if (arguments.length === 1) {\n      this.$$classNameFilter = (expression instanceof RegExp) ? expression : null;\n      if (this.$$classNameFilter) {\n        var reservedRegex = new RegExp('(\\\\s+|\\\\/)' + NG_ANIMATE_CLASSNAME + '(\\\\s+|\\\\/)');\n        if (reservedRegex.test(this.$$classNameFilter.toString())) {\n          throw $animateMinErr('nongcls','$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the \"{0}\" CSS class.', NG_ANIMATE_CLASSNAME);\n        }\n      }\n    }\n    return this.$$classNameFilter;\n  };\n\n  this.$get = ['$$animateQueue', function($$animateQueue) {\n    function domInsert(element, parentElement, afterElement) {\n      // if for some reason the previous element was removed\n      // from the dom sometime before this code runs then let's\n      // just stick to using the parent element as the anchor\n      if (afterElement) {\n        var afterNode = extractElementNode(afterElement);\n        if (afterNode && !afterNode.parentNode && !afterNode.previousElementSibling) {\n          afterElement = null;\n        }\n      }\n      if (afterElement) {\n        afterElement.after(element);\n      } else {\n        parentElement.prepend(element);\n      }\n    }\n\n    /**\n     * @ngdoc service\n     * @name $animate\n     * @description The $animate service exposes a series of DOM utility methods that provide support\n     * for animation hooks. The default behavior is the application of DOM operations, however,\n     * when an animation is detected (and animations are enabled), $animate will do the heavy lifting\n     * to ensure that animation runs with the triggered DOM operation.\n     *\n     * By default $animate doesn't trigger any animations. This is because the `ngAnimate` module isn't\n     * included and only when it is active then the animation hooks that `$animate` triggers will be\n     * functional. Once active then all structural `ng-` directives will trigger animations as they perform\n     * their DOM-related operations (enter, leave and move). Other directives such as `ngClass`,\n     * `ngShow`, `ngHide` and `ngMessages` also provide support for animations.\n     *\n     * It is recommended that the`$animate` service is always used when executing DOM-related procedures within directives.\n     *\n     * To learn more about enabling animation support, click here to visit the\n     * {@link ngAnimate ngAnimate module page}.\n     */\n    return {\n      // we don't call it directly since non-existant arguments may\n      // be interpreted as null within the sub enabled function\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#on\n       * @kind function\n       * @description Sets up an event listener to fire whenever the animation event (enter, leave, move, etc...)\n       *    has fired on the given element or among any of its children. Once the listener is fired, the provided callback\n       *    is fired with the following params:\n       *\n       * ```js\n       * $animate.on('enter', container,\n       *    function callback(element, phase) {\n       *      // cool we detected an enter animation within the container\n       *    }\n       * );\n       * ```\n       *\n       * @param {string} event the animation event that will be captured (e.g. enter, leave, move, addClass, removeClass, etc...)\n       * @param {DOMElement} container the container element that will capture each of the animation events that are fired on itself\n       *     as well as among its children\n       * @param {Function} callback the callback function that will be fired when the listener is triggered\n       *\n       * The arguments present in the callback function are:\n       * * `element` - The captured DOM element that the animation was fired on.\n       * * `phase` - The phase of the animation. The two possible phases are **start** (when the animation starts) and **close** (when it ends).\n       */\n      on: $$animateQueue.on,\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#off\n       * @kind function\n       * @description Deregisters an event listener based on the event which has been associated with the provided element. This method\n       * can be used in three different ways depending on the arguments:\n       *\n       * ```js\n       * // remove all the animation event listeners listening for `enter`\n       * $animate.off('enter');\n       *\n       * // remove listeners for all animation events from the container element\n       * $animate.off(container);\n       *\n       * // remove all the animation event listeners listening for `enter` on the given element and its children\n       * $animate.off('enter', container);\n       *\n       * // remove the event listener function provided by `callback` that is set\n       * // to listen for `enter` on the given `container` as well as its children\n       * $animate.off('enter', container, callback);\n       * ```\n       *\n       * @param {string|DOMElement} event|container the animation event (e.g. enter, leave, move,\n       * addClass, removeClass, etc...), or the container element. If it is the element, all other\n       * arguments are ignored.\n       * @param {DOMElement=} container the container element the event listener was placed on\n       * @param {Function=} callback the callback function that was registered as the listener\n       */\n      off: $$animateQueue.off,\n\n      /**\n       * @ngdoc method\n       * @name $animate#pin\n       * @kind function\n       * @description Associates the provided element with a host parent element to allow the element to be animated even if it exists\n       *    outside of the DOM structure of the Angular application. By doing so, any animation triggered via `$animate` can be issued on the\n       *    element despite being outside the realm of the application or within another application. Say for example if the application\n       *    was bootstrapped on an element that is somewhere inside of the `<body>` tag, but we wanted to allow for an element to be situated\n       *    as a direct child of `document.body`, then this can be achieved by pinning the element via `$animate.pin(element)`. Keep in mind\n       *    that calling `$animate.pin(element, parentElement)` will not actually insert into the DOM anywhere; it will just create the association.\n       *\n       *    Note that this feature is only active when the `ngAnimate` module is used.\n       *\n       * @param {DOMElement} element the external element that will be pinned\n       * @param {DOMElement} parentElement the host parent element that will be associated with the external element\n       */\n      pin: $$animateQueue.pin,\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#enabled\n       * @kind function\n       * @description Used to get and set whether animations are enabled or not on the entire application or on an element and its children. This\n       * function can be called in four ways:\n       *\n       * ```js\n       * // returns true or false\n       * $animate.enabled();\n       *\n       * // changes the enabled state for all animations\n       * $animate.enabled(false);\n       * $animate.enabled(true);\n       *\n       * // returns true or false if animations are enabled for an element\n       * $animate.enabled(element);\n       *\n       * // changes the enabled state for an element and its children\n       * $animate.enabled(element, true);\n       * $animate.enabled(element, false);\n       * ```\n       *\n       * @param {DOMElement=} element the element that will be considered for checking/setting the enabled state\n       * @param {boolean=} enabled whether or not the animations will be enabled for the element\n       *\n       * @return {boolean} whether or not animations are enabled\n       */\n      enabled: $$animateQueue.enabled,\n\n      /**\n       * @ngdoc method\n       * @name $animate#cancel\n       * @kind function\n       * @description Cancels the provided animation.\n       *\n       * @param {Promise} animationPromise The animation promise that is returned when an animation is started.\n       */\n      cancel: function(runner) {\n        if (runner.end) {\n          runner.end();\n        }\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#enter\n       * @kind function\n       * @description Inserts the element into the DOM either after the `after` element (if provided) or\n       *   as the first child within the `parent` element and then triggers an animation.\n       *   A promise is returned that will be resolved during the next digest once the animation\n       *   has completed.\n       *\n       * @param {DOMElement} element the element which will be inserted into the DOM\n       * @param {DOMElement} parent the parent element which will append the element as\n       *   a child (so long as the after element is not present)\n       * @param {DOMElement=} after the sibling element after which the element will be appended\n       * @param {object=} options an optional collection of options/styles that will be applied to the element.\n       *   The object can have the following properties:\n       *\n       *   - **addClass** - `{string}` - space-separated CSS classes to add to element\n       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`\n       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element\n       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`\n       *\n       * @return {Promise} the animation callback promise\n       */\n      enter: function(element, parent, after, options) {\n        parent = parent && jqLite(parent);\n        after = after && jqLite(after);\n        parent = parent || after.parent();\n        domInsert(element, parent, after);\n        return $$animateQueue.push(element, 'enter', prepareAnimateOptions(options));\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#move\n       * @kind function\n       * @description Inserts (moves) the element into its new position in the DOM either after\n       *   the `after` element (if provided) or as the first child within the `parent` element\n       *   and then triggers an animation. A promise is returned that will be resolved\n       *   during the next digest once the animation has completed.\n       *\n       * @param {DOMElement} element the element which will be moved into the new DOM position\n       * @param {DOMElement} parent the parent element which will append the element as\n       *   a child (so long as the after element is not present)\n       * @param {DOMElement=} after the sibling element after which the element will be appended\n       * @param {object=} options an optional collection of options/styles that will be applied to the element.\n       *   The object can have the following properties:\n       *\n       *   - **addClass** - `{string}` - space-separated CSS classes to add to element\n       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`\n       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element\n       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`\n       *\n       * @return {Promise} the animation callback promise\n       */\n      move: function(element, parent, after, options) {\n        parent = parent && jqLite(parent);\n        after = after && jqLite(after);\n        parent = parent || after.parent();\n        domInsert(element, parent, after);\n        return $$animateQueue.push(element, 'move', prepareAnimateOptions(options));\n      },\n\n      /**\n       * @ngdoc method\n       * @name $animate#leave\n       * @kind function\n       * @description Triggers an animation and then removes the element from the DOM.\n       * When the function is called a promise is returned that will be resolved during the next\n       * digest once the animation has completed.\n       *\n       * @param {DOMElement} element the element which will be removed from the DOM\n       * @param {object=} options an optional collection of options/styles that will be applied to the element.\n       *   The object can have the following properties:\n       *\n       *   - **addClass** - `{string}` - space-separated CSS classes to add to element\n       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`\n       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element\n       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`\n       *\n       * @return {Promise} the animation callback promise\n       */\n      leave: function(element, options) {\n        return $$animateQueue.push(element, 'leave', prepareAnimateOptions(options), function() {\n          element.remove();\n        });\n      },\n\n      /**\n       * @ngdoc method\n       * @name $animate#addClass\n       * @kind function\n       *\n       * @description Triggers an addClass animation surrounding the addition of the provided CSS class(es). Upon\n       *   execution, the addClass operation will only be handled after the next digest and it will not trigger an\n       *   animation if element already contains the CSS class or if the class is removed at a later step.\n       *   Note that class-based animations are treated differently compared to structural animations\n       *   (like enter, move and leave) since the CSS classes may be added/removed at different points\n       *   depending if CSS or JavaScript animations are used.\n       *\n       * @param {DOMElement} element the element which the CSS classes will be applied to\n       * @param {string} className the CSS class(es) that will be added (multiple classes are separated via spaces)\n       * @param {object=} options an optional collection of options/styles that will be applied to the element.\n       *   The object can have the following properties:\n       *\n       *   - **addClass** - `{string}` - space-separated CSS classes to add to element\n       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`\n       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element\n       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`\n       *\n       * @return {Promise} the animation callback promise\n       */\n      addClass: function(element, className, options) {\n        options = prepareAnimateOptions(options);\n        options.addClass = mergeClasses(options.addclass, className);\n        return $$animateQueue.push(element, 'addClass', options);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $animate#removeClass\n       * @kind function\n       *\n       * @description Triggers a removeClass animation surrounding the removal of the provided CSS class(es). Upon\n       *   execution, the removeClass operation will only be handled after the next digest and it will not trigger an\n       *   animation if element does not contain the CSS class or if the class is added at a later step.\n       *   Note that class-based animations are treated differently compared to structural animations\n       *   (like enter, move and leave) since the CSS classes may be added/removed at different points\n       *   depending if CSS or JavaScript animations are used.\n       *\n       * @param {DOMElement} element the element which the CSS classes will be applied to\n       * @param {string} className the CSS class(es) that will be removed (multiple classes are separated via spaces)\n       * @param {object=} options an optional collection of options/styles that will be applied to the element.\n       *   The object can have the following properties:\n       *\n       *   - **addClass** - `{string}` - space-separated CSS classes to add to element\n       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`\n       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element\n       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`\n       *\n       * @return {Promise} the animation callback promise\n       */\n      removeClass: function(element, className, options) {\n        options = prepareAnimateOptions(options);\n        options.removeClass = mergeClasses(options.removeClass, className);\n        return $$animateQueue.push(element, 'removeClass', options);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $animate#setClass\n       * @kind function\n       *\n       * @description Performs both the addition and removal of a CSS classes on an element and (during the process)\n       *    triggers an animation surrounding the class addition/removal. Much like `$animate.addClass` and\n       *    `$animate.removeClass`, `setClass` will only evaluate the classes being added/removed once a digest has\n       *    passed. Note that class-based animations are treated differently compared to structural animations\n       *    (like enter, move and leave) since the CSS classes may be added/removed at different points\n       *    depending if CSS or JavaScript animations are used.\n       *\n       * @param {DOMElement} element the element which the CSS classes will be applied to\n       * @param {string} add the CSS class(es) that will be added (multiple classes are separated via spaces)\n       * @param {string} remove the CSS class(es) that will be removed (multiple classes are separated via spaces)\n       * @param {object=} options an optional collection of options/styles that will be applied to the element.\n       *   The object can have the following properties:\n       *\n       *   - **addClass** - `{string}` - space-separated CSS classes to add to element\n       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`\n       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element\n       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`\n       *\n       * @return {Promise} the animation callback promise\n       */\n      setClass: function(element, add, remove, options) {\n        options = prepareAnimateOptions(options);\n        options.addClass = mergeClasses(options.addClass, add);\n        options.removeClass = mergeClasses(options.removeClass, remove);\n        return $$animateQueue.push(element, 'setClass', options);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $animate#animate\n       * @kind function\n       *\n       * @description Performs an inline animation on the element which applies the provided to and from CSS styles to the element.\n       * If any detected CSS transition, keyframe or JavaScript matches the provided className value, then the animation will take\n       * on the provided styles. For example, if a transition animation is set for the given className, then the provided `from` and\n       * `to` styles will be applied alongside the given transition. If the CSS style provided in `from` does not have a corresponding\n       * style in `to`, the style in `from` is applied immediately, and no animation is run.\n       * If a JavaScript animation is detected then the provided styles will be given in as function parameters into the `animate`\n       * method (or as part of the `options` parameter):\n       *\n       * ```js\n       * ngModule.animation('.my-inline-animation', function() {\n       *   return {\n       *     animate : function(element, from, to, done, options) {\n       *       //animation\n       *       done();\n       *     }\n       *   }\n       * });\n       * ```\n       *\n       * @param {DOMElement} element the element which the CSS styles will be applied to\n       * @param {object} from the from (starting) CSS styles that will be applied to the element and across the animation.\n       * @param {object} to the to (destination) CSS styles that will be applied to the element and across the animation.\n       * @param {string=} className an optional CSS class that will be applied to the element for the duration of the animation. If\n       *    this value is left as empty then a CSS class of `ng-inline-animate` will be applied to the element.\n       *    (Note that if no animation is detected then this value will not be applied to the element.)\n       * @param {object=} options an optional collection of options/styles that will be applied to the element.\n       *   The object can have the following properties:\n       *\n       *   - **addClass** - `{string}` - space-separated CSS classes to add to element\n       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`\n       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element\n       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`\n       *\n       * @return {Promise} the animation callback promise\n       */\n      animate: function(element, from, to, className, options) {\n        options = prepareAnimateOptions(options);\n        options.from = options.from ? extend(options.from, from) : from;\n        options.to   = options.to   ? extend(options.to, to)     : to;\n\n        className = className || 'ng-inline-animate';\n        options.tempClasses = mergeClasses(options.tempClasses, className);\n        return $$animateQueue.push(element, 'animate', options);\n      }\n    };\n  }];\n}];\n\nvar $$AnimateAsyncRunFactoryProvider = /** @this */ function() {\n  this.$get = ['$$rAF', function($$rAF) {\n    var waitQueue = [];\n\n    function waitForTick(fn) {\n      waitQueue.push(fn);\n      if (waitQueue.length > 1) return;\n      $$rAF(function() {\n        for (var i = 0; i < waitQueue.length; i++) {\n          waitQueue[i]();\n        }\n        waitQueue = [];\n      });\n    }\n\n    return function() {\n      var passed = false;\n      waitForTick(function() {\n        passed = true;\n      });\n      return function(callback) {\n        if (passed) {\n          callback();\n        } else {\n          waitForTick(callback);\n        }\n      };\n    };\n  }];\n};\n\nvar $$AnimateRunnerFactoryProvider = /** @this */ function() {\n  this.$get = ['$q', '$sniffer', '$$animateAsyncRun', '$$isDocumentHidden', '$timeout',\n       function($q,   $sniffer,   $$animateAsyncRun,   $$isDocumentHidden,   $timeout) {\n\n    var INITIAL_STATE = 0;\n    var DONE_PENDING_STATE = 1;\n    var DONE_COMPLETE_STATE = 2;\n\n    AnimateRunner.chain = function(chain, callback) {\n      var index = 0;\n\n      next();\n      function next() {\n        if (index === chain.length) {\n          callback(true);\n          return;\n        }\n\n        chain[index](function(response) {\n          if (response === false) {\n            callback(false);\n            return;\n          }\n          index++;\n          next();\n        });\n      }\n    };\n\n    AnimateRunner.all = function(runners, callback) {\n      var count = 0;\n      var status = true;\n      forEach(runners, function(runner) {\n        runner.done(onProgress);\n      });\n\n      function onProgress(response) {\n        status = status && response;\n        if (++count === runners.length) {\n          callback(status);\n        }\n      }\n    };\n\n    function AnimateRunner(host) {\n      this.setHost(host);\n\n      var rafTick = $$animateAsyncRun();\n      var timeoutTick = function(fn) {\n        $timeout(fn, 0, false);\n      };\n\n      this._doneCallbacks = [];\n      this._tick = function(fn) {\n        if ($$isDocumentHidden()) {\n          timeoutTick(fn);\n        } else {\n          rafTick(fn);\n        }\n      };\n      this._state = 0;\n    }\n\n    AnimateRunner.prototype = {\n      setHost: function(host) {\n        this.host = host || {};\n      },\n\n      done: function(fn) {\n        if (this._state === DONE_COMPLETE_STATE) {\n          fn();\n        } else {\n          this._doneCallbacks.push(fn);\n        }\n      },\n\n      progress: noop,\n\n      getPromise: function() {\n        if (!this.promise) {\n          var self = this;\n          this.promise = $q(function(resolve, reject) {\n            self.done(function(status) {\n              if (status === false) {\n                reject();\n              } else {\n                resolve();\n              }\n            });\n          });\n        }\n        return this.promise;\n      },\n\n      then: function(resolveHandler, rejectHandler) {\n        return this.getPromise().then(resolveHandler, rejectHandler);\n      },\n\n      'catch': function(handler) {\n        return this.getPromise()['catch'](handler);\n      },\n\n      'finally': function(handler) {\n        return this.getPromise()['finally'](handler);\n      },\n\n      pause: function() {\n        if (this.host.pause) {\n          this.host.pause();\n        }\n      },\n\n      resume: function() {\n        if (this.host.resume) {\n          this.host.resume();\n        }\n      },\n\n      end: function() {\n        if (this.host.end) {\n          this.host.end();\n        }\n        this._resolve(true);\n      },\n\n      cancel: function() {\n        if (this.host.cancel) {\n          this.host.cancel();\n        }\n        this._resolve(false);\n      },\n\n      complete: function(response) {\n        var self = this;\n        if (self._state === INITIAL_STATE) {\n          self._state = DONE_PENDING_STATE;\n          self._tick(function() {\n            self._resolve(response);\n          });\n        }\n      },\n\n      _resolve: function(response) {\n        if (this._state !== DONE_COMPLETE_STATE) {\n          forEach(this._doneCallbacks, function(fn) {\n            fn(response);\n          });\n          this._doneCallbacks.length = 0;\n          this._state = DONE_COMPLETE_STATE;\n        }\n      }\n    };\n\n    return AnimateRunner;\n  }];\n};\n\n/* exported $CoreAnimateCssProvider */\n\n/**\n * @ngdoc service\n * @name $animateCss\n * @kind object\n * @this\n *\n * @description\n * This is the core version of `$animateCss`. By default, only when the `ngAnimate` is included,\n * then the `$animateCss` service will actually perform animations.\n *\n * Click here {@link ngAnimate.$animateCss to read the documentation for $animateCss}.\n */\nvar $CoreAnimateCssProvider = function() {\n  this.$get = ['$$rAF', '$q', '$$AnimateRunner', function($$rAF, $q, $$AnimateRunner) {\n\n    return function(element, initialOptions) {\n      // all of the animation functions should create\n      // a copy of the options data, however, if a\n      // parent service has already created a copy then\n      // we should stick to using that\n      var options = initialOptions || {};\n      if (!options.$$prepared) {\n        options = copy(options);\n      }\n\n      // there is no point in applying the styles since\n      // there is no animation that goes on at all in\n      // this version of $animateCss.\n      if (options.cleanupStyles) {\n        options.from = options.to = null;\n      }\n\n      if (options.from) {\n        element.css(options.from);\n        options.from = null;\n      }\n\n      var closed, runner = new $$AnimateRunner();\n      return {\n        start: run,\n        end: run\n      };\n\n      function run() {\n        $$rAF(function() {\n          applyAnimationContents();\n          if (!closed) {\n            runner.complete();\n          }\n          closed = true;\n        });\n        return runner;\n      }\n\n      function applyAnimationContents() {\n        if (options.addClass) {\n          element.addClass(options.addClass);\n          options.addClass = null;\n        }\n        if (options.removeClass) {\n          element.removeClass(options.removeClass);\n          options.removeClass = null;\n        }\n        if (options.to) {\n          element.css(options.to);\n          options.to = null;\n        }\n      }\n    };\n  }];\n};\n\n/* global stripHash: true */\n\n/**\n * ! This is a private undocumented service !\n *\n * @name $browser\n * @requires $log\n * @description\n * This object has two goals:\n *\n * - hide all the global state in the browser caused by the window object\n * - abstract away all the browser specific features and inconsistencies\n *\n * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\n * service, which can be used for convenient testing of the application without the interaction with\n * the real browser apis.\n */\n/**\n * @param {object} window The global window object.\n * @param {object} document jQuery wrapped document.\n * @param {object} $log window.console or an object with the same interface.\n * @param {object} $sniffer $sniffer service\n */\nfunction Browser(window, document, $log, $sniffer) {\n  var self = this,\n      location = window.location,\n      history = window.history,\n      setTimeout = window.setTimeout,\n      clearTimeout = window.clearTimeout,\n      pendingDeferIds = {};\n\n  self.isMock = false;\n\n  var outstandingRequestCount = 0;\n  var outstandingRequestCallbacks = [];\n\n  // TODO(vojta): remove this temporary api\n  self.$$completeOutstandingRequest = completeOutstandingRequest;\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n\n  /**\n   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\n   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\n   */\n  function completeOutstandingRequest(fn) {\n    try {\n      fn.apply(null, sliceArgs(arguments, 1));\n    } finally {\n      outstandingRequestCount--;\n      if (outstandingRequestCount === 0) {\n        while (outstandingRequestCallbacks.length) {\n          try {\n            outstandingRequestCallbacks.pop()();\n          } catch (e) {\n            $log.error(e);\n          }\n        }\n      }\n    }\n  }\n\n  function getHash(url) {\n    var index = url.indexOf('#');\n    return index === -1 ? '' : url.substr(index);\n  }\n\n  /**\n   * @private\n   * Note: this method is used only by scenario runner\n   * TODO(vojta): prefix this method with $$ ?\n   * @param {function()} callback Function that will be called when no outstanding request\n   */\n  self.notifyWhenNoOutstandingRequests = function(callback) {\n    if (outstandingRequestCount === 0) {\n      callback();\n    } else {\n      outstandingRequestCallbacks.push(callback);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////\n  // URL API\n  //////////////////////////////////////////////////////////////\n\n  var cachedState, lastHistoryState,\n      lastBrowserUrl = location.href,\n      baseElement = document.find('base'),\n      pendingLocation = null,\n      getCurrentState = !$sniffer.history ? noop : function getCurrentState() {\n        try {\n          return history.state;\n        } catch (e) {\n          // MSIE can reportedly throw when there is no state (UNCONFIRMED).\n        }\n      };\n\n  cacheState();\n\n  /**\n   * @name $browser#url\n   *\n   * @description\n   * GETTER:\n   * Without any argument, this method just returns current value of location.href.\n   *\n   * SETTER:\n   * With at least one argument, this method sets url to new value.\n   * If html5 history api supported, pushState/replaceState is used, otherwise\n   * location.href/location.replace is used.\n   * Returns its own instance to allow chaining\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to change url.\n   *\n   * @param {string} url New url (when used as setter)\n   * @param {boolean=} replace Should new url replace current history record?\n   * @param {object=} state object to use with pushState/replaceState\n   */\n  self.url = function(url, replace, state) {\n    // In modern browsers `history.state` is `null` by default; treating it separately\n    // from `undefined` would cause `$browser.url('/foo')` to change `history.state`\n    // to undefined via `pushState`. Instead, let's change `undefined` to `null` here.\n    if (isUndefined(state)) {\n      state = null;\n    }\n\n    // Android Browser BFCache causes location, history reference to become stale.\n    if (location !== window.location) location = window.location;\n    if (history !== window.history) history = window.history;\n\n    // setter\n    if (url) {\n      var sameState = lastHistoryState === state;\n\n      // Don't change anything if previous and current URLs and states match. This also prevents\n      // IE<10 from getting into redirect loop when in LocationHashbangInHtml5Url mode.\n      // See https://github.com/angular/angular.js/commit/ffb2701\n      if (lastBrowserUrl === url && (!$sniffer.history || sameState)) {\n        return self;\n      }\n      var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);\n      lastBrowserUrl = url;\n      lastHistoryState = state;\n      // Don't use history API if only the hash changed\n      // due to a bug in IE10/IE11 which leads\n      // to not firing a `hashchange` nor `popstate` event\n      // in some cases (see #9143).\n      if ($sniffer.history && (!sameBase || !sameState)) {\n        history[replace ? 'replaceState' : 'pushState'](state, '', url);\n        cacheState();\n      } else {\n        if (!sameBase) {\n          pendingLocation = url;\n        }\n        if (replace) {\n          location.replace(url);\n        } else if (!sameBase) {\n          location.href = url;\n        } else {\n          location.hash = getHash(url);\n        }\n        if (location.href !== url) {\n          pendingLocation = url;\n        }\n      }\n      if (pendingLocation) {\n        pendingLocation = url;\n      }\n      return self;\n    // getter\n    } else {\n      // - pendingLocation is needed as browsers don't allow to read out\n      //   the new location.href if a reload happened or if there is a bug like in iOS 9 (see\n      //   https://openradar.appspot.com/22186109).\n      // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\n      return pendingLocation || location.href.replace(/%27/g,'\\'');\n    }\n  };\n\n  /**\n   * @name $browser#state\n   *\n   * @description\n   * This method is a getter.\n   *\n   * Return history.state or null if history.state is undefined.\n   *\n   * @returns {object} state\n   */\n  self.state = function() {\n    return cachedState;\n  };\n\n  var urlChangeListeners = [],\n      urlChangeInit = false;\n\n  function cacheStateAndFireUrlChange() {\n    pendingLocation = null;\n    fireStateOrUrlChange();\n  }\n\n  // This variable should be used *only* inside the cacheState function.\n  var lastCachedState = null;\n  function cacheState() {\n    // This should be the only place in $browser where `history.state` is read.\n    cachedState = getCurrentState();\n    cachedState = isUndefined(cachedState) ? null : cachedState;\n\n    // Prevent callbacks fo fire twice if both hashchange & popstate were fired.\n    if (equals(cachedState, lastCachedState)) {\n      cachedState = lastCachedState;\n    }\n\n    lastCachedState = cachedState;\n    lastHistoryState = cachedState;\n  }\n\n  function fireStateOrUrlChange() {\n    var prevLastHistoryState = lastHistoryState;\n    cacheState();\n\n    if (lastBrowserUrl === self.url() && prevLastHistoryState === cachedState) {\n      return;\n    }\n\n    lastBrowserUrl = self.url();\n    lastHistoryState = cachedState;\n    forEach(urlChangeListeners, function(listener) {\n      listener(self.url(), cachedState);\n    });\n  }\n\n  /**\n   * @name $browser#onUrlChange\n   *\n   * @description\n   * Register callback function that will be called, when url changes.\n   *\n   * It's only called when the url is changed from outside of angular:\n   * - user types different url into address bar\n   * - user clicks on history (forward/back) button\n   * - user clicks on a link\n   *\n   * It's not called when url is changed by $browser.url() method\n   *\n   * The listener gets called with new url as parameter.\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to monitor url changes in angular apps.\n   *\n   * @param {function(string)} listener Listener function to be called when url changes.\n   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\n   */\n  self.onUrlChange = function(callback) {\n    // TODO(vojta): refactor to use node's syntax for events\n    if (!urlChangeInit) {\n      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\n      // don't fire popstate when user change the address bar and don't fire hashchange when url\n      // changed by push/replaceState\n\n      // html5 history api - popstate event\n      if ($sniffer.history) jqLite(window).on('popstate', cacheStateAndFireUrlChange);\n      // hashchange event\n      jqLite(window).on('hashchange', cacheStateAndFireUrlChange);\n\n      urlChangeInit = true;\n    }\n\n    urlChangeListeners.push(callback);\n    return callback;\n  };\n\n  /**\n   * @private\n   * Remove popstate and hashchange handler from window.\n   *\n   * NOTE: this api is intended for use only by $rootScope.\n   */\n  self.$$applicationDestroyed = function() {\n    jqLite(window).off('hashchange popstate', cacheStateAndFireUrlChange);\n  };\n\n  /**\n   * Checks whether the url has changed outside of Angular.\n   * Needs to be exported to be able to check for changes that have been done in sync,\n   * as hashchange/popstate events fire in async.\n   */\n  self.$$checkUrlChange = fireStateOrUrlChange;\n\n  //////////////////////////////////////////////////////////////\n  // Misc API\n  //////////////////////////////////////////////////////////////\n\n  /**\n   * @name $browser#baseHref\n   *\n   * @description\n   * Returns current <base href>\n   * (always relative - without domain)\n   *\n   * @returns {string} The current base href\n   */\n  self.baseHref = function() {\n    var href = baseElement.attr('href');\n    return href ? href.replace(/^(https?:)?\\/\\/[^/]*/, '') : '';\n  };\n\n  /**\n   * @name $browser#defer\n   * @param {function()} fn A function, who's execution should be deferred.\n   * @param {number=} [delay=0] of milliseconds to defer the function execution.\n   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\n   *\n   * @description\n   * Executes a fn asynchronously via `setTimeout(fn, delay)`.\n   *\n   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\n   * via `$browser.defer.flush()`.\n   *\n   */\n  self.defer = function(fn, delay) {\n    var timeoutId;\n    outstandingRequestCount++;\n    timeoutId = setTimeout(function() {\n      delete pendingDeferIds[timeoutId];\n      completeOutstandingRequest(fn);\n    }, delay || 0);\n    pendingDeferIds[timeoutId] = true;\n    return timeoutId;\n  };\n\n\n  /**\n   * @name $browser#defer.cancel\n   *\n   * @description\n   * Cancels a deferred task identified with `deferId`.\n   *\n   * @param {*} deferId Token returned by the `$browser.defer` function.\n   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n   *                    canceled.\n   */\n  self.defer.cancel = function(deferId) {\n    if (pendingDeferIds[deferId]) {\n      delete pendingDeferIds[deferId];\n      clearTimeout(deferId);\n      completeOutstandingRequest(noop);\n      return true;\n    }\n    return false;\n  };\n\n}\n\n/** @this */\nfunction $BrowserProvider() {\n  this.$get = ['$window', '$log', '$sniffer', '$document',\n      function($window, $log, $sniffer, $document) {\n        return new Browser($window, $document, $log, $sniffer);\n      }];\n}\n\n/**\n * @ngdoc service\n * @name $cacheFactory\n * @this\n *\n * @description\n * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\n * them.\n *\n * ```js\n *\n *  var cache = $cacheFactory('cacheId');\n *  expect($cacheFactory.get('cacheId')).toBe(cache);\n *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n *\n *  cache.put(\"key\", \"value\");\n *  cache.put(\"another key\", \"another value\");\n *\n *  // We've specified no options on creation\n *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n *\n * ```\n *\n *\n * @param {string} cacheId Name or id of the newly created cache.\n * @param {object=} options Options object that specifies the cache behavior. Properties:\n *\n *   - `{number=}` `capacity` — turns the cache into LRU cache.\n *\n * @returns {object} Newly created cache object with the following set of methods:\n *\n * - `{object}` `info()` — Returns id, size, and options of cache.\n * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns\n *   it.\n * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n * - `{void}` `removeAll()` — Removes all cached values.\n * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\n *\n * @example\n   <example module=\"cacheExampleApp\" name=\"cache-factory\">\n     <file name=\"index.html\">\n       <div ng-controller=\"CacheController\">\n         <input ng-model=\"newCacheKey\" placeholder=\"Key\">\n         <input ng-model=\"newCacheValue\" placeholder=\"Value\">\n         <button ng-click=\"put(newCacheKey, newCacheValue)\">Cache</button>\n\n         <p ng-if=\"keys.length\">Cached Values</p>\n         <div ng-repeat=\"key in keys\">\n           <span ng-bind=\"key\"></span>\n           <span>: </span>\n           <b ng-bind=\"cache.get(key)\"></b>\n         </div>\n\n         <p>Cache Info</p>\n         <div ng-repeat=\"(key, value) in cache.info()\">\n           <span ng-bind=\"key\"></span>\n           <span>: </span>\n           <b ng-bind=\"value\"></b>\n         </div>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('cacheExampleApp', []).\n         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {\n           $scope.keys = [];\n           $scope.cache = $cacheFactory('cacheId');\n           $scope.put = function(key, value) {\n             if (angular.isUndefined($scope.cache.get(key))) {\n               $scope.keys.push(key);\n             }\n             $scope.cache.put(key, angular.isUndefined(value) ? null : value);\n           };\n         }]);\n     </file>\n     <file name=\"style.css\">\n       p {\n         margin: 10px 0 3px;\n       }\n     </file>\n   </example>\n */\nfunction $CacheFactoryProvider() {\n\n  this.$get = function() {\n    var caches = {};\n\n    function cacheFactory(cacheId, options) {\n      if (cacheId in caches) {\n        throw minErr('$cacheFactory')('iid', 'CacheId \\'{0}\\' is already taken!', cacheId);\n      }\n\n      var size = 0,\n          stats = extend({}, options, {id: cacheId}),\n          data = createMap(),\n          capacity = (options && options.capacity) || Number.MAX_VALUE,\n          lruHash = createMap(),\n          freshEnd = null,\n          staleEnd = null;\n\n      /**\n       * @ngdoc type\n       * @name $cacheFactory.Cache\n       *\n       * @description\n       * A cache object used to store and retrieve data, primarily used by\n       * {@link $http $http} and the {@link ng.directive:script script} directive to cache\n       * templates and other data.\n       *\n       * ```js\n       *  angular.module('superCache')\n       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n       *      return $cacheFactory('super-cache');\n       *    }]);\n       * ```\n       *\n       * Example test:\n       *\n       * ```js\n       *  it('should behave like a cache', inject(function(superCache) {\n       *    superCache.put('key', 'value');\n       *    superCache.put('another key', 'another value');\n       *\n       *    expect(superCache.info()).toEqual({\n       *      id: 'super-cache',\n       *      size: 2\n       *    });\n       *\n       *    superCache.remove('another key');\n       *    expect(superCache.get('another key')).toBeUndefined();\n       *\n       *    superCache.removeAll();\n       *    expect(superCache.info()).toEqual({\n       *      id: 'super-cache',\n       *      size: 0\n       *    });\n       *  }));\n       * ```\n       */\n      return (caches[cacheId] = {\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#put\n         * @kind function\n         *\n         * @description\n         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\n         * retrieved later, and incrementing the size of the cache if the key was not already\n         * present in the cache. If behaving like an LRU cache, it will also remove stale\n         * entries from the set.\n         *\n         * It will not insert undefined values into the cache.\n         *\n         * @param {string} key the key under which the cached data is stored.\n         * @param {*} value the value to store alongside the key. If it is undefined, the key\n         *    will not be stored.\n         * @returns {*} the value stored.\n         */\n        put: function(key, value) {\n          if (isUndefined(value)) return;\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\n\n            refresh(lruEntry);\n          }\n\n          if (!(key in data)) size++;\n          data[key] = value;\n\n          if (size > capacity) {\n            this.remove(staleEnd.key);\n          }\n\n          return value;\n        },\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#get\n         * @kind function\n         *\n         * @description\n         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.\n         *\n         * @param {string} key the key of the data to be retrieved\n         * @returns {*} the value stored.\n         */\n        get: function(key) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key];\n\n            if (!lruEntry) return;\n\n            refresh(lruEntry);\n          }\n\n          return data[key];\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#remove\n         * @kind function\n         *\n         * @description\n         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.\n         *\n         * @param {string} key the key of the entry to be removed\n         */\n        remove: function(key) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key];\n\n            if (!lruEntry) return;\n\n            if (lruEntry === freshEnd) freshEnd = lruEntry.p;\n            if (lruEntry === staleEnd) staleEnd = lruEntry.n;\n            link(lruEntry.n,lruEntry.p);\n\n            delete lruHash[key];\n          }\n\n          if (!(key in data)) return;\n\n          delete data[key];\n          size--;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#removeAll\n         * @kind function\n         *\n         * @description\n         * Clears the cache object of any entries.\n         */\n        removeAll: function() {\n          data = createMap();\n          size = 0;\n          lruHash = createMap();\n          freshEnd = staleEnd = null;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#destroy\n         * @kind function\n         *\n         * @description\n         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,\n         * removing it from the {@link $cacheFactory $cacheFactory} set.\n         */\n        destroy: function() {\n          data = null;\n          stats = null;\n          lruHash = null;\n          delete caches[cacheId];\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#info\n         * @kind function\n         *\n         * @description\n         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.\n         *\n         * @returns {object} an object with the following properties:\n         *   <ul>\n         *     <li>**id**: the id of the cache instance</li>\n         *     <li>**size**: the number of entries kept in the cache instance</li>\n         *     <li>**...**: any additional properties from the options object when creating the\n         *       cache.</li>\n         *   </ul>\n         */\n        info: function() {\n          return extend({}, stats, {size: size});\n        }\n      });\n\n\n      /**\n       * makes the `entry` the freshEnd of the LRU linked list\n       */\n      function refresh(entry) {\n        if (entry !== freshEnd) {\n          if (!staleEnd) {\n            staleEnd = entry;\n          } else if (staleEnd === entry) {\n            staleEnd = entry.n;\n          }\n\n          link(entry.n, entry.p);\n          link(entry, freshEnd);\n          freshEnd = entry;\n          freshEnd.n = null;\n        }\n      }\n\n\n      /**\n       * bidirectionally links two entries of the LRU linked list\n       */\n      function link(nextEntry, prevEntry) {\n        if (nextEntry !== prevEntry) {\n          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\n          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\n        }\n      }\n    }\n\n\n  /**\n   * @ngdoc method\n   * @name $cacheFactory#info\n   *\n   * @description\n   * Get information about all the caches that have been created\n   *\n   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`\n   */\n    cacheFactory.info = function() {\n      var info = {};\n      forEach(caches, function(cache, cacheId) {\n        info[cacheId] = cache.info();\n      });\n      return info;\n    };\n\n\n  /**\n   * @ngdoc method\n   * @name $cacheFactory#get\n   *\n   * @description\n   * Get access to a cache object by the `cacheId` used when it was created.\n   *\n   * @param {string} cacheId Name or id of a cache to access.\n   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.\n   */\n    cacheFactory.get = function(cacheId) {\n      return caches[cacheId];\n    };\n\n\n    return cacheFactory;\n  };\n}\n\n/**\n * @ngdoc service\n * @name $templateCache\n * @this\n *\n * @description\n * The first time a template is used, it is loaded in the template cache for quick retrieval. You\n * can load templates directly into the cache in a `script` tag, or by consuming the\n * `$templateCache` service directly.\n *\n * Adding via the `script` tag:\n *\n * ```html\n *   <script type=\"text/ng-template\" id=\"templateId.html\">\n *     <p>This is the content of the template</p>\n *   </script>\n * ```\n *\n * **Note:** the `script` tag containing the template does not need to be included in the `head` of\n * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\n * element with ng-app attribute), otherwise the template will be ignored.\n *\n * Adding via the `$templateCache` service:\n *\n * ```js\n * var myApp = angular.module('myApp', []);\n * myApp.run(function($templateCache) {\n *   $templateCache.put('templateId.html', 'This is the content of the template');\n * });\n * ```\n *\n * To retrieve the template later, simply use it in your component:\n * ```js\n * myApp.component('myComponent', {\n *    templateUrl: 'templateId.html'\n * });\n * ```\n *\n * or get it via the `$templateCache` service:\n * ```js\n * $templateCache.get('templateId.html')\n * ```\n *\n * See {@link ng.$cacheFactory $cacheFactory}.\n *\n */\nfunction $TemplateCacheProvider() {\n  this.$get = ['$cacheFactory', function($cacheFactory) {\n    return $cacheFactory('templates');\n  }];\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables like document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\n *\n * DOM-related variables:\n *\n * - \"node\" - DOM Node\n * - \"element\" - DOM Element or Node\n * - \"$node\" or \"$element\" - jqLite-wrapped node or element\n *\n *\n * Compiler related stuff:\n *\n * - \"linkFn\" - linking fn of a single directive\n * - \"nodeLinkFn\" - function that aggregates all linking fns for a particular node\n * - \"childLinkFn\" -  function that aggregates all linking fns for child nodes of a particular node\n * - \"compositeLinkFn\" - function that aggregates all linking fns for a compilation root (nodeList)\n */\n\n\n/**\n * @ngdoc service\n * @name $compile\n * @kind function\n *\n * @description\n * Compiles an HTML string or DOM into a template and produces a template function, which\n * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n *\n * The compilation is a process of walking the DOM tree and matching DOM elements to\n * {@link ng.$compileProvider#directive directives}.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** This document is an in-depth reference of all directive options.\n * For a gentle introduction to directives with examples of common use cases,\n * see the {@link guide/directive directive guide}.\n * </div>\n *\n * ## Comprehensive Directive API\n *\n * There are many different options for a directive.\n *\n * The difference resides in the return value of the factory function.\n * You can either return a {@link $compile#directive-definition-object Directive Definition Object (see below)}\n * that defines the directive properties, or just the `postLink` function (all other properties will have\n * the default values).\n *\n * <div class=\"alert alert-success\">\n * **Best Practice:** It's recommended to use the \"directive definition object\" form.\n * </div>\n *\n * Here's an example directive declared with a Directive Definition Object:\n *\n * ```js\n *   var myModule = angular.module(...);\n *\n *   myModule.directive('directiveName', function factory(injectables) {\n *     var directiveDefinitionObject = {\n *       {@link $compile#-priority- priority}: 0,\n *       {@link $compile#-template- template}: '<div></div>', // or // function(tElement, tAttrs) { ... },\n *       // or\n *       // {@link $compile#-templateurl- templateUrl}: 'directive.html', // or // function(tElement, tAttrs) { ... },\n *       {@link $compile#-transclude- transclude}: false,\n *       {@link $compile#-restrict- restrict}: 'A',\n *       {@link $compile#-templatenamespace- templateNamespace}: 'html',\n *       {@link $compile#-scope- scope}: false,\n *       {@link $compile#-controller- controller}: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n *       {@link $compile#-controlleras- controllerAs}: 'stringIdentifier',\n *       {@link $compile#-bindtocontroller- bindToController}: false,\n *       {@link $compile#-require- require}: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n *       {@link $compile#-multielement- multiElement}: false,\n *       {@link $compile#-compile- compile}: function compile(tElement, tAttrs, transclude) {\n *         return {\n *            {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },\n *            {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }\n *         }\n *         // or\n *         // return function postLink( ... ) { ... }\n *       },\n *       // or\n *       // {@link $compile#-link- link}: {\n *       //  {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },\n *       //  {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }\n *       // }\n *       // or\n *       // {@link $compile#-link- link}: function postLink( ... ) { ... }\n *     };\n *     return directiveDefinitionObject;\n *   });\n * ```\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Any unspecified options will use the default value. You can see the default values below.\n * </div>\n *\n * Therefore the above can be simplified as:\n *\n * ```js\n *   var myModule = angular.module(...);\n *\n *   myModule.directive('directiveName', function factory(injectables) {\n *     var directiveDefinitionObject = {\n *       link: function postLink(scope, iElement, iAttrs) { ... }\n *     };\n *     return directiveDefinitionObject;\n *     // or\n *     // return function postLink(scope, iElement, iAttrs) { ... }\n *   });\n * ```\n *\n * ### Life-cycle hooks\n * Directive controllers can provide the following methods that are called by Angular at points in the life-cycle of the\n * directive:\n * * `$onInit()` - Called on each controller after all the controllers on an element have been constructed and\n *   had their bindings initialized (and before the pre &amp; post linking functions for the directives on\n *   this element). This is a good place to put initialization code for your controller.\n * * `$onChanges(changesObj)` - Called whenever one-way (`<`) or interpolation (`@`) bindings are updated. The\n *   `changesObj` is a hash whose keys are the names of the bound properties that have changed, and the values are an\n *   object of the form `{ currentValue, previousValue, isFirstChange() }`. Use this hook to trigger updates within a\n *   component such as cloning the bound value to prevent accidental mutation of the outer value. Note that this will\n *   also be called when your bindings are initialized.\n * * `$doCheck()` - Called on each turn of the digest cycle. Provides an opportunity to detect and act on\n *   changes. Any actions that you wish to take in response to the changes that you detect must be\n *   invoked from this hook; implementing this has no effect on when `$onChanges` is called. For example, this hook\n *   could be useful if you wish to perform a deep equality check, or to check a Date object, changes to which would not\n *   be detected by Angular's change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments;\n *   if detecting changes, you must store the previous value(s) for comparison to the current values.\n * * `$onDestroy()` - Called on a controller when its containing scope is destroyed. Use this hook for releasing\n *   external resources, watches and event handlers. Note that components have their `$onDestroy()` hooks called in\n *   the same order as the `$scope.$broadcast` events are triggered, which is top down. This means that parent\n *   components will have their `$onDestroy()` hook called before child components.\n * * `$postLink()` - Called after this controller's element and its children have been linked. Similar to the post-link\n *   function this hook can be used to set up DOM event handlers and do direct DOM manipulation.\n *   Note that child elements that contain `templateUrl` directives will not have been compiled and linked since\n *   they are waiting for their template to load asynchronously and their own compilation and linking has been\n *   suspended until that occurs.\n *\n * #### Comparison with Angular 2 life-cycle hooks\n * Angular 2 also uses life-cycle hooks for its components. While the Angular 1 life-cycle hooks are similar there are\n * some differences that you should be aware of, especially when it comes to moving your code from Angular 1 to Angular 2:\n *\n * * Angular 1 hooks are prefixed with `$`, such as `$onInit`. Angular 2 hooks are prefixed with `ng`, such as `ngOnInit`.\n * * Angular 1 hooks can be defined on the controller prototype or added to the controller inside its constructor.\n *   In Angular 2 you can only define hooks on the prototype of the Component class.\n * * Due to the differences in change-detection, you may get many more calls to `$doCheck` in Angular 1 than you would to\n *   `ngDoCheck` in Angular 2\n * * Changes to the model inside `$doCheck` will trigger new turns of the digest loop, which will cause the changes to be\n *   propagated throughout the application.\n *   Angular 2 does not allow the `ngDoCheck` hook to trigger a change outside of the component. It will either throw an\n *   error or do nothing depending upon the state of `enableProdMode()`.\n *\n * #### Life-cycle hook examples\n *\n * This example shows how you can check for mutations to a Date object even though the identity of the object\n * has not changed.\n *\n * <example name=\"doCheckDateExample\" module=\"do-check-module\">\n *   <file name=\"app.js\">\n *     angular.module('do-check-module', [])\n *       .component('app', {\n *         template:\n *           'Month: <input ng-model=\"$ctrl.month\" ng-change=\"$ctrl.updateDate()\">' +\n *           'Date: {{ $ctrl.date }}' +\n *           '<test date=\"$ctrl.date\"></test>',\n *         controller: function() {\n *           this.date = new Date();\n *           this.month = this.date.getMonth();\n *           this.updateDate = function() {\n *             this.date.setMonth(this.month);\n *           };\n *         }\n *       })\n *       .component('test', {\n *         bindings: { date: '<' },\n *         template:\n *           '<pre>{{ $ctrl.log | json }}</pre>',\n *         controller: function() {\n *           var previousValue;\n *           this.log = [];\n *           this.$doCheck = function() {\n *             var currentValue = this.date && this.date.valueOf();\n *             if (previousValue !== currentValue) {\n *               this.log.push('doCheck: date mutated: ' + this.date);\n *               previousValue = currentValue;\n *             }\n *           };\n *         }\n *       });\n *   </file>\n *   <file name=\"index.html\">\n *     <app></app>\n *   </file>\n * </example>\n *\n * This example show how you might use `$doCheck` to trigger changes in your component's inputs even if the\n * actual identity of the component doesn't change. (Be aware that cloning and deep equality checks on large\n * arrays or objects can have a negative impact on your application performance)\n *\n * <example name=\"doCheckArrayExample\" module=\"do-check-module\">\n *   <file name=\"index.html\">\n *     <div ng-init=\"items = []\">\n *       <button ng-click=\"items.push(items.length)\">Add Item</button>\n *       <button ng-click=\"items = []\">Reset Items</button>\n *       <pre>{{ items }}</pre>\n *       <test items=\"items\"></test>\n *     </div>\n *   </file>\n *   <file name=\"app.js\">\n *      angular.module('do-check-module', [])\n *        .component('test', {\n *          bindings: { items: '<' },\n *          template:\n *            '<pre>{{ $ctrl.log | json }}</pre>',\n *          controller: function() {\n *            this.log = [];\n *\n *            this.$doCheck = function() {\n *              if (this.items_ref !== this.items) {\n *                this.log.push('doCheck: items changed');\n *                this.items_ref = this.items;\n *              }\n *              if (!angular.equals(this.items_clone, this.items)) {\n *                this.log.push('doCheck: items mutated');\n *                this.items_clone = angular.copy(this.items);\n *              }\n *            };\n *          }\n *        });\n *   </file>\n * </example>\n *\n *\n * ### Directive Definition Object\n *\n * The directive definition object provides instructions to the {@link ng.$compile\n * compiler}. The attributes are:\n *\n * #### `multiElement`\n * When this property is set to true (default is `false`), the HTML compiler will collect DOM nodes between\n * nodes with the attributes `directive-name-start` and `directive-name-end`, and group them\n * together as the directive elements. It is recommended that this feature be used on directives\n * which are not strictly behavioral (such as {@link ngClick}), and which\n * do not manipulate or replace child nodes (such as {@link ngInclude}).\n *\n * #### `priority`\n * When there are multiple directives defined on a single DOM element, sometimes it\n * is necessary to specify the order in which the directives are applied. The `priority` is used\n * to sort the directives before their `compile` functions get called. Priority is defined as a\n * number. Directives with greater numerical `priority` are compiled first. Pre-link functions\n * are also run in priority order, but post-link functions are run in reverse order. The order\n * of directives with the same priority is undefined. The default priority is `0`.\n *\n * #### `terminal`\n * If set to true then the current `priority` will be the last set of directives\n * which will execute (any directives at the current priority will still execute\n * as the order of execution on same `priority` is undefined). Note that expressions\n * and other directives used in the directive's template will also be excluded from execution.\n *\n * #### `scope`\n * The scope property can be `false`, `true`, or an object:\n *\n * * **`false` (default):** No scope will be created for the directive. The directive will use its\n * parent's scope.\n *\n * * **`true`:** A new child scope that prototypically inherits from its parent will be created for\n * the directive's element. If multiple directives on the same element request a new scope,\n * only one new scope is created.\n *\n * * **`{...}` (an object hash):** A new \"isolate\" scope is created for the directive's element. The\n * 'isolate' scope differs from normal scope in that it does not prototypically inherit from its parent\n * scope. This is useful when creating reusable components, which should not accidentally read or modify\n * data in the parent scope.\n *\n * The 'isolate' scope object hash defines a set of local scope properties derived from attributes on the\n * directive's element. These local properties are useful for aliasing values for templates. The keys in\n * the object hash map to the name of the property on the isolate scope; the values define how the property\n * is bound to the parent scope, via matching attributes on the directive's element:\n *\n * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n *   always a string since DOM attributes are strings. If no `attr` name is specified then the\n *   attribute name is assumed to be the same as the local name. Given `<my-component\n *   my-attr=\"hello {{name}}\">` and the isolate scope definition `scope: { localName:'@myAttr' }`,\n *   the directive's scope property `localName` will reflect the interpolated value of `hello\n *   {{name}}`. As the `name` attribute changes so will the `localName` property on the directive's\n *   scope. The `name` is read from the parent scope (not the directive's scope).\n *\n * * `=` or `=attr` - set up a bidirectional binding between a local scope property and an expression\n *   passed via the attribute `attr`. The expression is evaluated in the context of the parent scope.\n *   If no `attr` name is specified then the attribute name is assumed to be the same as the local\n *   name. Given `<my-component my-attr=\"parentModel\">` and the isolate scope definition `scope: {\n *   localModel: '=myAttr' }`, the property `localModel` on the directive's scope will reflect the\n *   value of `parentModel` on the parent scope. Changes to `parentModel` will be reflected in\n *   `localModel` and vice versa. Optional attributes should be marked as such with a question mark:\n *   `=?` or `=?attr`. If the binding expression is non-assignable, or if the attribute isn't\n *   optional and doesn't exist, an exception ({@link error/$compile/nonassign `$compile:nonassign`})\n *   will be thrown upon discovering changes to the local value, since it will be impossible to sync\n *   them back to the parent scope. By default, the {@link ng.$rootScope.Scope#$watch `$watch`}\n *   method is used for tracking changes, and the equality check is based on object identity.\n *   However, if an object literal or an array literal is passed as the binding expression, the\n *   equality check is done by value (using the {@link angular.equals} function). It's also possible\n *   to watch the evaluated value shallowly with {@link ng.$rootScope.Scope#$watchCollection\n *   `$watchCollection`}: use `=*` or `=*attr` (`=*?` or `=*?attr` if the attribute is optional).\n *\n  * * `<` or `<attr` - set up a one-way (one-directional) binding between a local scope property and an\n *   expression passed via the attribute `attr`. The expression is evaluated in the context of the\n *   parent scope. If no `attr` name is specified then the attribute name is assumed to be the same as the\n *   local name. You can also make the binding optional by adding `?`: `<?` or `<?attr`.\n *\n *   For example, given `<my-component my-attr=\"parentModel\">` and directive definition of\n *   `scope: { localModel:'<myAttr' }`, then the isolated scope property `localModel` will reflect the\n *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n *   in `localModel`, but changes in `localModel` will not reflect in `parentModel`. There are however\n *   two caveats:\n *     1. one-way binding does not copy the value from the parent to the isolate scope, it simply\n *     sets the same value. That means if your bound value is an object, changes to its properties\n *     in the isolated scope will be reflected in the parent scope (because both reference the same object).\n *     2. one-way binding watches changes to the **identity** of the parent value. That means the\n *     {@link ng.$rootScope.Scope#$watch `$watch`} on the parent value only fires if the reference\n *     to the value has changed. In most cases, this should not be of concern, but can be important\n *     to know if you one-way bind to an object, and then replace that object in the isolated scope.\n *     If you now change a property of the object in your parent scope, the change will not be\n *     propagated to the isolated scope, because the identity of the object on the parent scope\n *     has not changed. Instead you must assign a new object.\n *\n *   One-way binding is useful if you do not plan to propagate changes to your isolated scope bindings\n *   back to the parent. However, it does not make this completely impossible.\n *\n * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope. If\n *   no `attr` name is specified then the attribute name is assumed to be the same as the local name.\n *   Given `<my-component my-attr=\"count = count + value\">` and the isolate scope definition `scope: {\n *   localFn:'&myAttr' }`, the isolate scope property `localFn` will point to a function wrapper for\n *   the `count = count + value` expression. Often it's desirable to pass data from the isolated scope\n *   via an expression to the parent scope. This can be done by passing a map of local variable names\n *   and values into the expression wrapper fn. For example, if the expression is `increment(amount)`\n *   then we can specify the amount value by calling the `localFn` as `localFn({amount: 22})`.\n *\n * In general it's possible to apply more than one directive to one element, but there might be limitations\n * depending on the type of scope required by the directives. The following points will help explain these limitations.\n * For simplicity only two directives are taken into account, but it is also applicable for several directives:\n *\n * * **no scope** + **no scope** => Two directives which don't require their own scope will use their parent's scope\n * * **child scope** + **no scope** =>  Both directives will share one single child scope\n * * **child scope** + **child scope** =>  Both directives will share one single child scope\n * * **isolated scope** + **no scope** =>  The isolated directive will use it's own created isolated scope. The other directive will use\n * its parent's scope\n * * **isolated scope** + **child scope** =>  **Won't work!** Only one scope can be related to one element. Therefore these directives cannot\n * be applied to the same element.\n * * **isolated scope** + **isolated scope**  =>  **Won't work!** Only one scope can be related to one element. Therefore these directives\n * cannot be applied to the same element.\n *\n *\n * #### `bindToController`\n * This property is used to bind scope properties directly to the controller. It can be either\n * `true` or an object hash with the same format as the `scope` property.\n *\n * When an isolate scope is used for a directive (see above), `bindToController: true` will\n * allow a component to have its properties bound to the controller, rather than to scope.\n *\n * After the controller is instantiated, the initial values of the isolate scope bindings will be bound to the controller\n * properties. You can access these bindings once they have been initialized by providing a controller method called\n * `$onInit`, which is called after all the controllers on an element have been constructed and had their bindings\n * initialized.\n *\n * <div class=\"alert alert-warning\">\n * **Deprecation warning:** although bindings for non-ES6 class controllers are currently\n * bound to `this` before the controller constructor is called, this use is now deprecated. Please place initialization\n * code that relies upon bindings inside a `$onInit` method on the controller, instead.\n * </div>\n *\n * It is also possible to set `bindToController` to an object hash with the same format as the `scope` property.\n * This will set up the scope bindings to the controller directly. Note that `scope` can still be used\n * to define which kind of scope is created. By default, no scope is created. Use `scope: {}` to create an isolate\n * scope (useful for component directives).\n *\n * If both `bindToController` and `scope` are defined and have object hashes, `bindToController` overrides `scope`.\n *\n *\n * #### `controller`\n * Controller constructor function. The controller is instantiated before the\n * pre-linking phase and can be accessed by other directives (see\n * `require` attribute). This allows the directives to communicate with each other and augment\n * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n *\n * * `$scope` - Current scope associated with the element\n * * `$element` - Current element\n * * `$attrs` - Current attributes object for the element\n * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:\n *   `function([scope], cloneLinkingFn, futureParentElement, slotName)`:\n *    * `scope`: (optional) override the scope.\n *    * `cloneLinkingFn`: (optional) argument to create clones of the original transcluded content.\n *    * `futureParentElement` (optional):\n *        * defines the parent to which the `cloneLinkingFn` will add the cloned elements.\n *        * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.\n *        * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)\n *          and when the `cloneLinkingFn` is passed,\n *          as those elements need to created and cloned in a special way when they are defined outside their\n *          usual containers (e.g. like `<svg>`).\n *        * See also the `directive.templateNamespace` property.\n *    * `slotName`: (optional) the name of the slot to transclude. If falsy (e.g. `null`, `undefined` or `''`)\n *      then the default transclusion is provided.\n *    The `$transclude` function also has a method on it, `$transclude.isSlotFilled(slotName)`, which returns\n *    `true` if the specified slot contains content (i.e. one or more DOM nodes).\n *\n * #### `require`\n * Require another directive and inject its controller as the fourth argument to the linking function. The\n * `require` property can be a string, an array or an object:\n * * a **string** containing the name of the directive to pass to the linking function\n * * an **array** containing the names of directives to pass to the linking function. The argument passed to the\n * linking function will be an array of controllers in the same order as the names in the `require` property\n * * an **object** whose property values are the names of the directives to pass to the linking function. The argument\n * passed to the linking function will also be an object with matching keys, whose values will hold the corresponding\n * controllers.\n *\n * If the `require` property is an object and `bindToController` is truthy, then the required controllers are\n * bound to the controller using the keys of the `require` property. This binding occurs after all the controllers\n * have been constructed but before `$onInit` is called.\n * If the name of the required controller is the same as the local name (the key), the name can be\n * omitted. For example, `{parentDir: '^^'}` is equivalent to `{parentDir: '^^parentDir'}`.\n * See the {@link $compileProvider#component} helper for an example of how this can be used.\n * If no such required directive(s) can be found, or if the directive does not have a controller, then an error is\n * raised (unless no link function is specified and the required controllers are not being bound to the directive\n * controller, in which case error checking is skipped). The name can be prefixed with:\n *\n * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n * * `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.\n * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n *   `null` to the `link` fn if not found.\n * * `?^^` - Attempt to locate the required controller by searching the element's parents, or pass\n *   `null` to the `link` fn if not found.\n *\n *\n * #### `controllerAs`\n * Identifier name for a reference to the controller in the directive's scope.\n * This allows the controller to be referenced from the directive template. This is especially\n * useful when a directive is used as component, i.e. with an `isolate` scope. It's also possible\n * to use it in a directive without an `isolate` / `new` scope, but you need to be aware that the\n * `controllerAs` reference might overwrite a property that already exists on the parent scope.\n *\n *\n * #### `restrict`\n * String of subset of `EACM` which restricts the directive to a specific directive\n * declaration style. If omitted, the defaults (elements and attributes) are used.\n *\n * * `E` - Element name (default): `<my-directive></my-directive>`\n * * `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n * * `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n * * `M` - Comment: `<!-- directive: my-directive exp -->`\n *\n *\n * #### `templateNamespace`\n * String representing the document type used by the markup in the template.\n * AngularJS needs this information as those elements need to be created and cloned\n * in a special way when they are defined outside their usual containers like `<svg>` and `<math>`.\n *\n * * `html` - All root nodes in the template are HTML. Root nodes may also be\n *   top-level elements such as `<svg>` or `<math>`.\n * * `svg` - The root nodes in the template are SVG elements (excluding `<math>`).\n * * `math` - The root nodes in the template are MathML elements (excluding `<svg>`).\n *\n * If no `templateNamespace` is specified, then the namespace is considered to be `html`.\n *\n * #### `template`\n * HTML markup that may:\n * * Replace the contents of the directive's element (default).\n * * Replace the directive's element itself (if `replace` is true - DEPRECATED).\n * * Wrap the contents of the directive's element (if `transclude` is true).\n *\n * Value may be:\n *\n * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n *   function api below) and returns a string value.\n *\n *\n * #### `templateUrl`\n * This is similar to `template` but the template is loaded from the specified URL, asynchronously.\n *\n * Because template loading is asynchronous the compiler will suspend compilation of directives on that element\n * for later when the template has been resolved.  In the meantime it will continue to compile and link\n * sibling and parent elements as though this element had not contained any directives.\n *\n * The compiler does not suspend the entire compilation to wait for templates to be loaded because this\n * would result in the whole app \"stalling\" until all templates are loaded asynchronously - even in the\n * case when only one deeply nested directive has `templateUrl`.\n *\n * Template loading is asynchronous even if the template has been preloaded into the {@link $templateCache}\n *\n * You can specify `templateUrl` as a string representing the URL or as a function which takes two\n * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\n * a string value representing the url.  In either case, the template URL is passed through {@link\n * $sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n *\n *\n * #### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)\n * specify what the template should replace. Defaults to `false`.\n *\n * * `true` - the template will replace the directive's element.\n * * `false` - the template will replace the contents of the directive's element.\n *\n * The replacement process migrates all of the attributes / classes from the old element to the new\n * one. See the {@link guide/directive#template-expanding-directive\n * Directives Guide} for an example.\n *\n * There are very few scenarios where element replacement is required for the application function,\n * the main one being reusable custom components that are used within SVG contexts\n * (because SVG doesn't work with custom elements in the DOM tree).\n *\n * #### `transclude`\n * Extract the contents of the element where the directive appears and make it available to the directive.\n * The contents are compiled and provided to the directive as a **transclusion function**. See the\n * {@link $compile#transclusion Transclusion} section below.\n *\n *\n * #### `compile`\n *\n * ```js\n *   function compile(tElement, tAttrs, transclude) { ... }\n * ```\n *\n * The compile function deals with transforming the template DOM. Since most directives do not do\n * template transformation, it is not used often. The compile function takes the following arguments:\n *\n *   * `tElement` - template element - The element where the directive has been declared. It is\n *     safe to do template transformation on the element and child elements only.\n *\n *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n *     between all directive compile functions.\n *\n *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n *\n * <div class=\"alert alert-warning\">\n * **Note:** The template instance and the link instance may be different objects if the template has\n * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that\n * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\n * should be done in a linking function rather than in a compile function.\n * </div>\n\n * <div class=\"alert alert-warning\">\n * **Note:** The compile function cannot handle directives that recursively use themselves in their\n * own templates or compile functions. Compiling these directives results in an infinite loop and\n * stack overflow errors.\n *\n * This can be avoided by manually using $compile in the postLink function to imperatively compile\n * a directive's template instead of relying on automatic template compilation via `template` or\n * `templateUrl` declaration or manual compilation inside the compile function.\n * </div>\n *\n * <div class=\"alert alert-danger\">\n * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n *   e.g. does not know about the right outer scope. Please use the transclude function that is passed\n *   to the link function instead.\n * </div>\n\n * A compile function can have a return value which can be either a function or an object.\n *\n * * returning a (post-link) function - is equivalent to registering the linking function via the\n *   `link` property of the config object when the compile function is empty.\n *\n * * returning an object with function(s) registered via `pre` and `post` properties - allows you to\n *   control when a linking function should be called during the linking phase. See info about\n *   pre-linking and post-linking functions below.\n *\n *\n * #### `link`\n * This property is used only if the `compile` property is not defined.\n *\n * ```js\n *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n * ```\n *\n * The link function is responsible for registering DOM listeners as well as updating the DOM. It is\n * executed after the template has been cloned. This is where most of the directive logic will be\n * put.\n *\n *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n *\n *   * `iElement` - instance element - The element where the directive is to be used. It is safe to\n *     manipulate the children of the element only in `postLink` function since the children have\n *     already been linked.\n *\n *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n *     between all directive linking functions.\n *\n *   * `controller` - the directive's required controller instance(s) - Instances are shared\n *     among all directives, which allows the directives to use the controllers as a communication\n *     channel. The exact value depends on the directive's `require` property:\n *       * no controller(s) required: the directive's own controller, or `undefined` if it doesn't have one\n *       * `string`: the controller instance\n *       * `array`: array of controller instances\n *\n *     If a required controller cannot be found, and it is optional, the instance is `null`,\n *     otherwise the {@link error:$compile:ctreq Missing Required Controller} error is thrown.\n *\n *     Note that you can also require the directive's own controller - it will be made available like\n *     any other controller.\n *\n *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n *     This is the same as the `$transclude` parameter of directive controllers,\n *     see {@link ng.$compile#-controller- the controller section for details}.\n *     `function([scope], cloneLinkingFn, futureParentElement)`.\n *\n * #### Pre-linking function\n *\n * Executed before the child elements are linked. Not safe to do DOM transformation since the\n * compiler linking function will fail to locate the correct elements for linking.\n *\n * #### Post-linking function\n *\n * Executed after the child elements are linked.\n *\n * Note that child elements that contain `templateUrl` directives will not have been compiled\n * and linked since they are waiting for their template to load asynchronously and their own\n * compilation and linking has been suspended until that occurs.\n *\n * It is safe to do DOM transformation in the post-linking function on elements that are not waiting\n * for their async templates to be resolved.\n *\n *\n * ### Transclusion\n *\n * Transclusion is the process of extracting a collection of DOM elements from one part of the DOM and\n * copying them to another part of the DOM, while maintaining their connection to the original AngularJS\n * scope from where they were taken.\n *\n * Transclusion is used (often with {@link ngTransclude}) to insert the\n * original contents of a directive's element into a specified place in the template of the directive.\n * The benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded\n * content has access to the properties on the scope from which it was taken, even if the directive\n * has isolated scope.\n * See the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.\n *\n * This makes it possible for the widget to have private state for its template, while the transcluded\n * content has access to its originating scope.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** When testing an element transclude directive you must not place the directive at the root of the\n * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\n * Testing Transclusion Directives}.\n * </div>\n *\n * There are three kinds of transclusion depending upon whether you want to transclude just the contents of the\n * directive's element, the entire element or multiple parts of the element contents:\n *\n * * `true` - transclude the content (i.e. the child nodes) of the directive's element.\n * * `'element'` - transclude the whole of the directive's element including any directives on this\n *   element that defined at a lower priority than this directive. When used, the `template`\n *   property is ignored.\n * * **`{...}` (an object hash):** - map elements of the content onto transclusion \"slots\" in the template.\n *\n * **Mult-slot transclusion** is declared by providing an object for the `transclude` property.\n *\n * This object is a map where the keys are the name of the slot to fill and the value is an element selector\n * used to match the HTML to the slot. The element selector should be in normalized form (e.g. `myElement`)\n * and will match the standard element variants (e.g. `my-element`, `my:element`, `data-my-element`, etc).\n *\n * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\n *\n * If the element selector is prefixed with a `?` then that slot is optional.\n *\n * For example, the transclude object `{ slotA: '?myCustomElement' }` maps `<my-custom-element>` elements to\n * the `slotA` slot, which can be accessed via the `$transclude` function or via the {@link ngTransclude} directive.\n *\n * Slots that are not marked as optional (`?`) will trigger a compile time error if there are no matching elements\n * in the transclude content. If you wish to know if an optional slot was filled with content, then you can call\n * `$transclude.isSlotFilled(slotName)` on the transclude function passed to the directive's link function and\n * injectable into the directive's controller.\n *\n *\n * #### Transclusion Functions\n *\n * When a directive requests transclusion, the compiler extracts its contents and provides a **transclusion\n * function** to the directive's `link` function and `controller`. This transclusion function is a special\n * **linking function** that will return the compiled contents linked to a new transclusion scope.\n *\n * <div class=\"alert alert-info\">\n * If you are just using {@link ngTransclude} then you don't need to worry about this function, since\n * ngTransclude will deal with it for us.\n * </div>\n *\n * If you want to manually control the insertion and removal of the transcluded content in your directive\n * then you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery\n * object that contains the compiled DOM, which is linked to the correct transclusion scope.\n *\n * When you call a transclusion function you can pass in a **clone attach function**. This function accepts\n * two parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded\n * content and the `scope` is the newly created transclusion scope, which the clone will be linked to.\n *\n * <div class=\"alert alert-info\">\n * **Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a transclude function\n * since you then get a fresh clone of the original DOM and also have access to the new transclusion scope.\n * </div>\n *\n * It is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone\n * attach function**:\n *\n * ```js\n * var transcludedContent, transclusionScope;\n *\n * $transclude(function(clone, scope) {\n *   element.append(clone);\n *   transcludedContent = clone;\n *   transclusionScope = scope;\n * });\n * ```\n *\n * Later, if you want to remove the transcluded content from your DOM then you should also destroy the\n * associated transclusion scope:\n *\n * ```js\n * transcludedContent.remove();\n * transclusionScope.$destroy();\n * ```\n *\n * <div class=\"alert alert-info\">\n * **Best Practice**: if you intend to add and remove transcluded content manually in your directive\n * (by calling the transclude function to get the DOM and calling `element.remove()` to remove it),\n * then you are also responsible for calling `$destroy` on the transclusion scope.\n * </div>\n *\n * The built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}\n * automatically destroy their transcluded clones as necessary so you do not need to worry about this if\n * you are simply using {@link ngTransclude} to inject the transclusion into your directive.\n *\n *\n * #### Transclusion Scopes\n *\n * When you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion\n * scope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed\n * when the directive's scope gets destroyed) but it inherits the properties of the scope from which it\n * was taken.\n *\n * For example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look\n * like this:\n *\n * ```html\n * <div ng-app>\n *   <div isolate>\n *     <div transclusion>\n *     </div>\n *   </div>\n * </div>\n * ```\n *\n * The `$parent` scope hierarchy will look like this:\n *\n   ```\n   - $rootScope\n     - isolate\n       - transclusion\n   ```\n *\n * but the scopes will inherit prototypically from different scopes to their `$parent`.\n *\n   ```\n   - $rootScope\n     - transclusion\n   - isolate\n   ```\n *\n *\n * ### Attributes\n *\n * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n * `link()` or `compile()` functions. It has a variety of uses.\n *\n * * *Accessing normalized attribute names:* Directives like 'ngBind' can be expressed in many ways:\n *   'ng:bind', `data-ng-bind`, or 'x-ng-bind'. The attributes object allows for normalized access\n *   to the attributes.\n *\n * * *Directive inter-communication:* All directives share the same instance of the attributes\n *   object which allows the directives to use the attributes object as inter directive\n *   communication.\n *\n * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n *   allowing other directives to read the interpolated value.\n *\n * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n *   that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n *   the only way to easily get the actual value because during the linking phase the interpolation\n *   hasn't been evaluated yet and so the value is at this time set to `undefined`.\n *\n * ```js\n * function linkingFn(scope, elm, attrs, ctrl) {\n *   // get the attribute value\n *   console.log(attrs.ngModel);\n *\n *   // change the attribute\n *   attrs.$set('ngModel', 'new value');\n *\n *   // observe changes to interpolated attribute\n *   attrs.$observe('ngModel', function(value) {\n *     console.log('ngModel has changed value to ' + value);\n *   });\n * }\n * ```\n *\n * ## Example\n *\n * <div class=\"alert alert-warning\">\n * **Note**: Typically directives are registered with `module.directive`. The example below is\n * to illustrate how `$compile` works.\n * </div>\n *\n <example module=\"compileExample\" name=\"compile\">\n   <file name=\"index.html\">\n    <script>\n      angular.module('compileExample', [], function($compileProvider) {\n        // configure new 'compile' directive by passing a directive\n        // factory function. The factory function injects the '$compile'\n        $compileProvider.directive('compile', function($compile) {\n          // directive factory creates a link function\n          return function(scope, element, attrs) {\n            scope.$watch(\n              function(scope) {\n                 // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n              },\n              function(value) {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n              }\n            );\n          };\n        });\n      })\n      .controller('GreeterController', ['$scope', function($scope) {\n        $scope.name = 'Angular';\n        $scope.html = 'Hello {{name}}';\n      }]);\n    </script>\n    <div ng-controller=\"GreeterController\">\n      <input ng-model=\"name\"> <br/>\n      <textarea ng-model=\"html\"></textarea> <br/>\n      <div compile=\"html\"></div>\n    </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should auto compile', function() {\n       var textarea = $('textarea');\n       var output = $('div[compile]');\n       // The initial state reads 'Hello Angular'.\n       expect(output.getText()).toBe('Hello Angular');\n       textarea.clear();\n       textarea.sendKeys('{{name}}!');\n       expect(output.getText()).toBe('Angular!');\n     });\n   </file>\n </example>\n\n *\n *\n * @param {string|DOMElement} element Element or HTML string to compile into a template function.\n * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives - DEPRECATED.\n *\n * <div class=\"alert alert-danger\">\n * **Note:** Passing a `transclude` function to the $compile function is deprecated, as it\n *   e.g. will not use the right outer scope. Please pass the transclude function as a\n *   `parentBoundTranscludeFn` to the link function instead.\n * </div>\n *\n * @param {number} maxPriority only apply directives lower than given priority (Only effects the\n *                 root element(s), not their children)\n * @returns {function(scope, cloneAttachFn=, options=)} a link function which is used to bind template\n * (a DOM element/tree) to a scope. Where:\n *\n *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n *  `template` and call the `cloneAttachFn` function allowing the caller to attach the\n *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n *  called as: <br/> `cloneAttachFn(clonedElement, scope)` where:\n *\n *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\n *      * `scope` - is the current scope with which the linking function is working with.\n *\n *  * `options` - An optional object hash with linking options. If `options` is provided, then the following\n *  keys may be used to control linking behavior:\n *\n *      * `parentBoundTranscludeFn` - the transclude function made available to\n *        directives; if given, it will be passed through to the link functions of\n *        directives found in `element` during compilation.\n *      * `transcludeControllers` - an object hash with keys that map controller names\n *        to a hash with the key `instance`, which maps to the controller instance;\n *        if given, it will make the controllers available to directives on the compileNode:\n *        ```\n *        {\n *          parent: {\n *            instance: parentControllerInstance\n *          }\n *        }\n *        ```\n *      * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add\n *        the cloned elements; only needed for transcludes that are allowed to contain non html\n *        elements (e.g. SVG elements). See also the directive.controller property.\n *\n * Calling the linking function returns the element of the template. It is either the original\n * element passed in, or the clone of the element if the `cloneAttachFn` is provided.\n *\n * After linking the view is not updated until after a call to $digest which typically is done by\n * Angular automatically.\n *\n * If you need access to the bound view, there are two ways to do it:\n *\n * - If you are not asking the linking function to clone the template, create the DOM element(s)\n *   before you send them to the compiler and keep this reference around.\n *   ```js\n *     var element = $compile('<p>{{total}}</p>')(scope);\n *   ```\n *\n * - if on the other hand, you need the element to be cloned, the view reference from the original\n *   example would not point to the clone, but rather to the original template that was cloned. In\n *   this case, you can access the clone via the cloneAttachFn:\n *   ```js\n *     var templateElement = angular.element('<p>{{total}}</p>'),\n *         scope = ....;\n *\n *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {\n *       //attach the clone to DOM document at the right place\n *     });\n *\n *     //now we have reference to the cloned DOM via `clonedElement`\n *   ```\n *\n *\n * For information on how the compiler works, see the\n * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\n *\n * @knownIssue\n *\n * ### Double Compilation\n *\n   Double compilation occurs when an already compiled part of the DOM gets\n   compiled again. This is an undesired effect and can lead to misbehaving directives, performance issues,\n   and memory leaks. Refer to the Compiler Guide {@link guide/compiler#double-compilation-and-how-to-avoid-it\n   section on double compilation} for an in-depth explanation and ways to avoid it.\n *\n */\n\nvar $compileMinErr = minErr('$compile');\n\nfunction UNINITIALIZED_VALUE() {}\nvar _UNINITIALIZED_VALUE = new UNINITIALIZED_VALUE();\n\n/**\n * @ngdoc provider\n * @name $compileProvider\n *\n * @description\n */\n$CompileProvider.$inject = ['$provide', '$$sanitizeUriProvider'];\n/** @this */\nfunction $CompileProvider($provide, $$sanitizeUriProvider) {\n  var hasDirectives = {},\n      Suffix = 'Directive',\n      COMMENT_DIRECTIVE_REGEXP = /^\\s*directive:\\s*([\\w-]+)\\s+(.*)$/,\n      CLASS_DIRECTIVE_REGEXP = /(([\\w-]+)(?::([^;]+))?;?)/,\n      ALL_OR_NOTHING_ATTRS = makeMap('ngSrc,ngSrcset,src,srcset'),\n      REQUIRE_PREFIX_REGEXP = /^(?:(\\^\\^?)?(\\?)?(\\^\\^?)?)?/;\n\n  // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes\n  // The assumption is that future DOM event attribute names will begin with\n  // 'on' and be composed of only English letters.\n  var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;\n  var bindingCache = createMap();\n\n  function parseIsolateBindings(scope, directiveName, isController) {\n    var LOCAL_REGEXP = /^\\s*([@&<]|=(\\*?))(\\??)\\s*([\\w$]*)\\s*$/;\n\n    var bindings = createMap();\n\n    forEach(scope, function(definition, scopeName) {\n      if (definition in bindingCache) {\n        bindings[scopeName] = bindingCache[definition];\n        return;\n      }\n      var match = definition.match(LOCAL_REGEXP);\n\n      if (!match) {\n        throw $compileMinErr('iscp',\n            'Invalid {3} for directive \\'{0}\\'.' +\n            ' Definition: {... {1}: \\'{2}\\' ...}',\n            directiveName, scopeName, definition,\n            (isController ? 'controller bindings definition' :\n            'isolate scope definition'));\n      }\n\n      bindings[scopeName] = {\n        mode: match[1][0],\n        collection: match[2] === '*',\n        optional: match[3] === '?',\n        attrName: match[4] || scopeName\n      };\n      if (match[4]) {\n        bindingCache[definition] = bindings[scopeName];\n      }\n    });\n\n    return bindings;\n  }\n\n  function parseDirectiveBindings(directive, directiveName) {\n    var bindings = {\n      isolateScope: null,\n      bindToController: null\n    };\n    if (isObject(directive.scope)) {\n      if (directive.bindToController === true) {\n        bindings.bindToController = parseIsolateBindings(directive.scope,\n                                                         directiveName, true);\n        bindings.isolateScope = {};\n      } else {\n        bindings.isolateScope = parseIsolateBindings(directive.scope,\n                                                     directiveName, false);\n      }\n    }\n    if (isObject(directive.bindToController)) {\n      bindings.bindToController =\n          parseIsolateBindings(directive.bindToController, directiveName, true);\n    }\n    if (bindings.bindToController && !directive.controller) {\n      // There is no controller\n      throw $compileMinErr('noctrl',\n            'Cannot bind to controller without directive \\'{0}\\'s controller.',\n            directiveName);\n    }\n    return bindings;\n  }\n\n  function assertValidDirectiveName(name) {\n    var letter = name.charAt(0);\n    if (!letter || letter !== lowercase(letter)) {\n      throw $compileMinErr('baddir', 'Directive/Component name \\'{0}\\' is invalid. The first character must be a lowercase letter', name);\n    }\n    if (name !== name.trim()) {\n      throw $compileMinErr('baddir',\n            'Directive/Component name \\'{0}\\' is invalid. The name should not contain leading or trailing whitespaces',\n            name);\n    }\n  }\n\n  function getDirectiveRequire(directive) {\n    var require = directive.require || (directive.controller && directive.name);\n\n    if (!isArray(require) && isObject(require)) {\n      forEach(require, function(value, key) {\n        var match = value.match(REQUIRE_PREFIX_REGEXP);\n        var name = value.substring(match[0].length);\n        if (!name) require[key] = match[0] + key;\n      });\n    }\n\n    return require;\n  }\n\n  function getDirectiveRestrict(restrict, name) {\n    if (restrict && !(isString(restrict) && /[EACM]/.test(restrict))) {\n      throw $compileMinErr('badrestrict',\n          'Restrict property \\'{0}\\' of directive \\'{1}\\' is invalid',\n          restrict,\n          name);\n    }\n\n    return restrict || 'EA';\n  }\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#directive\n   * @kind function\n   *\n   * @description\n   * Register a new directive with the compiler.\n   *\n   * @param {string|Object} name Name of the directive in camel-case (i.e. <code>ngBind</code> which\n   *    will match as <code>ng-bind</code>), or an object map of directives where the keys are the\n   *    names and the values are the factories.\n   * @param {Function|Array} directiveFactory An injectable directive factory function. See the\n   *    {@link guide/directive directive guide} and the {@link $compile compile API} for more info.\n   * @returns {ng.$compileProvider} Self for chaining.\n   */\n  this.directive = function registerDirective(name, directiveFactory) {\n    assertArg(name, 'name');\n    assertNotHasOwnProperty(name, 'directive');\n    if (isString(name)) {\n      assertValidDirectiveName(name);\n      assertArg(directiveFactory, 'directiveFactory');\n      if (!hasDirectives.hasOwnProperty(name)) {\n        hasDirectives[name] = [];\n        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\n          function($injector, $exceptionHandler) {\n            var directives = [];\n            forEach(hasDirectives[name], function(directiveFactory, index) {\n              try {\n                var directive = $injector.invoke(directiveFactory);\n                if (isFunction(directive)) {\n                  directive = { compile: valueFn(directive) };\n                } else if (!directive.compile && directive.link) {\n                  directive.compile = valueFn(directive.link);\n                }\n                directive.priority = directive.priority || 0;\n                directive.index = index;\n                directive.name = directive.name || name;\n                directive.require = getDirectiveRequire(directive);\n                directive.restrict = getDirectiveRestrict(directive.restrict, name);\n                directive.$$moduleName = directiveFactory.$$moduleName;\n                directives.push(directive);\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            });\n            return directives;\n          }]);\n      }\n      hasDirectives[name].push(directiveFactory);\n    } else {\n      forEach(name, reverseParams(registerDirective));\n    }\n    return this;\n  };\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#component\n   * @module ng\n   * @param {string} name Name of the component in camelCase (i.e. `myComp` which will match `<my-comp>`)\n   * @param {Object} options Component definition object (a simplified\n   *    {@link ng.$compile#directive-definition-object directive definition object}),\n   *    with the following properties (all optional):\n   *\n   *    - `controller` – `{(string|function()=}` – controller constructor function that should be\n   *      associated with newly created scope or the name of a {@link ng.$compile#-controller-\n   *      registered controller} if passed as a string. An empty `noop` function by default.\n   *    - `controllerAs` – `{string=}` – identifier name for to reference the controller in the component's scope.\n   *      If present, the controller will be published to scope under the `controllerAs` name.\n   *      If not present, this will default to be `$ctrl`.\n   *    - `template` – `{string=|function()=}` – html template as a string or a function that\n   *      returns an html template as a string which should be used as the contents of this component.\n   *      Empty string by default.\n   *\n   *      If `template` is a function, then it is {@link auto.$injector#invoke injected} with\n   *      the following locals:\n   *\n   *      - `$element` - Current element\n   *      - `$attrs` - Current attributes object for the element\n   *\n   *    - `templateUrl` – `{string=|function()=}` – path or function that returns a path to an html\n   *      template that should be used  as the contents of this component.\n   *\n   *      If `templateUrl` is a function, then it is {@link auto.$injector#invoke injected} with\n   *      the following locals:\n   *\n   *      - `$element` - Current element\n   *      - `$attrs` - Current attributes object for the element\n   *\n   *    - `bindings` – `{object=}` – defines bindings between DOM attributes and component properties.\n   *      Component properties are always bound to the component controller and not to the scope.\n   *      See {@link ng.$compile#-bindtocontroller- `bindToController`}.\n   *    - `transclude` – `{boolean=}` – whether {@link $compile#transclusion content transclusion} is enabled.\n   *      Disabled by default.\n   *    - `require` - `{Object<string, string>=}` - requires the controllers of other directives and binds them to\n   *      this component's controller. The object keys specify the property names under which the required\n   *      controllers (object values) will be bound. See {@link ng.$compile#-require- `require`}.\n   *    - `$...` – additional properties to attach to the directive factory function and the controller\n   *      constructor function. (This is used by the component router to annotate)\n   *\n   * @returns {ng.$compileProvider} the compile provider itself, for chaining of function calls.\n   * @description\n   * Register a **component definition** with the compiler. This is a shorthand for registering a special\n   * type of directive, which represents a self-contained UI component in your application. Such components\n   * are always isolated (i.e. `scope: {}`) and are always restricted to elements (i.e. `restrict: 'E'`).\n   *\n   * Component definitions are very simple and do not require as much configuration as defining general\n   * directives. Component definitions usually consist only of a template and a controller backing it.\n   *\n   * In order to make the definition easier, components enforce best practices like use of `controllerAs`,\n   * `bindToController`. They always have **isolate scope** and are restricted to elements.\n   *\n   * Here are a few examples of how you would usually define components:\n   *\n   * ```js\n   *   var myMod = angular.module(...);\n   *   myMod.component('myComp', {\n   *     template: '<div>My name is {{$ctrl.name}}</div>',\n   *     controller: function() {\n   *       this.name = 'shahar';\n   *     }\n   *   });\n   *\n   *   myMod.component('myComp', {\n   *     template: '<div>My name is {{$ctrl.name}}</div>',\n   *     bindings: {name: '@'}\n   *   });\n   *\n   *   myMod.component('myComp', {\n   *     templateUrl: 'views/my-comp.html',\n   *     controller: 'MyCtrl',\n   *     controllerAs: 'ctrl',\n   *     bindings: {name: '@'}\n   *   });\n   *\n   * ```\n   * For more examples, and an in-depth guide, see the {@link guide/component component guide}.\n   *\n   * <br />\n   * See also {@link ng.$compileProvider#directive $compileProvider.directive()}.\n   */\n  this.component = function registerComponent(name, options) {\n    var controller = options.controller || function() {};\n\n    function factory($injector) {\n      function makeInjectable(fn) {\n        if (isFunction(fn) || isArray(fn)) {\n          return /** @this */ function(tElement, tAttrs) {\n            return $injector.invoke(fn, this, {$element: tElement, $attrs: tAttrs});\n          };\n        } else {\n          return fn;\n        }\n      }\n\n      var template = (!options.template && !options.templateUrl ? '' : options.template);\n      var ddo = {\n        controller: controller,\n        controllerAs: identifierForController(options.controller) || options.controllerAs || '$ctrl',\n        template: makeInjectable(template),\n        templateUrl: makeInjectable(options.templateUrl),\n        transclude: options.transclude,\n        scope: {},\n        bindToController: options.bindings || {},\n        restrict: 'E',\n        require: options.require\n      };\n\n      // Copy annotations (starting with $) over to the DDO\n      forEach(options, function(val, key) {\n        if (key.charAt(0) === '$') ddo[key] = val;\n      });\n\n      return ddo;\n    }\n\n    // TODO(pete) remove the following `forEach` before we release 1.6.0\n    // The component-router@0.2.0 looks for the annotations on the controller constructor\n    // Nothing in Angular looks for annotations on the factory function but we can't remove\n    // it from 1.5.x yet.\n\n    // Copy any annotation properties (starting with $) over to the factory and controller constructor functions\n    // These could be used by libraries such as the new component router\n    forEach(options, function(val, key) {\n      if (key.charAt(0) === '$') {\n        factory[key] = val;\n        // Don't try to copy over annotations to named controller\n        if (isFunction(controller)) controller[key] = val;\n      }\n    });\n\n    factory.$inject = ['$injector'];\n\n    return this.directive(name, factory);\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#aHrefSanitizationWhitelist\n   * @kind function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at preventing XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.aHrefSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      $$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);\n      return this;\n    } else {\n      return $$sanitizeUriProvider.aHrefSanitizationWhitelist();\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#imgSrcSanitizationWhitelist\n   * @kind function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during img[src] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.imgSrcSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      $$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);\n      return this;\n    } else {\n      return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name  $compileProvider#debugInfoEnabled\n   *\n   * @param {boolean=} enabled update the debugInfoEnabled state if provided, otherwise just return the\n   * current debugInfoEnabled state\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   *\n   * @kind function\n   *\n   * @description\n   * Call this method to enable/disable various debug runtime information in the compiler such as adding\n   * binding information and a reference to the current scope on to DOM elements.\n   * If enabled, the compiler will add the following to DOM elements that have been bound to the scope\n   * * `ng-binding` CSS class\n   * * `$binding` data property containing an array of the binding expressions\n   *\n   * You may want to disable this in production for a significant performance boost. See\n   * {@link guide/production#disabling-debug-data Disabling Debug Data} for more.\n   *\n   * The default value is true.\n   */\n  var debugInfoEnabled = true;\n  this.debugInfoEnabled = function(enabled) {\n    if (isDefined(enabled)) {\n      debugInfoEnabled = enabled;\n      return this;\n    }\n    return debugInfoEnabled;\n  };\n\n  /**\n   * @ngdoc method\n   * @name  $compileProvider#preAssignBindingsEnabled\n   *\n   * @param {boolean=} enabled update the preAssignBindingsEnabled state if provided, otherwise just return the\n   * current preAssignBindingsEnabled state\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   *\n   * @kind function\n   *\n   * @description\n   * Call this method to enable/disable whether directive controllers are assigned bindings before\n   * calling the controller's constructor.\n   * If enabled (true), the compiler assigns the value of each of the bindings to the\n   * properties of the controller object before the constructor of this object is called.\n   *\n   * If disabled (false), the compiler calls the constructor first before assigning bindings.\n   *\n   * The default value is true in Angular 1.5.x but will switch to false in Angular 1.6.x.\n   */\n  var preAssignBindingsEnabled = false;\n  this.preAssignBindingsEnabled = function(enabled) {\n    if (isDefined(enabled)) {\n      preAssignBindingsEnabled = enabled;\n      return this;\n    }\n    return preAssignBindingsEnabled;\n  };\n\n\n  var TTL = 10;\n  /**\n   * @ngdoc method\n   * @name $compileProvider#onChangesTtl\n   * @description\n   *\n   * Sets the number of times `$onChanges` hooks can trigger new changes before giving up and\n   * assuming that the model is unstable.\n   *\n   * The current default is 10 iterations.\n   *\n   * In complex applications it's possible that dependencies between `$onChanges` hooks and bindings will result\n   * in several iterations of calls to these hooks. However if an application needs more than the default 10\n   * iterations to stabilize then you should investigate what is causing the model to continuously change during\n   * the `$onChanges` hook execution.\n   *\n   * Increasing the TTL could have performance implications, so you should not change it without proper justification.\n   *\n   * @param {number} limit The number of `$onChanges` hook iterations.\n   * @returns {number|object} the current limit (or `this` if called as a setter for chaining)\n   */\n  this.onChangesTtl = function(value) {\n    if (arguments.length) {\n      TTL = value;\n      return this;\n    }\n    return TTL;\n  };\n\n  var commentDirectivesEnabledConfig = true;\n  /**\n   * @ngdoc method\n   * @name $compileProvider#commentDirectivesEnabled\n   * @description\n   *\n   * It indicates to the compiler\n   * whether or not directives on comments should be compiled.\n   * Defaults to `true`.\n   *\n   * Calling this function with false disables the compilation of directives\n   * on comments for the whole application.\n   * This results in a compilation performance gain,\n   * as the compiler doesn't have to check comments when looking for directives.\n   * This should however only be used if you are sure that no comment directives are used in\n   * the application (including any 3rd party directives).\n   *\n   * @param {boolean} enabled `false` if the compiler may ignore directives on comments\n   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)\n   */\n  this.commentDirectivesEnabled = function(value) {\n    if (arguments.length) {\n      commentDirectivesEnabledConfig = value;\n      return this;\n    }\n    return commentDirectivesEnabledConfig;\n  };\n\n\n  var cssClassDirectivesEnabledConfig = true;\n  /**\n   * @ngdoc method\n   * @name $compileProvider#cssClassDirectivesEnabled\n   * @description\n   *\n   * It indicates to the compiler\n   * whether or not directives on element classes should be compiled.\n   * Defaults to `true`.\n   *\n   * Calling this function with false disables the compilation of directives\n   * on element classes for the whole application.\n   * This results in a compilation performance gain,\n   * as the compiler doesn't have to check element classes when looking for directives.\n   * This should however only be used if you are sure that no class directives are used in\n   * the application (including any 3rd party directives).\n   *\n   * @param {boolean} enabled `false` if the compiler may ignore directives on element classes\n   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)\n   */\n  this.cssClassDirectivesEnabled = function(value) {\n    if (arguments.length) {\n      cssClassDirectivesEnabledConfig = value;\n      return this;\n    }\n    return cssClassDirectivesEnabledConfig;\n  };\n\n  this.$get = [\n            '$injector', '$interpolate', '$exceptionHandler', '$templateRequest', '$parse',\n            '$controller', '$rootScope', '$sce', '$animate', '$$sanitizeUri',\n    function($injector,   $interpolate,   $exceptionHandler,   $templateRequest,   $parse,\n             $controller,   $rootScope,   $sce,   $animate,   $$sanitizeUri) {\n\n    var SIMPLE_ATTR_NAME = /^\\w/;\n    var specialAttrHolder = window.document.createElement('div');\n\n\n    var commentDirectivesEnabled = commentDirectivesEnabledConfig;\n    var cssClassDirectivesEnabled = cssClassDirectivesEnabledConfig;\n\n\n    var onChangesTtl = TTL;\n    // The onChanges hooks should all be run together in a single digest\n    // When changes occur, the call to trigger their hooks will be added to this queue\n    var onChangesQueue;\n\n    // This function is called in a $$postDigest to trigger all the onChanges hooks in a single digest\n    function flushOnChangesQueue() {\n      try {\n        if (!(--onChangesTtl)) {\n          // We have hit the TTL limit so reset everything\n          onChangesQueue = undefined;\n          throw $compileMinErr('infchng', '{0} $onChanges() iterations reached. Aborting!\\n', TTL);\n        }\n        // We must run this hook in an apply since the $$postDigest runs outside apply\n        $rootScope.$apply(function() {\n          var errors = [];\n          for (var i = 0, ii = onChangesQueue.length; i < ii; ++i) {\n            try {\n              onChangesQueue[i]();\n            } catch (e) {\n              errors.push(e);\n            }\n          }\n          // Reset the queue to trigger a new schedule next time there is a change\n          onChangesQueue = undefined;\n          if (errors.length) {\n            throw errors;\n          }\n        });\n      } finally {\n        onChangesTtl++;\n      }\n    }\n\n\n    function Attributes(element, attributesToCopy) {\n      if (attributesToCopy) {\n        var keys = Object.keys(attributesToCopy);\n        var i, l, key;\n\n        for (i = 0, l = keys.length; i < l; i++) {\n          key = keys[i];\n          this[key] = attributesToCopy[key];\n        }\n      } else {\n        this.$attr = {};\n      }\n\n      this.$$element = element;\n    }\n\n    Attributes.prototype = {\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$normalize\n       * @kind function\n       *\n       * @description\n       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n       * `data-`) to its normalized, camelCase form.\n       *\n       * Also there is special case for Moz prefix starting with upper case letter.\n       *\n       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\n       *\n       * @param {string} name Name to normalize\n       */\n      $normalize: directiveNormalize,\n\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$addClass\n       * @kind function\n       *\n       * @description\n       * Adds the CSS class value specified by the classVal parameter to the element. If animations\n       * are enabled then an animation will be triggered for the class addition.\n       *\n       * @param {string} classVal The className value that will be added to the element\n       */\n      $addClass: function(classVal) {\n        if (classVal && classVal.length > 0) {\n          $animate.addClass(this.$$element, classVal);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$removeClass\n       * @kind function\n       *\n       * @description\n       * Removes the CSS class value specified by the classVal parameter from the element. If\n       * animations are enabled then an animation will be triggered for the class removal.\n       *\n       * @param {string} classVal The className value that will be removed from the element\n       */\n      $removeClass: function(classVal) {\n        if (classVal && classVal.length > 0) {\n          $animate.removeClass(this.$$element, classVal);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$updateClass\n       * @kind function\n       *\n       * @description\n       * Adds and removes the appropriate CSS class values to the element based on the difference\n       * between the new and old CSS class values (specified as newClasses and oldClasses).\n       *\n       * @param {string} newClasses The current CSS className value\n       * @param {string} oldClasses The former CSS className value\n       */\n      $updateClass: function(newClasses, oldClasses) {\n        var toAdd = tokenDifference(newClasses, oldClasses);\n        if (toAdd && toAdd.length) {\n          $animate.addClass(this.$$element, toAdd);\n        }\n\n        var toRemove = tokenDifference(oldClasses, newClasses);\n        if (toRemove && toRemove.length) {\n          $animate.removeClass(this.$$element, toRemove);\n        }\n      },\n\n      /**\n       * Set a normalized attribute on the element in a way such that all directives\n       * can share the attribute. This function properly handles boolean attributes.\n       * @param {string} key Normalized key. (ie ngAttribute)\n       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\n       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\n       *     Defaults to true.\n       * @param {string=} attrName Optional none normalized name. Defaults to key.\n       */\n      $set: function(key, value, writeAttr, attrName) {\n        // TODO: decide whether or not to throw an error if \"class\"\n        //is set through this function since it may cause $updateClass to\n        //become unstable.\n\n        var node = this.$$element[0],\n            booleanKey = getBooleanAttrName(node, key),\n            aliasedKey = getAliasedAttrName(key),\n            observer = key,\n            nodeName;\n\n        if (booleanKey) {\n          this.$$element.prop(key, value);\n          attrName = booleanKey;\n        } else if (aliasedKey) {\n          this[aliasedKey] = value;\n          observer = aliasedKey;\n        }\n\n        this[key] = value;\n\n        // translate normalized key to actual key\n        if (attrName) {\n          this.$attr[key] = attrName;\n        } else {\n          attrName = this.$attr[key];\n          if (!attrName) {\n            this.$attr[key] = attrName = snake_case(key, '-');\n          }\n        }\n\n        nodeName = nodeName_(this.$$element);\n\n        if ((nodeName === 'a' && (key === 'href' || key === 'xlinkHref')) ||\n            (nodeName === 'img' && key === 'src')) {\n          // sanitize a[href] and img[src] values\n          this[key] = value = $$sanitizeUri(value, key === 'src');\n        } else if (nodeName === 'img' && key === 'srcset' && isDefined(value)) {\n          // sanitize img[srcset] values\n          var result = '';\n\n          // first check if there are spaces because it's not the same pattern\n          var trimmedSrcset = trim(value);\n          //                (   999x   ,|   999w   ,|   ,|,   )\n          var srcPattern = /(\\s+\\d+x\\s*,|\\s+\\d+w\\s*,|\\s+,|,\\s+)/;\n          var pattern = /\\s/.test(trimmedSrcset) ? srcPattern : /(,)/;\n\n          // split srcset into tuple of uri and descriptor except for the last item\n          var rawUris = trimmedSrcset.split(pattern);\n\n          // for each tuples\n          var nbrUrisWith2parts = Math.floor(rawUris.length / 2);\n          for (var i = 0; i < nbrUrisWith2parts; i++) {\n            var innerIdx = i * 2;\n            // sanitize the uri\n            result += $$sanitizeUri(trim(rawUris[innerIdx]), true);\n            // add the descriptor\n            result += (' ' + trim(rawUris[innerIdx + 1]));\n          }\n\n          // split the last item into uri and descriptor\n          var lastTuple = trim(rawUris[i * 2]).split(/\\s/);\n\n          // sanitize the last uri\n          result += $$sanitizeUri(trim(lastTuple[0]), true);\n\n          // and add the last descriptor if any\n          if (lastTuple.length === 2) {\n            result += (' ' + trim(lastTuple[1]));\n          }\n          this[key] = value = result;\n        }\n\n        if (writeAttr !== false) {\n          if (value === null || isUndefined(value)) {\n            this.$$element.removeAttr(attrName);\n          } else {\n            if (SIMPLE_ATTR_NAME.test(attrName)) {\n              this.$$element.attr(attrName, value);\n            } else {\n              setSpecialAttr(this.$$element[0], attrName, value);\n            }\n          }\n        }\n\n        // fire observers\n        var $$observers = this.$$observers;\n        if ($$observers) {\n          forEach($$observers[observer], function(fn) {\n            try {\n              fn(value);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          });\n        }\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$observe\n       * @kind function\n       *\n       * @description\n       * Observes an interpolated attribute.\n       *\n       * The observer function will be invoked once during the next `$digest` following\n       * compilation. The observer is then invoked whenever the interpolated value\n       * changes.\n       *\n       * @param {string} key Normalized key. (ie ngAttribute) .\n       * @param {function(interpolatedValue)} fn Function that will be called whenever\n                the interpolated value of the attribute changes.\n       *        See the {@link guide/interpolation#how-text-and-attribute-bindings-work Interpolation\n       *        guide} for more info.\n       * @returns {function()} Returns a deregistration function for this observer.\n       */\n      $observe: function(key, fn) {\n        var attrs = this,\n            $$observers = (attrs.$$observers || (attrs.$$observers = createMap())),\n            listeners = ($$observers[key] || ($$observers[key] = []));\n\n        listeners.push(fn);\n        $rootScope.$evalAsync(function() {\n          if (!listeners.$$inter && attrs.hasOwnProperty(key) && !isUndefined(attrs[key])) {\n            // no one registered attribute interpolation function, so lets call it manually\n            fn(attrs[key]);\n          }\n        });\n\n        return function() {\n          arrayRemove(listeners, fn);\n        };\n      }\n    };\n\n    function setSpecialAttr(element, attrName, value) {\n      // Attributes names that do not start with letters (such as `(click)`) cannot be set using `setAttribute`\n      // so we have to jump through some hoops to get such an attribute\n      // https://github.com/angular/angular.js/pull/13318\n      specialAttrHolder.innerHTML = '<span ' + attrName + '>';\n      var attributes = specialAttrHolder.firstChild.attributes;\n      var attribute = attributes[0];\n      // We have to remove the attribute from its container element before we can add it to the destination element\n      attributes.removeNamedItem(attribute.name);\n      attribute.value = value;\n      element.attributes.setNamedItem(attribute);\n    }\n\n    function safeAddClass($element, className) {\n      try {\n        $element.addClass(className);\n      } catch (e) {\n        // ignore, since it means that we are trying to set class on\n        // SVG element, where class name is read-only.\n      }\n    }\n\n\n    var startSymbol = $interpolate.startSymbol(),\n        endSymbol = $interpolate.endSymbol(),\n        denormalizeTemplate = (startSymbol === '{{' && endSymbol  === '}}')\n            ? identity\n            : function denormalizeTemplate(template) {\n              return template.replace(/\\{\\{/g, startSymbol).replace(/}}/g, endSymbol);\n        },\n        NG_ATTR_BINDING = /^ngAttr[A-Z]/;\n    var MULTI_ELEMENT_DIR_RE = /^(.+)Start$/;\n\n    compile.$$addBindingInfo = debugInfoEnabled ? function $$addBindingInfo($element, binding) {\n      var bindings = $element.data('$binding') || [];\n\n      if (isArray(binding)) {\n        bindings = bindings.concat(binding);\n      } else {\n        bindings.push(binding);\n      }\n\n      $element.data('$binding', bindings);\n    } : noop;\n\n    compile.$$addBindingClass = debugInfoEnabled ? function $$addBindingClass($element) {\n      safeAddClass($element, 'ng-binding');\n    } : noop;\n\n    compile.$$addScopeInfo = debugInfoEnabled ? function $$addScopeInfo($element, scope, isolated, noTemplate) {\n      var dataName = isolated ? (noTemplate ? '$isolateScopeNoTemplate' : '$isolateScope') : '$scope';\n      $element.data(dataName, scope);\n    } : noop;\n\n    compile.$$addScopeClass = debugInfoEnabled ? function $$addScopeClass($element, isolated) {\n      safeAddClass($element, isolated ? 'ng-isolate-scope' : 'ng-scope');\n    } : noop;\n\n    compile.$$createComment = function(directiveName, comment) {\n      var content = '';\n      if (debugInfoEnabled) {\n        content = ' ' + (directiveName || '') + ': ';\n        if (comment) content += comment + ' ';\n      }\n      return window.document.createComment(content);\n    };\n\n    return compile;\n\n    //================================\n\n    function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective,\n                        previousCompileContext) {\n      if (!($compileNodes instanceof jqLite)) {\n        // jquery always rewraps, whereas we need to preserve the original selector so that we can\n        // modify it.\n        $compileNodes = jqLite($compileNodes);\n      }\n      var compositeLinkFn =\n              compileNodes($compileNodes, transcludeFn, $compileNodes,\n                           maxPriority, ignoreDirective, previousCompileContext);\n      compile.$$addScopeClass($compileNodes);\n      var namespace = null;\n      return function publicLinkFn(scope, cloneConnectFn, options) {\n        if (!$compileNodes) {\n          throw $compileMinErr('multilink', 'This element has already been linked.');\n        }\n        assertArg(scope, 'scope');\n\n        if (previousCompileContext && previousCompileContext.needsNewScope) {\n          // A parent directive did a replace and a directive on this element asked\n          // for transclusion, which caused us to lose a layer of element on which\n          // we could hold the new transclusion scope, so we will create it manually\n          // here.\n          scope = scope.$parent.$new();\n        }\n\n        options = options || {};\n        var parentBoundTranscludeFn = options.parentBoundTranscludeFn,\n          transcludeControllers = options.transcludeControllers,\n          futureParentElement = options.futureParentElement;\n\n        // When `parentBoundTranscludeFn` is passed, it is a\n        // `controllersBoundTransclude` function (it was previously passed\n        // as `transclude` to directive.link) so we must unwrap it to get\n        // its `boundTranscludeFn`\n        if (parentBoundTranscludeFn && parentBoundTranscludeFn.$$boundTransclude) {\n          parentBoundTranscludeFn = parentBoundTranscludeFn.$$boundTransclude;\n        }\n\n        if (!namespace) {\n          namespace = detectNamespaceForChildElements(futureParentElement);\n        }\n        var $linkNode;\n        if (namespace !== 'html') {\n          // When using a directive with replace:true and templateUrl the $compileNodes\n          // (or a child element inside of them)\n          // might change, so we need to recreate the namespace adapted compileNodes\n          // for call to the link function.\n          // Note: This will already clone the nodes...\n          $linkNode = jqLite(\n            wrapTemplate(namespace, jqLite('<div>').append($compileNodes).html())\n          );\n        } else if (cloneConnectFn) {\n          // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\n          // and sometimes changes the structure of the DOM.\n          $linkNode = JQLitePrototype.clone.call($compileNodes);\n        } else {\n          $linkNode = $compileNodes;\n        }\n\n        if (transcludeControllers) {\n          for (var controllerName in transcludeControllers) {\n            $linkNode.data('$' + controllerName + 'Controller', transcludeControllers[controllerName].instance);\n          }\n        }\n\n        compile.$$addScopeInfo($linkNode, scope);\n\n        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\n        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);\n\n        if (!cloneConnectFn) {\n          $compileNodes = compositeLinkFn = null;\n        }\n        return $linkNode;\n      };\n    }\n\n    function detectNamespaceForChildElements(parentElement) {\n      // TODO: Make this detect MathML as well...\n      var node = parentElement && parentElement[0];\n      if (!node) {\n        return 'html';\n      } else {\n        return nodeName_(node) !== 'foreignobject' && toString.call(node).match(/SVG/) ? 'svg' : 'html';\n      }\n    }\n\n    /**\n     * Compile function matches each node in nodeList against the directives. Once all directives\n     * for a particular node are collected their compile functions are executed. The compile\n     * functions return values - the linking functions - are combined into a composite linking\n     * function, which is the a linking function for the node.\n     *\n     * @param {NodeList} nodeList an array of nodes or NodeList to compile\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then\n     *        the rootElement must be set the jqLite collection of the compile root. This is\n     *        needed so that the jqLite collection items can be replaced with widgets.\n     * @param {number=} maxPriority Max directive priority.\n     * @returns {Function} A composite linking function of all of the matched directives or null.\n     */\n    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective,\n                            previousCompileContext) {\n      var linkFns = [],\n          // `nodeList` can be either an element's `.childNodes` (live NodeList)\n          // or a jqLite/jQuery collection or an array\n          notLiveList = isArray(nodeList) || (nodeList instanceof jqLite),\n          attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound, nodeLinkFnFound;\n\n\n      for (var i = 0; i < nodeList.length; i++) {\n        attrs = new Attributes();\n\n        // Support: IE 11 only\n        // Workaround for #11781 and #14924\n        if (msie === 11) {\n          mergeConsecutiveTextNodes(nodeList, i, notLiveList);\n        }\n\n        // We must always refer to `nodeList[i]` hereafter,\n        // since the nodes can be replaced underneath us.\n        directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined,\n                                        ignoreDirective);\n\n        nodeLinkFn = (directives.length)\n            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement,\n                                      null, [], [], previousCompileContext)\n            : null;\n\n        if (nodeLinkFn && nodeLinkFn.scope) {\n          compile.$$addScopeClass(attrs.$$element);\n        }\n\n        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal ||\n                      !(childNodes = nodeList[i].childNodes) ||\n                      !childNodes.length)\n            ? null\n            : compileNodes(childNodes,\n                 nodeLinkFn ? (\n                  (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement)\n                     && nodeLinkFn.transclude) : transcludeFn);\n\n        if (nodeLinkFn || childLinkFn) {\n          linkFns.push(i, nodeLinkFn, childLinkFn);\n          linkFnFound = true;\n          nodeLinkFnFound = nodeLinkFnFound || nodeLinkFn;\n        }\n\n        //use the previous context only for the first element in the virtual group\n        previousCompileContext = null;\n      }\n\n      // return a linking function if we have found anything, null otherwise\n      return linkFnFound ? compositeLinkFn : null;\n\n      function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {\n        var nodeLinkFn, childLinkFn, node, childScope, i, ii, idx, childBoundTranscludeFn;\n        var stableNodeList;\n\n\n        if (nodeLinkFnFound) {\n          // copy nodeList so that if a nodeLinkFn removes or adds an element at this DOM level our\n          // offsets don't get screwed up\n          var nodeListLength = nodeList.length;\n          stableNodeList = new Array(nodeListLength);\n\n          // create a sparse array by only copying the elements which have a linkFn\n          for (i = 0; i < linkFns.length; i += 3) {\n            idx = linkFns[i];\n            stableNodeList[idx] = nodeList[idx];\n          }\n        } else {\n          stableNodeList = nodeList;\n        }\n\n        for (i = 0, ii = linkFns.length; i < ii;) {\n          node = stableNodeList[linkFns[i++]];\n          nodeLinkFn = linkFns[i++];\n          childLinkFn = linkFns[i++];\n\n          if (nodeLinkFn) {\n            if (nodeLinkFn.scope) {\n              childScope = scope.$new();\n              compile.$$addScopeInfo(jqLite(node), childScope);\n            } else {\n              childScope = scope;\n            }\n\n            if (nodeLinkFn.transcludeOnThisElement) {\n              childBoundTranscludeFn = createBoundTranscludeFn(\n                  scope, nodeLinkFn.transclude, parentBoundTranscludeFn);\n\n            } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {\n              childBoundTranscludeFn = parentBoundTranscludeFn;\n\n            } else if (!parentBoundTranscludeFn && transcludeFn) {\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);\n\n            } else {\n              childBoundTranscludeFn = null;\n            }\n\n            nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);\n\n          } else if (childLinkFn) {\n            childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);\n          }\n        }\n      }\n    }\n\n    function mergeConsecutiveTextNodes(nodeList, idx, notLiveList) {\n      var node = nodeList[idx];\n      var parent = node.parentNode;\n      var sibling;\n\n      if (node.nodeType !== NODE_TYPE_TEXT) {\n        return;\n      }\n\n      while (true) {\n        sibling = parent ? node.nextSibling : nodeList[idx + 1];\n        if (!sibling || sibling.nodeType !== NODE_TYPE_TEXT) {\n          break;\n        }\n\n        node.nodeValue = node.nodeValue + sibling.nodeValue;\n\n        if (sibling.parentNode) {\n          sibling.parentNode.removeChild(sibling);\n        }\n        if (notLiveList && sibling === nodeList[idx + 1]) {\n          nodeList.splice(idx + 1, 1);\n        }\n      }\n    }\n\n    function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {\n      function boundTranscludeFn(transcludedScope, cloneFn, controllers, futureParentElement, containingScope) {\n\n        if (!transcludedScope) {\n          transcludedScope = scope.$new(false, containingScope);\n          transcludedScope.$$transcluded = true;\n        }\n\n        return transcludeFn(transcludedScope, cloneFn, {\n          parentBoundTranscludeFn: previousBoundTranscludeFn,\n          transcludeControllers: controllers,\n          futureParentElement: futureParentElement\n        });\n      }\n\n      // We need  to attach the transclusion slots onto the `boundTranscludeFn`\n      // so that they are available inside the `controllersBoundTransclude` function\n      var boundSlots = boundTranscludeFn.$$slots = createMap();\n      for (var slotName in transcludeFn.$$slots) {\n        if (transcludeFn.$$slots[slotName]) {\n          boundSlots[slotName] = createBoundTranscludeFn(scope, transcludeFn.$$slots[slotName], previousBoundTranscludeFn);\n        } else {\n          boundSlots[slotName] = null;\n        }\n      }\n\n      return boundTranscludeFn;\n    }\n\n    /**\n     * Looks for directives on the given node and adds them to the directive collection which is\n     * sorted.\n     *\n     * @param node Node to search.\n     * @param directives An array to which the directives are added to. This array is sorted before\n     *        the function returns.\n     * @param attrs The shared attrs object which is used to populate the normalized attributes.\n     * @param {number=} maxPriority Max directive priority.\n     */\n    function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {\n      var nodeType = node.nodeType,\n          attrsMap = attrs.$attr,\n          match,\n          nodeName,\n          className;\n\n      switch (nodeType) {\n        case NODE_TYPE_ELEMENT: /* Element */\n\n          nodeName = nodeName_(node);\n\n          // use the node name: <directive>\n          addDirective(directives,\n              directiveNormalize(nodeName), 'E', maxPriority, ignoreDirective);\n\n          // iterate over the attributes\n          for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes,\n                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\n            var attrStartName = false;\n            var attrEndName = false;\n\n            attr = nAttrs[j];\n            name = attr.name;\n            value = attr.value;\n\n            // support ngAttr attribute binding\n            ngAttrName = directiveNormalize(name);\n            isNgAttr = NG_ATTR_BINDING.test(ngAttrName);\n            if (isNgAttr) {\n              name = name.replace(PREFIX_REGEXP, '')\n                .substr(8).replace(/_(.)/g, function(match, letter) {\n                  return letter.toUpperCase();\n                });\n            }\n\n            var multiElementMatch = ngAttrName.match(MULTI_ELEMENT_DIR_RE);\n            if (multiElementMatch && directiveIsMultiElement(multiElementMatch[1])) {\n              attrStartName = name;\n              attrEndName = name.substr(0, name.length - 5) + 'end';\n              name = name.substr(0, name.length - 6);\n            }\n\n            nName = directiveNormalize(name.toLowerCase());\n            attrsMap[nName] = name;\n            if (isNgAttr || !attrs.hasOwnProperty(nName)) {\n                attrs[nName] = value;\n                if (getBooleanAttrName(node, nName)) {\n                  attrs[nName] = true; // presence means true\n                }\n            }\n            addAttrInterpolateDirective(node, directives, value, nName, isNgAttr);\n            addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName,\n                          attrEndName);\n          }\n\n          if (nodeName === 'input' && node.getAttribute('type') === 'hidden') {\n            // Hidden input elements can have strange behaviour when navigating back to the page\n            // This tells the browser not to try to cache and reinstate previous values\n            node.setAttribute('autocomplete', 'off');\n          }\n\n          // use class as directive\n          if (!cssClassDirectivesEnabled) break;\n          className = node.className;\n          if (isObject(className)) {\n              // Maybe SVGAnimatedString\n              className = className.animVal;\n          }\n          if (isString(className) && className !== '') {\n            while ((match = CLASS_DIRECTIVE_REGEXP.exec(className))) {\n              nName = directiveNormalize(match[2]);\n              if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {\n                attrs[nName] = trim(match[3]);\n              }\n              className = className.substr(match.index + match[0].length);\n            }\n          }\n          break;\n        case NODE_TYPE_TEXT: /* Text Node */\n          addTextInterpolateDirective(directives, node.nodeValue);\n          break;\n        case NODE_TYPE_COMMENT: /* Comment */\n          if (!commentDirectivesEnabled) break;\n          collectCommentDirectives(node, directives, attrs, maxPriority, ignoreDirective);\n          break;\n      }\n\n      directives.sort(byPriority);\n      return directives;\n    }\n\n    function collectCommentDirectives(node, directives, attrs, maxPriority, ignoreDirective) {\n      // function created because of performance, try/catch disables\n      // the optimization of the whole function #14848\n      try {\n        var match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\n        if (match) {\n          var nName = directiveNormalize(match[1]);\n          if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {\n            attrs[nName] = trim(match[2]);\n          }\n        }\n      } catch (e) {\n        // turns out that under some circumstances IE9 throws errors when one attempts to read\n        // comment's node value.\n        // Just ignore it and continue. (Can't seem to reproduce in test case.)\n      }\n    }\n\n    /**\n     * Given a node with a directive-start it collects all of the siblings until it finds\n     * directive-end.\n     * @param node\n     * @param attrStart\n     * @param attrEnd\n     * @returns {*}\n     */\n    function groupScan(node, attrStart, attrEnd) {\n      var nodes = [];\n      var depth = 0;\n      if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {\n        do {\n          if (!node) {\n            throw $compileMinErr('uterdir',\n                      'Unterminated attribute, found \\'{0}\\' but no matching \\'{1}\\' found.',\n                      attrStart, attrEnd);\n          }\n          if (node.nodeType === NODE_TYPE_ELEMENT) {\n            if (node.hasAttribute(attrStart)) depth++;\n            if (node.hasAttribute(attrEnd)) depth--;\n          }\n          nodes.push(node);\n          node = node.nextSibling;\n        } while (depth > 0);\n      } else {\n        nodes.push(node);\n      }\n\n      return jqLite(nodes);\n    }\n\n    /**\n     * Wrapper for linking function which converts normal linking function into a grouped\n     * linking function.\n     * @param linkFn\n     * @param attrStart\n     * @param attrEnd\n     * @returns {Function}\n     */\n    function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {\n      return function groupedElementsLink(scope, element, attrs, controllers, transcludeFn) {\n        element = groupScan(element[0], attrStart, attrEnd);\n        return linkFn(scope, element, attrs, controllers, transcludeFn);\n      };\n    }\n\n    /**\n     * A function generator that is used to support both eager and lazy compilation\n     * linking function.\n     * @param eager\n     * @param $compileNodes\n     * @param transcludeFn\n     * @param maxPriority\n     * @param ignoreDirective\n     * @param previousCompileContext\n     * @returns {Function}\n     */\n    function compilationGenerator(eager, $compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) {\n      var compiled;\n\n      if (eager) {\n        return compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext);\n      }\n      return /** @this */ function lazyCompilation() {\n        if (!compiled) {\n          compiled = compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext);\n\n          // Null out all of these references in order to make them eligible for garbage collection\n          // since this is a potentially long lived closure\n          $compileNodes = transcludeFn = previousCompileContext = null;\n        }\n        return compiled.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Once the directives have been collected, their compile functions are executed. This method\n     * is responsible for inlining directive templates as well as terminating the application\n     * of the directives if the terminal directive has been reached.\n     *\n     * @param {Array} directives Array of collected directives to execute their compile function.\n     *        this needs to be pre-sorted by priority order.\n     * @param {Node} compileNode The raw DOM node to apply the compile functions to\n     * @param {Object} templateAttrs The shared attribute function\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n     *                                                  scope argument is auto-generated to the new\n     *                                                  child of the transcluded parent scope.\n     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\n     *                              argument has the root jqLite array so that we can replace nodes\n     *                              on it.\n     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when\n     *                                           compiling the transclusion.\n     * @param {Array.<Function>} preLinkFns\n     * @param {Array.<Function>} postLinkFns\n     * @param {Object} previousCompileContext Context used for previous compilation of the current\n     *                                        node\n     * @returns {Function} linkFn\n     */\n    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn,\n                                   jqCollection, originalReplaceDirective, preLinkFns, postLinkFns,\n                                   previousCompileContext) {\n      previousCompileContext = previousCompileContext || {};\n\n      var terminalPriority = -Number.MAX_VALUE,\n          newScopeDirective = previousCompileContext.newScopeDirective,\n          controllerDirectives = previousCompileContext.controllerDirectives,\n          newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,\n          templateDirective = previousCompileContext.templateDirective,\n          nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,\n          hasTranscludeDirective = false,\n          hasTemplate = false,\n          hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,\n          $compileNode = templateAttrs.$$element = jqLite(compileNode),\n          directive,\n          directiveName,\n          $template,\n          replaceDirective = originalReplaceDirective,\n          childTranscludeFn = transcludeFn,\n          linkFn,\n          didScanForMultipleTransclusion = false,\n          mightHaveMultipleTransclusionError = false,\n          directiveValue;\n\n      // executes all directives on the current element\n      for (var i = 0, ii = directives.length; i < ii; i++) {\n        directive = directives[i];\n        var attrStart = directive.$$start;\n        var attrEnd = directive.$$end;\n\n        // collect multiblock sections\n        if (attrStart) {\n          $compileNode = groupScan(compileNode, attrStart, attrEnd);\n        }\n        $template = undefined;\n\n        if (terminalPriority > directive.priority) {\n          break; // prevent further processing of directives\n        }\n\n        directiveValue = directive.scope;\n\n        if (directiveValue) {\n\n          // skip the check for directives with async templates, we'll check the derived sync\n          // directive when the template arrives\n          if (!directive.templateUrl) {\n            if (isObject(directiveValue)) {\n              // This directive is trying to add an isolated scope.\n              // Check that there is no scope of any kind already\n              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective || newScopeDirective,\n                                directive, $compileNode);\n              newIsolateScopeDirective = directive;\n            } else {\n              // This directive is trying to add a child scope.\n              // Check that there is no isolated scope already\n              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive,\n                                $compileNode);\n            }\n          }\n\n          newScopeDirective = newScopeDirective || directive;\n        }\n\n        directiveName = directive.name;\n\n        // If we encounter a condition that can result in transclusion on the directive,\n        // then scan ahead in the remaining directives for others that may cause a multiple\n        // transclusion error to be thrown during the compilation process.  If a matching directive\n        // is found, then we know that when we encounter a transcluded directive, we need to eagerly\n        // compile the `transclude` function rather than doing it lazily in order to throw\n        // exceptions at the correct time\n        if (!didScanForMultipleTransclusion && ((directive.replace && (directive.templateUrl || directive.template))\n            || (directive.transclude && !directive.$$tlb))) {\n                var candidateDirective;\n\n                for (var scanningIndex = i + 1; (candidateDirective = directives[scanningIndex++]);) {\n                    if ((candidateDirective.transclude && !candidateDirective.$$tlb)\n                        || (candidateDirective.replace && (candidateDirective.templateUrl || candidateDirective.template))) {\n                        mightHaveMultipleTransclusionError = true;\n                        break;\n                    }\n                }\n\n                didScanForMultipleTransclusion = true;\n        }\n\n        if (!directive.templateUrl && directive.controller) {\n          controllerDirectives = controllerDirectives || createMap();\n          assertNoDuplicate('\\'' + directiveName + '\\' controller',\n              controllerDirectives[directiveName], directive, $compileNode);\n          controllerDirectives[directiveName] = directive;\n        }\n\n        directiveValue = directive.transclude;\n\n        if (directiveValue) {\n          hasTranscludeDirective = true;\n\n          // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.\n          // This option should only be used by directives that know how to safely handle element transclusion,\n          // where the transcluded nodes are added or replaced after linking.\n          if (!directive.$$tlb) {\n            assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);\n            nonTlbTranscludeDirective = directive;\n          }\n\n          if (directiveValue === 'element') {\n            hasElementTranscludeDirective = true;\n            terminalPriority = directive.priority;\n            $template = $compileNode;\n            $compileNode = templateAttrs.$$element =\n                jqLite(compile.$$createComment(directiveName, templateAttrs[directiveName]));\n            compileNode = $compileNode[0];\n            replaceWith(jqCollection, sliceArgs($template), compileNode);\n\n            // Support: Chrome < 50\n            // https://github.com/angular/angular.js/issues/14041\n\n            // In the versions of V8 prior to Chrome 50, the document fragment that is created\n            // in the `replaceWith` function is improperly garbage collected despite still\n            // being referenced by the `parentNode` property of all of the child nodes.  By adding\n            // a reference to the fragment via a different property, we can avoid that incorrect\n            // behavior.\n            // TODO: remove this line after Chrome 50 has been released\n            $template[0].$$parentNode = $template[0].parentNode;\n\n            childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, terminalPriority,\n                                        replaceDirective && replaceDirective.name, {\n                                          // Don't pass in:\n                                          // - controllerDirectives - otherwise we'll create duplicates controllers\n                                          // - newIsolateScopeDirective or templateDirective - combining templates with\n                                          //   element transclusion doesn't make sense.\n                                          //\n                                          // We need only nonTlbTranscludeDirective so that we prevent putting transclusion\n                                          // on the same element more than once.\n                                          nonTlbTranscludeDirective: nonTlbTranscludeDirective\n                                        });\n          } else {\n\n            var slots = createMap();\n\n            if (!isObject(directiveValue)) {\n              $template = jqLite(jqLiteClone(compileNode)).contents();\n            } else {\n\n              // We have transclusion slots,\n              // collect them up, compile them and store their transclusion functions\n              $template = [];\n\n              var slotMap = createMap();\n              var filledSlots = createMap();\n\n              // Parse the element selectors\n              forEach(directiveValue, function(elementSelector, slotName) {\n                // If an element selector starts with a ? then it is optional\n                var optional = (elementSelector.charAt(0) === '?');\n                elementSelector = optional ? elementSelector.substring(1) : elementSelector;\n\n                slotMap[elementSelector] = slotName;\n\n                // We explicitly assign `null` since this implies that a slot was defined but not filled.\n                // Later when calling boundTransclusion functions with a slot name we only error if the\n                // slot is `undefined`\n                slots[slotName] = null;\n\n                // filledSlots contains `true` for all slots that are either optional or have been\n                // filled. This is used to check that we have not missed any required slots\n                filledSlots[slotName] = optional;\n              });\n\n              // Add the matching elements into their slot\n              forEach($compileNode.contents(), function(node) {\n                var slotName = slotMap[directiveNormalize(nodeName_(node))];\n                if (slotName) {\n                  filledSlots[slotName] = true;\n                  slots[slotName] = slots[slotName] || [];\n                  slots[slotName].push(node);\n                } else {\n                  $template.push(node);\n                }\n              });\n\n              // Check for required slots that were not filled\n              forEach(filledSlots, function(filled, slotName) {\n                if (!filled) {\n                  throw $compileMinErr('reqslot', 'Required transclusion slot `{0}` was not filled.', slotName);\n                }\n              });\n\n              for (var slotName in slots) {\n                if (slots[slotName]) {\n                  // Only define a transclusion function if the slot was filled\n                  slots[slotName] = compilationGenerator(mightHaveMultipleTransclusionError, slots[slotName], transcludeFn);\n                }\n              }\n            }\n\n            $compileNode.empty(); // clear contents\n            childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, undefined,\n                undefined, { needsNewScope: directive.$$isolateScope || directive.$$newScope});\n            childTranscludeFn.$$slots = slots;\n          }\n        }\n\n        if (directive.template) {\n          hasTemplate = true;\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n\n          directiveValue = (isFunction(directive.template))\n              ? directive.template($compileNode, templateAttrs)\n              : directive.template;\n\n          directiveValue = denormalizeTemplate(directiveValue);\n\n          if (directive.replace) {\n            replaceDirective = directive;\n            if (jqLiteIsTextNode(directiveValue)) {\n              $template = [];\n            } else {\n              $template = removeComments(wrapTemplate(directive.templateNamespace, trim(directiveValue)));\n            }\n            compileNode = $template[0];\n\n            if ($template.length !== 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {\n              throw $compileMinErr('tplrt',\n                  'Template for directive \\'{0}\\' must have exactly one root element. {1}',\n                  directiveName, '');\n            }\n\n            replaceWith(jqCollection, $compileNode, compileNode);\n\n            var newTemplateAttrs = {$attr: {}};\n\n            // combine directives from the original node and from the template:\n            // - take the array of directives for this element\n            // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)\n            // - collect directives from the template and sort them by priority\n            // - combine directives as: processed + template + unprocessed\n            var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);\n            var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));\n\n            if (newIsolateScopeDirective || newScopeDirective) {\n              // The original directive caused the current element to be replaced but this element\n              // also needs to have a new scope, so we need to tell the template directives\n              // that they would need to get their scope from further up, if they require transclusion\n              markDirectiveScope(templateDirectives, newIsolateScopeDirective, newScopeDirective);\n            }\n            directives = directives.concat(templateDirectives).concat(unprocessedDirectives);\n            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\n\n            ii = directives.length;\n          } else {\n            $compileNode.html(directiveValue);\n          }\n        }\n\n        if (directive.templateUrl) {\n          hasTemplate = true;\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n\n          if (directive.replace) {\n            replaceDirective = directive;\n          }\n\n          // eslint-disable-next-line no-func-assign\n          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode,\n              templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {\n                controllerDirectives: controllerDirectives,\n                newScopeDirective: (newScopeDirective !== directive) && newScopeDirective,\n                newIsolateScopeDirective: newIsolateScopeDirective,\n                templateDirective: templateDirective,\n                nonTlbTranscludeDirective: nonTlbTranscludeDirective\n              });\n          ii = directives.length;\n        } else if (directive.compile) {\n          try {\n            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\n            var context = directive.$$originalDirective || directive;\n            if (isFunction(linkFn)) {\n              addLinkFns(null, bind(context, linkFn), attrStart, attrEnd);\n            } else if (linkFn) {\n              addLinkFns(bind(context, linkFn.pre), bind(context, linkFn.post), attrStart, attrEnd);\n            }\n          } catch (e) {\n            $exceptionHandler(e, startingTag($compileNode));\n          }\n        }\n\n        if (directive.terminal) {\n          nodeLinkFn.terminal = true;\n          terminalPriority = Math.max(terminalPriority, directive.priority);\n        }\n\n      }\n\n      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;\n      nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;\n      nodeLinkFn.templateOnThisElement = hasTemplate;\n      nodeLinkFn.transclude = childTranscludeFn;\n\n      previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;\n\n      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\n      return nodeLinkFn;\n\n      ////////////////////\n\n      function addLinkFns(pre, post, attrStart, attrEnd) {\n        if (pre) {\n          if (attrStart) pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);\n          pre.require = directive.require;\n          pre.directiveName = directiveName;\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n            pre = cloneAndAnnotateFn(pre, {isolateScope: true});\n          }\n          preLinkFns.push(pre);\n        }\n        if (post) {\n          if (attrStart) post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);\n          post.require = directive.require;\n          post.directiveName = directiveName;\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n            post = cloneAndAnnotateFn(post, {isolateScope: true});\n          }\n          postLinkFns.push(post);\n        }\n      }\n\n      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\n        var i, ii, linkFn, isolateScope, controllerScope, elementControllers, transcludeFn, $element,\n            attrs, scopeBindingInfo;\n\n        if (compileNode === linkNode) {\n          attrs = templateAttrs;\n          $element = templateAttrs.$$element;\n        } else {\n          $element = jqLite(linkNode);\n          attrs = new Attributes($element, templateAttrs);\n        }\n\n        controllerScope = scope;\n        if (newIsolateScopeDirective) {\n          isolateScope = scope.$new(true);\n        } else if (newScopeDirective) {\n          controllerScope = scope.$parent;\n        }\n\n        if (boundTranscludeFn) {\n          // track `boundTranscludeFn` so it can be unwrapped if `transcludeFn`\n          // is later passed as `parentBoundTranscludeFn` to `publicLinkFn`\n          transcludeFn = controllersBoundTransclude;\n          transcludeFn.$$boundTransclude = boundTranscludeFn;\n          // expose the slots on the `$transclude` function\n          transcludeFn.isSlotFilled = function(slotName) {\n            return !!boundTranscludeFn.$$slots[slotName];\n          };\n        }\n\n        if (controllerDirectives) {\n          elementControllers = setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective);\n        }\n\n        if (newIsolateScopeDirective) {\n          // Initialize isolate scope bindings for new isolate scope directive.\n          compile.$$addScopeInfo($element, isolateScope, true, !(templateDirective && (templateDirective === newIsolateScopeDirective ||\n              templateDirective === newIsolateScopeDirective.$$originalDirective)));\n          compile.$$addScopeClass($element, true);\n          isolateScope.$$isolateBindings =\n              newIsolateScopeDirective.$$isolateBindings;\n          scopeBindingInfo = initializeDirectiveBindings(scope, attrs, isolateScope,\n                                        isolateScope.$$isolateBindings,\n                                        newIsolateScopeDirective);\n          if (scopeBindingInfo.removeWatches) {\n            isolateScope.$on('$destroy', scopeBindingInfo.removeWatches);\n          }\n        }\n\n        // Initialize bindToController bindings\n        for (var name in elementControllers) {\n          var controllerDirective = controllerDirectives[name];\n          var controller = elementControllers[name];\n          var bindings = controllerDirective.$$bindings.bindToController;\n\n          if (preAssignBindingsEnabled) {\n            if (bindings) {\n              controller.bindingInfo =\n                initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective);\n            } else {\n              controller.bindingInfo = {};\n            }\n\n            var controllerResult = controller();\n            if (controllerResult !== controller.instance) {\n              // If the controller constructor has a return value, overwrite the instance\n              // from setupControllers\n              controller.instance = controllerResult;\n              $element.data('$' + controllerDirective.name + 'Controller', controllerResult);\n              if (controller.bindingInfo.removeWatches) {\n                controller.bindingInfo.removeWatches();\n              }\n              controller.bindingInfo =\n                initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective);\n            }\n          } else {\n            controller.instance = controller();\n            $element.data('$' + controllerDirective.name + 'Controller', controller.instance);\n            controller.bindingInfo =\n              initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective);\n          }\n        }\n\n        // Bind the required controllers to the controller, if `require` is an object and `bindToController` is truthy\n        forEach(controllerDirectives, function(controllerDirective, name) {\n          var require = controllerDirective.require;\n          if (controllerDirective.bindToController && !isArray(require) && isObject(require)) {\n            extend(elementControllers[name].instance, getControllers(name, require, $element, elementControllers));\n          }\n        });\n\n        // Handle the init and destroy lifecycle hooks on all controllers that have them\n        forEach(elementControllers, function(controller) {\n          var controllerInstance = controller.instance;\n          if (isFunction(controllerInstance.$onChanges)) {\n            try {\n              controllerInstance.$onChanges(controller.bindingInfo.initialChanges);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          if (isFunction(controllerInstance.$onInit)) {\n            try {\n              controllerInstance.$onInit();\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          if (isFunction(controllerInstance.$doCheck)) {\n            controllerScope.$watch(function() { controllerInstance.$doCheck(); });\n            controllerInstance.$doCheck();\n          }\n          if (isFunction(controllerInstance.$onDestroy)) {\n            controllerScope.$on('$destroy', function callOnDestroyHook() {\n              controllerInstance.$onDestroy();\n            });\n          }\n        });\n\n        // PRELINKING\n        for (i = 0, ii = preLinkFns.length; i < ii; i++) {\n          linkFn = preLinkFns[i];\n          invokeLinkFn(linkFn,\n              linkFn.isolateScope ? isolateScope : scope,\n              $element,\n              attrs,\n              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),\n              transcludeFn\n          );\n        }\n\n        // RECURSION\n        // We only pass the isolate scope, if the isolate directive has a template,\n        // otherwise the child elements do not belong to the isolate directive.\n        var scopeToChild = scope;\n        if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {\n          scopeToChild = isolateScope;\n        }\n        if (childLinkFn) {\n          childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);\n        }\n\n        // POSTLINKING\n        for (i = postLinkFns.length - 1; i >= 0; i--) {\n          linkFn = postLinkFns[i];\n          invokeLinkFn(linkFn,\n              linkFn.isolateScope ? isolateScope : scope,\n              $element,\n              attrs,\n              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),\n              transcludeFn\n          );\n        }\n\n        // Trigger $postLink lifecycle hooks\n        forEach(elementControllers, function(controller) {\n          var controllerInstance = controller.instance;\n          if (isFunction(controllerInstance.$postLink)) {\n            controllerInstance.$postLink();\n          }\n        });\n\n        // This is the function that is injected as `$transclude`.\n        // Note: all arguments are optional!\n        function controllersBoundTransclude(scope, cloneAttachFn, futureParentElement, slotName) {\n          var transcludeControllers;\n          // No scope passed in:\n          if (!isScope(scope)) {\n            slotName = futureParentElement;\n            futureParentElement = cloneAttachFn;\n            cloneAttachFn = scope;\n            scope = undefined;\n          }\n\n          if (hasElementTranscludeDirective) {\n            transcludeControllers = elementControllers;\n          }\n          if (!futureParentElement) {\n            futureParentElement = hasElementTranscludeDirective ? $element.parent() : $element;\n          }\n          if (slotName) {\n            // slotTranscludeFn can be one of three things:\n            //  * a transclude function - a filled slot\n            //  * `null` - an optional slot that was not filled\n            //  * `undefined` - a slot that was not declared (i.e. invalid)\n            var slotTranscludeFn = boundTranscludeFn.$$slots[slotName];\n            if (slotTranscludeFn) {\n              return slotTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);\n            } else if (isUndefined(slotTranscludeFn)) {\n              throw $compileMinErr('noslot',\n               'No parent directive that requires a transclusion with slot name \"{0}\". ' +\n               'Element: {1}',\n               slotName, startingTag($element));\n            }\n          } else {\n            return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);\n          }\n        }\n      }\n    }\n\n    function getControllers(directiveName, require, $element, elementControllers) {\n      var value;\n\n      if (isString(require)) {\n        var match = require.match(REQUIRE_PREFIX_REGEXP);\n        var name = require.substring(match[0].length);\n        var inheritType = match[1] || match[3];\n        var optional = match[2] === '?';\n\n        //If only parents then start at the parent element\n        if (inheritType === '^^') {\n          $element = $element.parent();\n        //Otherwise attempt getting the controller from elementControllers in case\n        //the element is transcluded (and has no data) and to avoid .data if possible\n        } else {\n          value = elementControllers && elementControllers[name];\n          value = value && value.instance;\n        }\n\n        if (!value) {\n          var dataName = '$' + name + 'Controller';\n          value = inheritType ? $element.inheritedData(dataName) : $element.data(dataName);\n        }\n\n        if (!value && !optional) {\n          throw $compileMinErr('ctreq',\n              'Controller \\'{0}\\', required by directive \\'{1}\\', can\\'t be found!',\n              name, directiveName);\n        }\n      } else if (isArray(require)) {\n        value = [];\n        for (var i = 0, ii = require.length; i < ii; i++) {\n          value[i] = getControllers(directiveName, require[i], $element, elementControllers);\n        }\n      } else if (isObject(require)) {\n        value = {};\n        forEach(require, function(controller, property) {\n          value[property] = getControllers(directiveName, controller, $element, elementControllers);\n        });\n      }\n\n      return value || null;\n    }\n\n    function setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective) {\n      var elementControllers = createMap();\n      for (var controllerKey in controllerDirectives) {\n        var directive = controllerDirectives[controllerKey];\n        var locals = {\n          $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,\n          $element: $element,\n          $attrs: attrs,\n          $transclude: transcludeFn\n        };\n\n        var controller = directive.controller;\n        if (controller === '@') {\n          controller = attrs[directive.name];\n        }\n\n        var controllerInstance = $controller(controller, locals, true, directive.controllerAs);\n\n        // For directives with element transclusion the element is a comment.\n        // In this case .data will not attach any data.\n        // Instead, we save the controllers for the element in a local hash and attach to .data\n        // later, once we have the actual element.\n        elementControllers[directive.name] = controllerInstance;\n        $element.data('$' + directive.name + 'Controller', controllerInstance.instance);\n      }\n      return elementControllers;\n    }\n\n    // Depending upon the context in which a directive finds itself it might need to have a new isolated\n    // or child scope created. For instance:\n    // * if the directive has been pulled into a template because another directive with a higher priority\n    // asked for element transclusion\n    // * if the directive itself asks for transclusion but it is at the root of a template and the original\n    // element was replaced. See https://github.com/angular/angular.js/issues/12936\n    function markDirectiveScope(directives, isolateScope, newScope) {\n      for (var j = 0, jj = directives.length; j < jj; j++) {\n        directives[j] = inherit(directives[j], {$$isolateScope: isolateScope, $$newScope: newScope});\n      }\n    }\n\n    /**\n     * looks up the directive and decorates it with exception handling and proper parameters. We\n     * call this the boundDirective.\n     *\n     * @param {string} name name of the directive to look up.\n     * @param {string} location The directive must be found in specific format.\n     *   String containing any of theses characters:\n     *\n     *   * `E`: element name\n     *   * `A': attribute\n     *   * `C`: class\n     *   * `M`: comment\n     * @returns {boolean} true if directive was added.\n     */\n    function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName,\n                          endAttrName) {\n      if (name === ignoreDirective) return null;\n      var match = null;\n      if (hasDirectives.hasOwnProperty(name)) {\n        for (var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i < ii; i++) {\n          directive = directives[i];\n          if ((isUndefined(maxPriority) || maxPriority > directive.priority) &&\n               directive.restrict.indexOf(location) !== -1) {\n            if (startAttrName) {\n              directive = inherit(directive, {$$start: startAttrName, $$end: endAttrName});\n            }\n            if (!directive.$$bindings) {\n              var bindings = directive.$$bindings =\n                  parseDirectiveBindings(directive, directive.name);\n              if (isObject(bindings.isolateScope)) {\n                directive.$$isolateBindings = bindings.isolateScope;\n              }\n            }\n            tDirectives.push(directive);\n            match = directive;\n          }\n        }\n      }\n      return match;\n    }\n\n\n    /**\n     * looks up the directive and returns true if it is a multi-element directive,\n     * and therefore requires DOM nodes between -start and -end markers to be grouped\n     * together.\n     *\n     * @param {string} name name of the directive to look up.\n     * @returns true if directive was registered as multi-element.\n     */\n    function directiveIsMultiElement(name) {\n      if (hasDirectives.hasOwnProperty(name)) {\n        for (var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i < ii; i++) {\n          directive = directives[i];\n          if (directive.multiElement) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    /**\n     * When the element is replaced with HTML template then the new attributes\n     * on the template need to be merged with the existing attributes in the DOM.\n     * The desired effect is to have both of the attributes present.\n     *\n     * @param {object} dst destination attributes (original DOM)\n     * @param {object} src source attributes (from the directive template)\n     */\n    function mergeTemplateAttributes(dst, src) {\n      var srcAttr = src.$attr,\n          dstAttr = dst.$attr;\n\n      // reapply the old attributes to the new element\n      forEach(dst, function(value, key) {\n        if (key.charAt(0) !== '$') {\n          if (src[key] && src[key] !== value) {\n            if (value.length) {\n              value += (key === 'style' ? ';' : ' ') + src[key];\n            } else {\n              value = src[key];\n            }\n          }\n          dst.$set(key, value, true, srcAttr[key]);\n        }\n      });\n\n      // copy the new attributes on the old attrs object\n      forEach(src, function(value, key) {\n        // Check if we already set this attribute in the loop above.\n        // `dst` will never contain hasOwnProperty as DOM parser won't let it.\n        // You will get an \"InvalidCharacterError: DOM Exception 5\" error if you\n        // have an attribute like \"has-own-property\" or \"data-has-own-property\", etc.\n        if (!dst.hasOwnProperty(key) && key.charAt(0) !== '$') {\n          dst[key] = value;\n\n          if (key !== 'class' && key !== 'style') {\n            dstAttr[key] = srcAttr[key];\n          }\n        }\n      });\n    }\n\n\n    function compileTemplateUrl(directives, $compileNode, tAttrs,\n        $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {\n      var linkQueue = [],\n          afterTemplateNodeLinkFn,\n          afterTemplateChildLinkFn,\n          beforeTemplateCompileNode = $compileNode[0],\n          origAsyncDirective = directives.shift(),\n          derivedSyncDirective = inherit(origAsyncDirective, {\n            templateUrl: null, transclude: null, replace: null, $$originalDirective: origAsyncDirective\n          }),\n          templateUrl = (isFunction(origAsyncDirective.templateUrl))\n              ? origAsyncDirective.templateUrl($compileNode, tAttrs)\n              : origAsyncDirective.templateUrl,\n          templateNamespace = origAsyncDirective.templateNamespace;\n\n      $compileNode.empty();\n\n      $templateRequest(templateUrl)\n        .then(function(content) {\n          var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;\n\n          content = denormalizeTemplate(content);\n\n          if (origAsyncDirective.replace) {\n            if (jqLiteIsTextNode(content)) {\n              $template = [];\n            } else {\n              $template = removeComments(wrapTemplate(templateNamespace, trim(content)));\n            }\n            compileNode = $template[0];\n\n            if ($template.length !== 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {\n              throw $compileMinErr('tplrt',\n                  'Template for directive \\'{0}\\' must have exactly one root element. {1}',\n                  origAsyncDirective.name, templateUrl);\n            }\n\n            tempTemplateAttrs = {$attr: {}};\n            replaceWith($rootElement, $compileNode, compileNode);\n            var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);\n\n            if (isObject(origAsyncDirective.scope)) {\n              // the original directive that caused the template to be loaded async required\n              // an isolate scope\n              markDirectiveScope(templateDirectives, true);\n            }\n            directives = templateDirectives.concat(directives);\n            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\n          } else {\n            compileNode = beforeTemplateCompileNode;\n            $compileNode.html(content);\n          }\n\n          directives.unshift(derivedSyncDirective);\n\n          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs,\n              childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns,\n              previousCompileContext);\n          forEach($rootElement, function(node, i) {\n            if (node === compileNode) {\n              $rootElement[i] = $compileNode[0];\n            }\n          });\n          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\n\n          while (linkQueue.length) {\n            var scope = linkQueue.shift(),\n                beforeTemplateLinkNode = linkQueue.shift(),\n                linkRootElement = linkQueue.shift(),\n                boundTranscludeFn = linkQueue.shift(),\n                linkNode = $compileNode[0];\n\n            if (scope.$$destroyed) continue;\n\n            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\n              var oldClasses = beforeTemplateLinkNode.className;\n\n              if (!(previousCompileContext.hasElementTranscludeDirective &&\n                  origAsyncDirective.replace)) {\n                // it was cloned therefore we have to clone as well.\n                linkNode = jqLiteClone(compileNode);\n              }\n              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\n\n              // Copy in CSS classes from original node\n              safeAddClass(jqLite(linkNode), oldClasses);\n            }\n            if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n            } else {\n              childBoundTranscludeFn = boundTranscludeFn;\n            }\n            afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement,\n              childBoundTranscludeFn);\n          }\n          linkQueue = null;\n        }).catch(function(error) {\n          if (error instanceof Error) {\n            $exceptionHandler(error);\n          }\n        });\n\n      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {\n        var childBoundTranscludeFn = boundTranscludeFn;\n        if (scope.$$destroyed) return;\n        if (linkQueue) {\n          linkQueue.push(scope,\n                         node,\n                         rootElement,\n                         childBoundTranscludeFn);\n        } else {\n          if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n            childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n          }\n          afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);\n        }\n      };\n    }\n\n\n    /**\n     * Sorting function for bound directives.\n     */\n    function byPriority(a, b) {\n      var diff = b.priority - a.priority;\n      if (diff !== 0) return diff;\n      if (a.name !== b.name) return (a.name < b.name) ? -1 : 1;\n      return a.index - b.index;\n    }\n\n    function assertNoDuplicate(what, previousDirective, directive, element) {\n\n      function wrapModuleNameIfDefined(moduleName) {\n        return moduleName ?\n          (' (module: ' + moduleName + ')') :\n          '';\n      }\n\n      if (previousDirective) {\n        throw $compileMinErr('multidir', 'Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}',\n            previousDirective.name, wrapModuleNameIfDefined(previousDirective.$$moduleName),\n            directive.name, wrapModuleNameIfDefined(directive.$$moduleName), what, startingTag(element));\n      }\n    }\n\n\n    function addTextInterpolateDirective(directives, text) {\n      var interpolateFn = $interpolate(text, true);\n      if (interpolateFn) {\n        directives.push({\n          priority: 0,\n          compile: function textInterpolateCompileFn(templateNode) {\n            var templateNodeParent = templateNode.parent(),\n                hasCompileParent = !!templateNodeParent.length;\n\n            // When transcluding a template that has bindings in the root\n            // we don't have a parent and thus need to add the class during linking fn.\n            if (hasCompileParent) compile.$$addBindingClass(templateNodeParent);\n\n            return function textInterpolateLinkFn(scope, node) {\n              var parent = node.parent();\n              if (!hasCompileParent) compile.$$addBindingClass(parent);\n              compile.$$addBindingInfo(parent, interpolateFn.expressions);\n              scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\n                node[0].nodeValue = value;\n              });\n            };\n          }\n        });\n      }\n    }\n\n\n    function wrapTemplate(type, template) {\n      type = lowercase(type || 'html');\n      switch (type) {\n      case 'svg':\n      case 'math':\n        var wrapper = window.document.createElement('div');\n        wrapper.innerHTML = '<' + type + '>' + template + '</' + type + '>';\n        return wrapper.childNodes[0].childNodes;\n      default:\n        return template;\n      }\n    }\n\n\n    function getTrustedContext(node, attrNormalizedName) {\n      if (attrNormalizedName === 'srcdoc') {\n        return $sce.HTML;\n      }\n      var tag = nodeName_(node);\n      // All tags with src attributes require a RESOURCE_URL value, except for\n      // img and various html5 media tags.\n      if (attrNormalizedName === 'src' || attrNormalizedName === 'ngSrc') {\n        if (['img', 'video', 'audio', 'source', 'track'].indexOf(tag) === -1) {\n          return $sce.RESOURCE_URL;\n        }\n      // maction[xlink:href] can source SVG.  It's not limited to <maction>.\n      } else if (attrNormalizedName === 'xlinkHref' ||\n          (tag === 'form' && attrNormalizedName === 'action') ||\n          // links can be stylesheets or imports, which can run script in the current origin\n          (tag === 'link' && attrNormalizedName === 'href')\n      ) {\n        return $sce.RESOURCE_URL;\n      }\n    }\n\n\n    function addAttrInterpolateDirective(node, directives, value, name, isNgAttr) {\n      var trustedContext = getTrustedContext(node, name);\n      var mustHaveExpression = !isNgAttr;\n      var allOrNothing = ALL_OR_NOTHING_ATTRS[name] || isNgAttr;\n\n      var interpolateFn = $interpolate(value, mustHaveExpression, trustedContext, allOrNothing);\n\n      // no interpolation found -> ignore\n      if (!interpolateFn) return;\n\n      if (name === 'multiple' && nodeName_(node) === 'select') {\n        throw $compileMinErr('selmulti',\n            'Binding to the \\'multiple\\' attribute is not supported. Element: {0}',\n            startingTag(node));\n      }\n\n      if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {\n        throw $compileMinErr('nodomevents',\n            'Interpolations for HTML DOM event attributes are disallowed.  Please use the ' +\n                'ng- versions (such as ng-click instead of onclick) instead.');\n      }\n\n      directives.push({\n        priority: 100,\n        compile: function() {\n            return {\n              pre: function attrInterpolatePreLinkFn(scope, element, attr) {\n                var $$observers = (attr.$$observers || (attr.$$observers = createMap()));\n\n                // If the attribute has changed since last $interpolate()ed\n                var newValue = attr[name];\n                if (newValue !== value) {\n                  // we need to interpolate again since the attribute value has been updated\n                  // (e.g. by another directive's compile function)\n                  // ensure unset/empty values make interpolateFn falsy\n                  interpolateFn = newValue && $interpolate(newValue, true, trustedContext, allOrNothing);\n                  value = newValue;\n                }\n\n                // if attribute was updated so that there is no interpolation going on we don't want to\n                // register any observers\n                if (!interpolateFn) return;\n\n                // initialize attr object so that it's ready in case we need the value for isolate\n                // scope initialization, otherwise the value would not be available from isolate\n                // directive's linking fn during linking phase\n                attr[name] = interpolateFn(scope);\n\n                ($$observers[name] || ($$observers[name] = [])).$$inter = true;\n                (attr.$$observers && attr.$$observers[name].$$scope || scope).\n                  $watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {\n                    //special case for class attribute addition + removal\n                    //so that class changes can tap into the animation\n                    //hooks provided by the $animate service. Be sure to\n                    //skip animations when the first digest occurs (when\n                    //both the new and the old values are the same) since\n                    //the CSS classes are the non-interpolated values\n                    if (name === 'class' && newValue !== oldValue) {\n                      attr.$updateClass(newValue, oldValue);\n                    } else {\n                      attr.$set(name, newValue);\n                    }\n                  });\n              }\n            };\n          }\n      });\n    }\n\n\n    /**\n     * This is a special jqLite.replaceWith, which can replace items which\n     * have no parents, provided that the containing jqLite collection is provided.\n     *\n     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\n     *                               in the root of the tree.\n     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep\n     *                                  the shell, but replace its DOM node reference.\n     * @param {Node} newNode The new DOM node.\n     */\n    function replaceWith($rootElement, elementsToRemove, newNode) {\n      var firstElementToRemove = elementsToRemove[0],\n          removeCount = elementsToRemove.length,\n          parent = firstElementToRemove.parentNode,\n          i, ii;\n\n      if ($rootElement) {\n        for (i = 0, ii = $rootElement.length; i < ii; i++) {\n          if ($rootElement[i] === firstElementToRemove) {\n            $rootElement[i++] = newNode;\n            for (var j = i, j2 = j + removeCount - 1,\n                     jj = $rootElement.length;\n                 j < jj; j++, j2++) {\n              if (j2 < jj) {\n                $rootElement[j] = $rootElement[j2];\n              } else {\n                delete $rootElement[j];\n              }\n            }\n            $rootElement.length -= removeCount - 1;\n\n            // If the replaced element is also the jQuery .context then replace it\n            // .context is a deprecated jQuery api, so we should set it only when jQuery set it\n            // http://api.jquery.com/context/\n            if ($rootElement.context === firstElementToRemove) {\n              $rootElement.context = newNode;\n            }\n            break;\n          }\n        }\n      }\n\n      if (parent) {\n        parent.replaceChild(newNode, firstElementToRemove);\n      }\n\n      // Append all the `elementsToRemove` to a fragment. This will...\n      // - remove them from the DOM\n      // - allow them to still be traversed with .nextSibling\n      // - allow a single fragment.qSA to fetch all elements being removed\n      var fragment = window.document.createDocumentFragment();\n      for (i = 0; i < removeCount; i++) {\n        fragment.appendChild(elementsToRemove[i]);\n      }\n\n      if (jqLite.hasData(firstElementToRemove)) {\n        // Copy over user data (that includes Angular's $scope etc.). Don't copy private\n        // data here because there's no public interface in jQuery to do that and copying over\n        // event listeners (which is the main use of private data) wouldn't work anyway.\n        jqLite.data(newNode, jqLite.data(firstElementToRemove));\n\n        // Remove $destroy event listeners from `firstElementToRemove`\n        jqLite(firstElementToRemove).off('$destroy');\n      }\n\n      // Cleanup any data/listeners on the elements and children.\n      // This includes invoking the $destroy event on any elements with listeners.\n      jqLite.cleanData(fragment.querySelectorAll('*'));\n\n      // Update the jqLite collection to only contain the `newNode`\n      for (i = 1; i < removeCount; i++) {\n        delete elementsToRemove[i];\n      }\n      elementsToRemove[0] = newNode;\n      elementsToRemove.length = 1;\n    }\n\n\n    function cloneAndAnnotateFn(fn, annotation) {\n      return extend(function() { return fn.apply(null, arguments); }, fn, annotation);\n    }\n\n\n    function invokeLinkFn(linkFn, scope, $element, attrs, controllers, transcludeFn) {\n      try {\n        linkFn(scope, $element, attrs, controllers, transcludeFn);\n      } catch (e) {\n        $exceptionHandler(e, startingTag($element));\n      }\n    }\n\n\n    // Set up $watches for isolate scope and controller bindings.\n    function initializeDirectiveBindings(scope, attrs, destination, bindings, directive) {\n      var removeWatchCollection = [];\n      var initialChanges = {};\n      var changes;\n      forEach(bindings, function initializeBinding(definition, scopeName) {\n        var attrName = definition.attrName,\n        optional = definition.optional,\n        mode = definition.mode, // @, =, <, or &\n        lastValue,\n        parentGet, parentSet, compare, removeWatch;\n\n        switch (mode) {\n\n          case '@':\n            if (!optional && !hasOwnProperty.call(attrs, attrName)) {\n              destination[scopeName] = attrs[attrName] = undefined;\n            }\n            removeWatch = attrs.$observe(attrName, function(value) {\n              if (isString(value) || isBoolean(value)) {\n                var oldValue = destination[scopeName];\n                recordChanges(scopeName, value, oldValue);\n                destination[scopeName] = value;\n              }\n            });\n            attrs.$$observers[attrName].$$scope = scope;\n            lastValue = attrs[attrName];\n            if (isString(lastValue)) {\n              // If the attribute has been provided then we trigger an interpolation to ensure\n              // the value is there for use in the link fn\n              destination[scopeName] = $interpolate(lastValue)(scope);\n            } else if (isBoolean(lastValue)) {\n              // If the attributes is one of the BOOLEAN_ATTR then Angular will have converted\n              // the value to boolean rather than a string, so we special case this situation\n              destination[scopeName] = lastValue;\n            }\n            initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]);\n            removeWatchCollection.push(removeWatch);\n            break;\n\n          case '=':\n            if (!hasOwnProperty.call(attrs, attrName)) {\n              if (optional) break;\n              attrs[attrName] = undefined;\n            }\n            if (optional && !attrs[attrName]) break;\n\n            parentGet = $parse(attrs[attrName]);\n            if (parentGet.literal) {\n              compare = equals;\n            } else {\n              // eslint-disable-next-line no-self-compare\n              compare = function simpleCompare(a, b) { return a === b || (a !== a && b !== b); };\n            }\n            parentSet = parentGet.assign || function() {\n              // reset the change, or we will throw this exception on every $digest\n              lastValue = destination[scopeName] = parentGet(scope);\n              throw $compileMinErr('nonassign',\n                  'Expression \\'{0}\\' in attribute \\'{1}\\' used with directive \\'{2}\\' is non-assignable!',\n                  attrs[attrName], attrName, directive.name);\n            };\n            lastValue = destination[scopeName] = parentGet(scope);\n            var parentValueWatch = function parentValueWatch(parentValue) {\n              if (!compare(parentValue, destination[scopeName])) {\n                // we are out of sync and need to copy\n                if (!compare(parentValue, lastValue)) {\n                  // parent changed and it has precedence\n                  destination[scopeName] = parentValue;\n                } else {\n                  // if the parent can be assigned then do so\n                  parentSet(scope, parentValue = destination[scopeName]);\n                }\n              }\n              lastValue = parentValue;\n              return lastValue;\n            };\n            parentValueWatch.$stateful = true;\n            if (definition.collection) {\n              removeWatch = scope.$watchCollection(attrs[attrName], parentValueWatch);\n            } else {\n              removeWatch = scope.$watch($parse(attrs[attrName], parentValueWatch), null, parentGet.literal);\n            }\n            removeWatchCollection.push(removeWatch);\n            break;\n\n          case '<':\n            if (!hasOwnProperty.call(attrs, attrName)) {\n              if (optional) break;\n              attrs[attrName] = undefined;\n            }\n            if (optional && !attrs[attrName]) break;\n\n            parentGet = $parse(attrs[attrName]);\n            var deepWatch = parentGet.literal;\n\n            var initialValue = destination[scopeName] = parentGet(scope);\n            initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]);\n\n            removeWatch = scope.$watch(parentGet, function parentValueWatchAction(newValue, oldValue) {\n              if (oldValue === newValue) {\n                if (oldValue === initialValue || (deepWatch && equals(oldValue, initialValue))) {\n                  return;\n                }\n                oldValue = initialValue;\n              }\n              recordChanges(scopeName, newValue, oldValue);\n              destination[scopeName] = newValue;\n            }, deepWatch);\n\n            removeWatchCollection.push(removeWatch);\n            break;\n\n          case '&':\n            // Don't assign Object.prototype method to scope\n            parentGet = attrs.hasOwnProperty(attrName) ? $parse(attrs[attrName]) : noop;\n\n            // Don't assign noop to destination if expression is not valid\n            if (parentGet === noop && optional) break;\n\n            destination[scopeName] = function(locals) {\n              return parentGet(scope, locals);\n            };\n            break;\n        }\n      });\n\n      function recordChanges(key, currentValue, previousValue) {\n        if (isFunction(destination.$onChanges) && currentValue !== previousValue &&\n            // eslint-disable-next-line no-self-compare\n            (currentValue === currentValue || previousValue === previousValue)) {\n          // If we have not already scheduled the top level onChangesQueue handler then do so now\n          if (!onChangesQueue) {\n            scope.$$postDigest(flushOnChangesQueue);\n            onChangesQueue = [];\n          }\n          // If we have not already queued a trigger of onChanges for this controller then do so now\n          if (!changes) {\n            changes = {};\n            onChangesQueue.push(triggerOnChangesHook);\n          }\n          // If the has been a change on this property already then we need to reuse the previous value\n          if (changes[key]) {\n            previousValue = changes[key].previousValue;\n          }\n          // Store this change\n          changes[key] = new SimpleChange(previousValue, currentValue);\n        }\n      }\n\n      function triggerOnChangesHook() {\n        destination.$onChanges(changes);\n        // Now clear the changes so that we schedule onChanges when more changes arrive\n        changes = undefined;\n      }\n\n      return {\n        initialChanges: initialChanges,\n        removeWatches: removeWatchCollection.length && function removeWatches() {\n          for (var i = 0, ii = removeWatchCollection.length; i < ii; ++i) {\n            removeWatchCollection[i]();\n          }\n        }\n      };\n    }\n  }];\n}\n\nfunction SimpleChange(previous, current) {\n  this.previousValue = previous;\n  this.currentValue = current;\n}\nSimpleChange.prototype.isFirstChange = function() { return this.previousValue === _UNINITIALIZED_VALUE; };\n\n\nvar PREFIX_REGEXP = /^((?:x|data)[:\\-_])/i;\nvar SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\n/**\n * Converts all accepted directives format into proper directive name.\n * @param name Name to normalize\n */\nfunction directiveNormalize(name) {\n  return name\n    .replace(PREFIX_REGEXP, '')\n    .replace(SPECIAL_CHARS_REGEXP, fnCamelCaseReplace);\n}\n\n/**\n * @ngdoc type\n * @name $compile.directive.Attributes\n *\n * @description\n * A shared object between directive compile / linking functions which contains normalized DOM\n * element attributes. The values reflect current binding state `{{ }}`. The normalization is\n * needed since all of these are treated as equivalent in Angular:\n *\n * ```\n *    <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n * ```\n */\n\n/**\n * @ngdoc property\n * @name $compile.directive.Attributes#$attr\n *\n * @description\n * A map of DOM element attribute names to the normalized name. This is\n * needed to do reverse lookup from normalized name back to actual name.\n */\n\n\n/**\n * @ngdoc method\n * @name $compile.directive.Attributes#$set\n * @kind function\n *\n * @description\n * Set DOM element attribute value.\n *\n *\n * @param {string} name Normalized element attribute name of the property to modify. The name is\n *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n *          property to the original name.\n * @param {string} value Value to set the attribute to. The value can be an interpolated string.\n */\n\n\n\n/**\n * Closure compiler type information\n */\n\nfunction nodesetLinkingFn(\n  /* angular.Scope */ scope,\n  /* NodeList */ nodeList,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n) {}\n\nfunction directiveLinkingFn(\n  /* nodesetLinkingFn */ nodesetLinkingFn,\n  /* angular.Scope */ scope,\n  /* Node */ node,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n) {}\n\nfunction tokenDifference(str1, str2) {\n  var values = '',\n      tokens1 = str1.split(/\\s+/),\n      tokens2 = str2.split(/\\s+/);\n\n  outer:\n  for (var i = 0; i < tokens1.length; i++) {\n    var token = tokens1[i];\n    for (var j = 0; j < tokens2.length; j++) {\n      if (token === tokens2[j]) continue outer;\n    }\n    values += (values.length > 0 ? ' ' : '') + token;\n  }\n  return values;\n}\n\nfunction removeComments(jqNodes) {\n  jqNodes = jqLite(jqNodes);\n  var i = jqNodes.length;\n\n  if (i <= 1) {\n    return jqNodes;\n  }\n\n  while (i--) {\n    var node = jqNodes[i];\n    if (node.nodeType === NODE_TYPE_COMMENT ||\n       (node.nodeType === NODE_TYPE_TEXT && node.nodeValue.trim() === '')) {\n         splice.call(jqNodes, i, 1);\n    }\n  }\n  return jqNodes;\n}\n\nvar $controllerMinErr = minErr('$controller');\n\n\nvar CNTRL_REG = /^(\\S+)(\\s+as\\s+([\\w$]+))?$/;\nfunction identifierForController(controller, ident) {\n  if (ident && isString(ident)) return ident;\n  if (isString(controller)) {\n    var match = CNTRL_REG.exec(controller);\n    if (match) return match[3];\n  }\n}\n\n\n/**\n * @ngdoc provider\n * @name $controllerProvider\n * @this\n *\n * @description\n * The {@link ng.$controller $controller service} is used by Angular to create new\n * controllers.\n *\n * This provider allows controller registration via the\n * {@link ng.$controllerProvider#register register} method.\n */\nfunction $ControllerProvider() {\n  var controllers = {},\n      globals = false;\n\n  /**\n   * @ngdoc method\n   * @name $controllerProvider#has\n   * @param {string} name Controller name to check.\n   */\n  this.has = function(name) {\n    return controllers.hasOwnProperty(name);\n  };\n\n  /**\n   * @ngdoc method\n   * @name $controllerProvider#register\n   * @param {string|Object} name Controller name, or an object map of controllers where the keys are\n   *    the names and the values are the constructors.\n   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\n   *    annotations in the array notation).\n   */\n  this.register = function(name, constructor) {\n    assertNotHasOwnProperty(name, 'controller');\n    if (isObject(name)) {\n      extend(controllers, name);\n    } else {\n      controllers[name] = constructor;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $controllerProvider#allowGlobals\n   * @description If called, allows `$controller` to find controller constructors on `window`\n   *\n   * @deprecated\n   * sinceVersion=\"v1.3.0\"\n   * removeVersion=\"v1.7.0\"\n   * This method of finding controllers has been deprecated.\n   */\n  this.allowGlobals = function() {\n    globals = true;\n  };\n\n\n  this.$get = ['$injector', '$window', function($injector, $window) {\n\n    /**\n     * @ngdoc service\n     * @name $controller\n     * @requires $injector\n     *\n     * @param {Function|string} constructor If called with a function then it's considered to be the\n     *    controller constructor function. Otherwise it's considered to be a string which is used\n     *    to retrieve the controller constructor using the following steps:\n     *\n     *    * check if a controller with given name is registered via `$controllerProvider`\n     *    * check if evaluating the string on the current scope returns a constructor\n     *    * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\n     *      `window` object (deprecated, not recommended)\n     *\n     *    The string can use the `controller as property` syntax, where the controller instance is published\n     *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\n     *    to work correctly.\n     *\n     * @param {Object} locals Injection locals for Controller.\n     * @return {Object} Instance of given controller.\n     *\n     * @description\n     * `$controller` service is responsible for instantiating controllers.\n     *\n     * It's just a simple call to {@link auto.$injector $injector}, but extracted into\n     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).\n     */\n    return function $controller(expression, locals, later, ident) {\n      // PRIVATE API:\n      //   param `later` --- indicates that the controller's constructor is invoked at a later time.\n      //                     If true, $controller will allocate the object with the correct\n      //                     prototype chain, but will not invoke the controller until a returned\n      //                     callback is invoked.\n      //   param `ident` --- An optional label which overrides the label parsed from the controller\n      //                     expression, if any.\n      var instance, match, constructor, identifier;\n      later = later === true;\n      if (ident && isString(ident)) {\n        identifier = ident;\n      }\n\n      if (isString(expression)) {\n        match = expression.match(CNTRL_REG);\n        if (!match) {\n          throw $controllerMinErr('ctrlfmt',\n            'Badly formed controller string \\'{0}\\'. ' +\n            'Must match `__name__ as __id__` or `__name__`.', expression);\n        }\n        constructor = match[1];\n        identifier = identifier || match[3];\n        expression = controllers.hasOwnProperty(constructor)\n            ? controllers[constructor]\n            : getter(locals.$scope, constructor, true) ||\n                (globals ? getter($window, constructor, true) : undefined);\n\n        if (!expression) {\n          throw $controllerMinErr('ctrlreg',\n            'The controller with the name \\'{0}\\' is not registered.', constructor);\n        }\n\n        assertArgFn(expression, constructor, true);\n      }\n\n      if (later) {\n        // Instantiate controller later:\n        // This machinery is used to create an instance of the object before calling the\n        // controller's constructor itself.\n        //\n        // This allows properties to be added to the controller before the constructor is\n        // invoked. Primarily, this is used for isolate scope bindings in $compile.\n        //\n        // This feature is not intended for use by applications, and is thus not documented\n        // publicly.\n        // Object creation: http://jsperf.com/create-constructor/2\n        var controllerPrototype = (isArray(expression) ?\n          expression[expression.length - 1] : expression).prototype;\n        instance = Object.create(controllerPrototype || null);\n\n        if (identifier) {\n          addIdentifier(locals, identifier, instance, constructor || expression.name);\n        }\n\n        return extend(function $controllerInit() {\n          var result = $injector.invoke(expression, instance, locals, constructor);\n          if (result !== instance && (isObject(result) || isFunction(result))) {\n            instance = result;\n            if (identifier) {\n              // If result changed, re-assign controllerAs value to scope.\n              addIdentifier(locals, identifier, instance, constructor || expression.name);\n            }\n          }\n          return instance;\n        }, {\n          instance: instance,\n          identifier: identifier\n        });\n      }\n\n      instance = $injector.instantiate(expression, locals, constructor);\n\n      if (identifier) {\n        addIdentifier(locals, identifier, instance, constructor || expression.name);\n      }\n\n      return instance;\n    };\n\n    function addIdentifier(locals, identifier, instance, name) {\n      if (!(locals && isObject(locals.$scope))) {\n        throw minErr('$controller')('noscp',\n          'Cannot export controller \\'{0}\\' as \\'{1}\\'! No $scope object provided via `locals`.',\n          name, identifier);\n      }\n\n      locals.$scope[identifier] = instance;\n    }\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $document\n * @requires $window\n * @this\n *\n * @description\n * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.\n *\n * @example\n   <example module=\"documentExample\" name=\"document\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <p>$document title: <b ng-bind=\"title\"></b></p>\n         <p>window.document title: <b ng-bind=\"windowTitle\"></b></p>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('documentExample', [])\n         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {\n           $scope.title = $document[0].title;\n           $scope.windowTitle = angular.element(window.document)[0].title;\n         }]);\n     </file>\n   </example>\n */\nfunction $DocumentProvider() {\n  this.$get = ['$window', function(window) {\n    return jqLite(window.document);\n  }];\n}\n\n\n/**\n * @private\n * @this\n * Listens for document visibility change and makes the current status accessible.\n */\nfunction $$IsDocumentHiddenProvider() {\n  this.$get = ['$document', '$rootScope', function($document, $rootScope) {\n    var doc = $document[0];\n    var hidden = doc && doc.hidden;\n\n    $document.on('visibilitychange', changeListener);\n\n    $rootScope.$on('$destroy', function() {\n      $document.off('visibilitychange', changeListener);\n    });\n\n    function changeListener() {\n      hidden = doc.hidden;\n    }\n\n    return function() {\n      return hidden;\n    };\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $exceptionHandler\n * @requires ng.$log\n * @this\n *\n * @description\n * Any uncaught exception in angular expressions is delegated to this service.\n * The default implementation simply delegates to `$log.error` which logs it into\n * the browser console.\n *\n * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n *\n * ## Example:\n *\n * The example below will overwrite the default `$exceptionHandler` in order to (a) log uncaught\n * errors to the backend for later inspection by the developers and (b) to use `$log.warn()` instead\n * of `$log.error()`.\n *\n * ```js\n *   angular.\n *     module('exceptionOverwrite', []).\n *     factory('$exceptionHandler', ['$log', 'logErrorsToBackend', function($log, logErrorsToBackend) {\n *       return function myExceptionHandler(exception, cause) {\n *         logErrorsToBackend(exception, cause);\n *         $log.warn(exception, cause);\n *       };\n *     }]);\n * ```\n *\n * <hr />\n * Note, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`\n * methods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}\n * (unless executed during a digest).\n *\n * If you wish, you can manually delegate exceptions, e.g.\n * `try { ... } catch(e) { $exceptionHandler(e); }`\n *\n * @param {Error} exception Exception associated with the error.\n * @param {string=} cause Optional information about the context in which\n *       the error was thrown.\n *\n */\nfunction $ExceptionHandlerProvider() {\n  this.$get = ['$log', function($log) {\n    return function(exception, cause) {\n      $log.error.apply($log, arguments);\n    };\n  }];\n}\n\nvar $$ForceReflowProvider = /** @this */ function() {\n  this.$get = ['$document', function($document) {\n    return function(domNode) {\n      //the line below will force the browser to perform a repaint so\n      //that all the animated elements within the animation frame will\n      //be properly updated and drawn on screen. This is required to\n      //ensure that the preparation animation is properly flushed so that\n      //the active state picks up from there. DO NOT REMOVE THIS LINE.\n      //DO NOT OPTIMIZE THIS LINE. THE MINIFIER WILL REMOVE IT OTHERWISE WHICH\n      //WILL RESULT IN AN UNPREDICTABLE BUG THAT IS VERY HARD TO TRACK DOWN AND\n      //WILL TAKE YEARS AWAY FROM YOUR LIFE.\n      if (domNode) {\n        if (!domNode.nodeType && domNode instanceof jqLite) {\n          domNode = domNode[0];\n        }\n      } else {\n        domNode = $document[0].body;\n      }\n      return domNode.offsetWidth + 1;\n    };\n  }];\n};\n\nvar APPLICATION_JSON = 'application/json';\nvar CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': APPLICATION_JSON + ';charset=utf-8'};\nvar JSON_START = /^\\[|^\\{(?!\\{)/;\nvar JSON_ENDS = {\n  '[': /]$/,\n  '{': /}$/\n};\nvar JSON_PROTECTION_PREFIX = /^\\)]\\}',?\\n/;\nvar $httpMinErr = minErr('$http');\n\nfunction serializeValue(v) {\n  if (isObject(v)) {\n    return isDate(v) ? v.toISOString() : toJson(v);\n  }\n  return v;\n}\n\n\n/** @this */\nfunction $HttpParamSerializerProvider() {\n  /**\n   * @ngdoc service\n   * @name $httpParamSerializer\n   * @description\n   *\n   * Default {@link $http `$http`} params serializer that converts objects to strings\n   * according to the following rules:\n   *\n   * * `{'foo': 'bar'}` results in `foo=bar`\n   * * `{'foo': Date.now()}` results in `foo=2015-04-01T09%3A50%3A49.262Z` (`toISOString()` and encoded representation of a Date object)\n   * * `{'foo': ['bar', 'baz']}` results in `foo=bar&foo=baz` (repeated key for each array element)\n   * * `{'foo': {'bar':'baz'}}` results in `foo=%7B%22bar%22%3A%22baz%22%7D` (stringified and encoded representation of an object)\n   *\n   * Note that serializer will sort the request parameters alphabetically.\n   * */\n\n  this.$get = function() {\n    return function ngParamSerializer(params) {\n      if (!params) return '';\n      var parts = [];\n      forEachSorted(params, function(value, key) {\n        if (value === null || isUndefined(value)) return;\n        if (isArray(value)) {\n          forEach(value, function(v) {\n            parts.push(encodeUriQuery(key)  + '=' + encodeUriQuery(serializeValue(v)));\n          });\n        } else {\n          parts.push(encodeUriQuery(key) + '=' + encodeUriQuery(serializeValue(value)));\n        }\n      });\n\n      return parts.join('&');\n    };\n  };\n}\n\n/** @this */\nfunction $HttpParamSerializerJQLikeProvider() {\n  /**\n   * @ngdoc service\n   * @name $httpParamSerializerJQLike\n   *\n   * @description\n   *\n   * Alternative {@link $http `$http`} params serializer that follows\n   * jQuery's [`param()`](http://api.jquery.com/jquery.param/) method logic.\n   * The serializer will also sort the params alphabetically.\n   *\n   * To use it for serializing `$http` request parameters, set it as the `paramSerializer` property:\n   *\n   * ```js\n   * $http({\n   *   url: myUrl,\n   *   method: 'GET',\n   *   params: myParams,\n   *   paramSerializer: '$httpParamSerializerJQLike'\n   * });\n   * ```\n   *\n   * It is also possible to set it as the default `paramSerializer` in the\n   * {@link $httpProvider#defaults `$httpProvider`}.\n   *\n   * Additionally, you can inject the serializer and use it explicitly, for example to serialize\n   * form data for submission:\n   *\n   * ```js\n   * .controller(function($http, $httpParamSerializerJQLike) {\n   *   //...\n   *\n   *   $http({\n   *     url: myUrl,\n   *     method: 'POST',\n   *     data: $httpParamSerializerJQLike(myData),\n   *     headers: {\n   *       'Content-Type': 'application/x-www-form-urlencoded'\n   *     }\n   *   });\n   *\n   * });\n   * ```\n   *\n   * */\n  this.$get = function() {\n    return function jQueryLikeParamSerializer(params) {\n      if (!params) return '';\n      var parts = [];\n      serialize(params, '', true);\n      return parts.join('&');\n\n      function serialize(toSerialize, prefix, topLevel) {\n        if (toSerialize === null || isUndefined(toSerialize)) return;\n        if (isArray(toSerialize)) {\n          forEach(toSerialize, function(value, index) {\n            serialize(value, prefix + '[' + (isObject(value) ? index : '') + ']');\n          });\n        } else if (isObject(toSerialize) && !isDate(toSerialize)) {\n          forEachSorted(toSerialize, function(value, key) {\n            serialize(value, prefix +\n                (topLevel ? '' : '[') +\n                key +\n                (topLevel ? '' : ']'));\n          });\n        } else {\n          parts.push(encodeUriQuery(prefix) + '=' + encodeUriQuery(serializeValue(toSerialize)));\n        }\n      }\n    };\n  };\n}\n\nfunction defaultHttpResponseTransform(data, headers) {\n  if (isString(data)) {\n    // Strip json vulnerability protection prefix and trim whitespace\n    var tempData = data.replace(JSON_PROTECTION_PREFIX, '').trim();\n\n    if (tempData) {\n      var contentType = headers('Content-Type');\n      if ((contentType && (contentType.indexOf(APPLICATION_JSON) === 0)) || isJsonLike(tempData)) {\n        data = fromJson(tempData);\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction isJsonLike(str) {\n    var jsonStart = str.match(JSON_START);\n    return jsonStart && JSON_ENDS[jsonStart[0]].test(str);\n}\n\n/**\n * Parse headers into key value object\n *\n * @param {string} headers Raw headers as a string\n * @returns {Object} Parsed headers as key value object\n */\nfunction parseHeaders(headers) {\n  var parsed = createMap(), i;\n\n  function fillInParsed(key, val) {\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  }\n\n  if (isString(headers)) {\n    forEach(headers.split('\\n'), function(line) {\n      i = line.indexOf(':');\n      fillInParsed(lowercase(trim(line.substr(0, i))), trim(line.substr(i + 1)));\n    });\n  } else if (isObject(headers)) {\n    forEach(headers, function(headerVal, headerKey) {\n      fillInParsed(lowercase(headerKey), trim(headerVal));\n    });\n  }\n\n  return parsed;\n}\n\n\n/**\n * Returns a function that provides access to parsed headers.\n *\n * Headers are lazy parsed when first requested.\n * @see parseHeaders\n *\n * @param {(string|Object)} headers Headers to provide access to.\n * @returns {function(string=)} Returns a getter function which if called with:\n *\n *   - if called with an argument returns a single header value or null\n *   - if called with no arguments returns an object containing all headers.\n */\nfunction headersGetter(headers) {\n  var headersObj;\n\n  return function(name) {\n    if (!headersObj) headersObj =  parseHeaders(headers);\n\n    if (name) {\n      var value = headersObj[lowercase(name)];\n      if (value === undefined) {\n        value = null;\n      }\n      return value;\n    }\n\n    return headersObj;\n  };\n}\n\n\n/**\n * Chain all given functions\n *\n * This function is used for both request and response transforming\n *\n * @param {*} data Data to transform.\n * @param {function(string=)} headers HTTP headers getter fn.\n * @param {number} status HTTP status code of the response.\n * @param {(Function|Array.<Function>)} fns Function or an array of functions.\n * @returns {*} Transformed data.\n */\nfunction transformData(data, headers, status, fns) {\n  if (isFunction(fns)) {\n    return fns(data, headers, status);\n  }\n\n  forEach(fns, function(fn) {\n    data = fn(data, headers, status);\n  });\n\n  return data;\n}\n\n\nfunction isSuccess(status) {\n  return 200 <= status && status < 300;\n}\n\n\n/**\n * @ngdoc provider\n * @name $httpProvider\n * @this\n *\n * @description\n * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.\n * */\nfunction $HttpProvider() {\n  /**\n   * @ngdoc property\n   * @name $httpProvider#defaults\n   * @description\n   *\n   * Object containing default values for all {@link ng.$http $http} requests.\n   *\n   * - **`defaults.cache`** - {boolean|Object} - A boolean value or object created with\n   * {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of HTTP responses\n   * by default. See {@link $http#caching $http Caching} for more information.\n   *\n   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\n   * Defaults value is `'XSRF-TOKEN'`.\n   *\n   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\n   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n   *\n   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.\n   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on\n   * setting default headers.\n   *     - **`defaults.headers.common`**\n   *     - **`defaults.headers.post`**\n   *     - **`defaults.headers.put`**\n   *     - **`defaults.headers.patch`**\n   *\n   *\n   * - **`defaults.paramSerializer`** - `{string|function(Object<string,string>):string}` - A function\n   *  used to the prepare string representation of request parameters (specified as an object).\n   *  If specified as string, it is interpreted as a function registered with the {@link auto.$injector $injector}.\n   *  Defaults to {@link ng.$httpParamSerializer $httpParamSerializer}.\n   *\n   * - **`defaults.jsonpCallbackParam`** - `{string}` - the name of the query parameter that passes the name of the\n   * callback in a JSONP request. The value of this parameter will be replaced with the expression generated by the\n   * {@link $jsonpCallbacks} service. Defaults to `'callback'`.\n   *\n   **/\n  var defaults = this.defaults = {\n    // transform incoming response data\n    transformResponse: [defaultHttpResponseTransform],\n\n    // transform outgoing request data\n    transformRequest: [function(d) {\n      return isObject(d) && !isFile(d) && !isBlob(d) && !isFormData(d) ? toJson(d) : d;\n    }],\n\n    // default headers\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*'\n      },\n      post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n      put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n      patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)\n    },\n\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN',\n\n    paramSerializer: '$httpParamSerializer',\n\n    jsonpCallbackParam: 'callback'\n  };\n\n  var useApplyAsync = false;\n  /**\n   * @ngdoc method\n   * @name $httpProvider#useApplyAsync\n   * @description\n   *\n   * Configure $http service to combine processing of multiple http responses received at around\n   * the same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in\n   * significant performance improvement for bigger applications that make many HTTP requests\n   * concurrently (common during application bootstrap).\n   *\n   * Defaults to false. If no value is specified, returns the current configured value.\n   *\n   * @param {boolean=} value If true, when requests are loaded, they will schedule a deferred\n   *    \"apply\" on the next tick, giving time for subsequent requests in a roughly ~10ms window\n   *    to load and share the same digest cycle.\n   *\n   * @returns {boolean|Object} If a value is specified, returns the $httpProvider for chaining.\n   *    otherwise, returns the current configured value.\n   **/\n  this.useApplyAsync = function(value) {\n    if (isDefined(value)) {\n      useApplyAsync = !!value;\n      return this;\n    }\n    return useApplyAsync;\n  };\n\n  /**\n   * @ngdoc property\n   * @name $httpProvider#interceptors\n   * @description\n   *\n   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}\n   * pre-processing of request or postprocessing of responses.\n   *\n   * These service factories are ordered by request, i.e. they are applied in the same order as the\n   * array, on request, but reverse order, on response.\n   *\n   * {@link ng.$http#interceptors Interceptors detailed info}\n   **/\n  var interceptorFactories = this.interceptors = [];\n\n  this.$get = ['$browser', '$httpBackend', '$$cookieReader', '$cacheFactory', '$rootScope', '$q', '$injector', '$sce',\n      function($browser, $httpBackend, $$cookieReader, $cacheFactory, $rootScope, $q, $injector, $sce) {\n\n    var defaultCache = $cacheFactory('$http');\n\n    /**\n     * Make sure that default param serializer is exposed as a function\n     */\n    defaults.paramSerializer = isString(defaults.paramSerializer) ?\n      $injector.get(defaults.paramSerializer) : defaults.paramSerializer;\n\n    /**\n     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.\n     * The reversal is needed so that we can build up the interception chain around the\n     * server request.\n     */\n    var reversedInterceptors = [];\n\n    forEach(interceptorFactories, function(interceptorFactory) {\n      reversedInterceptors.unshift(isString(interceptorFactory)\n          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));\n    });\n\n    /**\n     * @ngdoc service\n     * @kind function\n     * @name $http\n     * @requires ng.$httpBackend\n     * @requires $cacheFactory\n     * @requires $rootScope\n     * @requires $q\n     * @requires $injector\n     *\n     * @description\n     * The `$http` service is a core Angular service that facilitates communication with the remote\n     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)\n     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).\n     *\n     * For unit testing applications that use `$http` service, see\n     * {@link ngMock.$httpBackend $httpBackend mock}.\n     *\n     * For a higher level of abstraction, please check out the {@link ngResource.$resource\n     * $resource} service.\n     *\n     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\n     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\n     * it is important to familiarize yourself with these APIs and the guarantees they provide.\n     *\n     *\n     * ## General usage\n     * The `$http` service is a function which takes a single argument — a {@link $http#usage configuration object} —\n     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}.\n     *\n     * ```js\n     *   // Simple GET request example:\n     *   $http({\n     *     method: 'GET',\n     *     url: '/someUrl'\n     *   }).then(function successCallback(response) {\n     *       // this callback will be called asynchronously\n     *       // when the response is available\n     *     }, function errorCallback(response) {\n     *       // called asynchronously if an error occurs\n     *       // or server returns response with an error status.\n     *     });\n     * ```\n     *\n     * The response object has these properties:\n     *\n     *   - **data** – `{string|Object}` – The response body transformed with the transform\n     *     functions.\n     *   - **status** – `{number}` – HTTP status code of the response.\n     *   - **headers** – `{function([headerName])}` – Header getter function.\n     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\n     *   - **statusText** – `{string}` – HTTP status text of the response.\n     *\n     * A response status code between 200 and 299 is considered a success status and will result in\n     * the success callback being called. Any response status code outside of that range is\n     * considered an error status and will result in the error callback being called.\n     * Also, status codes less than -1 are normalized to zero. -1 usually means the request was\n     * aborted, e.g. using a `config.timeout`.\n     * Note that if the response is a redirect, XMLHttpRequest will transparently follow it, meaning\n     * that the outcome (success or error) will be determined by the final response status code.\n     *\n     *\n     * ## Shortcut methods\n     *\n     * Shortcut methods are also available. All shortcut methods require passing in the URL, and\n     * request data must be passed in for POST/PUT requests. An optional config can be passed as the\n     * last argument.\n     *\n     * ```js\n     *   $http.get('/someUrl', config).then(successCallback, errorCallback);\n     *   $http.post('/someUrl', data, config).then(successCallback, errorCallback);\n     * ```\n     *\n     * Complete list of shortcut methods:\n     *\n     * - {@link ng.$http#get $http.get}\n     * - {@link ng.$http#head $http.head}\n     * - {@link ng.$http#post $http.post}\n     * - {@link ng.$http#put $http.put}\n     * - {@link ng.$http#delete $http.delete}\n     * - {@link ng.$http#jsonp $http.jsonp}\n     * - {@link ng.$http#patch $http.patch}\n     *\n     *\n     * ## Writing Unit Tests that use $http\n     * When unit testing (using {@link ngMock ngMock}), it is necessary to call\n     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending\n     * request using trained responses.\n     *\n     * ```\n     * $httpBackend.expectGET(...);\n     * $http.get(...);\n     * $httpBackend.flush();\n     * ```\n     *\n     * ## Setting HTTP Headers\n     *\n     * The $http service will automatically add certain HTTP headers to all requests. These defaults\n     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\n     * object, which currently contains this default configuration:\n     *\n     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n     *   - <code>Accept: application/json, text/plain, \\*&#65279;/&#65279;\\*</code>\n     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n     *   - `Content-Type: application/json`\n     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n     *   - `Content-Type: application/json`\n     *\n     * To add or overwrite these defaults, simply add or remove a property from these configuration\n     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\n     * with the lowercased HTTP method name as the key, e.g.\n     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }`.\n     *\n     * The defaults can also be set at runtime via the `$http.defaults` object in the same\n     * fashion. For example:\n     *\n     * ```\n     * module.run(function($http) {\n     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w';\n     * });\n     * ```\n     *\n     * In addition, you can supply a `headers` property in the config object passed when\n     * calling `$http(config)`, which overrides the defaults without changing them globally.\n     *\n     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,\n     * Use the `headers` property, setting the desired header to `undefined`. For example:\n     *\n     * ```js\n     * var req = {\n     *  method: 'POST',\n     *  url: 'http://example.com',\n     *  headers: {\n     *    'Content-Type': undefined\n     *  },\n     *  data: { test: 'test' }\n     * }\n     *\n     * $http(req).then(function(){...}, function(){...});\n     * ```\n     *\n     * ## Transforming Requests and Responses\n     *\n     * Both requests and responses can be transformed using transformation functions: `transformRequest`\n     * and `transformResponse`. These properties can be a single function that returns\n     * the transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,\n     * which allows you to `push` or `unshift` a new transformation function into the transformation chain.\n     *\n     * <div class=\"alert alert-warning\">\n     * **Note:** Angular does not make a copy of the `data` parameter before it is passed into the `transformRequest` pipeline.\n     * That means changes to the properties of `data` are not local to the transform function (since Javascript passes objects by reference).\n     * For example, when calling `$http.get(url, $scope.myObject)`, modifications to the object's properties in a transformRequest\n     * function will be reflected on the scope and in any templates where the object is data-bound.\n     * To prevent this, transform functions should have no side-effects.\n     * If you need to modify properties, it is recommended to make a copy of the data, or create new object to return.\n     * </div>\n     *\n     * ### Default Transformations\n     *\n     * The `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and\n     * `defaults.transformResponse` properties. If a request does not provide its own transformations\n     * then these will be applied.\n     *\n     * You can augment or replace the default transformations by modifying these properties by adding to or\n     * replacing the array.\n     *\n     * Angular provides the following default transformations:\n     *\n     * Request transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`):\n     *\n     * - If the `data` property of the request configuration object contains an object, serialize it\n     *   into JSON format.\n     *\n     * Response transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`):\n     *\n     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\n     *  - If JSON response is detected, deserialize it using a JSON parser.\n     *\n     *\n     * ### Overriding the Default Transformations Per Request\n     *\n     * If you wish to override the request/response transformations only for a single request then provide\n     * `transformRequest` and/or `transformResponse` properties on the configuration object passed\n     * into `$http`.\n     *\n     * Note that if you provide these properties on the config object the default transformations will be\n     * overwritten. If you wish to augment the default transformations then you must include them in your\n     * local transformation array.\n     *\n     * The following code demonstrates adding a new response transformation to be run after the default response\n     * transformations have been run.\n     *\n     * ```js\n     * function appendTransform(defaults, transform) {\n     *\n     *   // We can't guarantee that the default transformation is an array\n     *   defaults = angular.isArray(defaults) ? defaults : [defaults];\n     *\n     *   // Append the new transformation to the defaults\n     *   return defaults.concat(transform);\n     * }\n     *\n     * $http({\n     *   url: '...',\n     *   method: 'GET',\n     *   transformResponse: appendTransform($http.defaults.transformResponse, function(value) {\n     *     return doTransform(value);\n     *   })\n     * });\n     * ```\n     *\n     *\n     * ## Caching\n     *\n     * {@link ng.$http `$http`} responses are not cached by default. To enable caching, you must\n     * set the config.cache value or the default cache value to TRUE or to a cache object (created\n     * with {@link ng.$cacheFactory `$cacheFactory`}). If defined, the value of config.cache takes\n     * precedence over the default cache value.\n     *\n     * In order to:\n     *   * cache all responses - set the default cache value to TRUE or to a cache object\n     *   * cache a specific response - set config.cache value to TRUE or to a cache object\n     *\n     * If caching is enabled, but neither the default cache nor config.cache are set to a cache object,\n     * then the default `$cacheFactory(\"$http\")` object is used.\n     *\n     * The default cache value can be set by updating the\n     * {@link ng.$http#defaults `$http.defaults.cache`} property or the\n     * {@link $httpProvider#defaults `$httpProvider.defaults.cache`} property.\n     *\n     * When caching is enabled, {@link ng.$http `$http`} stores the response from the server using\n     * the relevant cache object. The next time the same request is made, the response is returned\n     * from the cache without sending a request to the server.\n     *\n     * Take note that:\n     *\n     *   * Only GET and JSONP requests are cached.\n     *   * The cache key is the request URL including search parameters; headers are not considered.\n     *   * Cached responses are returned asynchronously, in the same way as responses from the server.\n     *   * If multiple identical requests are made using the same cache, which is not yet populated,\n     *     one request will be made to the server and remaining requests will return the same response.\n     *   * A cache-control header on the response does not affect if or how responses are cached.\n     *\n     *\n     * ## Interceptors\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication, or any kind of synchronous or\n     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be\n     * able to intercept requests before they are handed to the server and\n     * responses before they are handed over to the application code that\n     * initiated these requests. The interceptors leverage the {@link ng.$q\n     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\n     *\n     * The interceptors are service factories that are registered with the `$httpProvider` by\n     * adding them to the `$httpProvider.interceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor.\n     *\n     * There are two kinds of interceptors (and two kinds of rejection interceptors):\n     *\n     *   * `request`: interceptors get called with a http {@link $http#usage config} object. The function is free to\n     *     modify the `config` object or create a new one. The function needs to return the `config`\n     *     object directly, or a promise containing the `config` or a new `config` object.\n     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or\n     *     resolved with a rejection.\n     *   * `response`: interceptors get called with http `response` object. The function is free to\n     *     modify the `response` object or create a new one. The function needs to return the `response`\n     *     object directly, or as a promise containing the `response` or a new `response` object.\n     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or\n     *     resolved with a rejection.\n     *\n     *\n     * ```js\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return {\n     *       // optional method\n     *       'request': function(config) {\n     *         // do something on success\n     *         return config;\n     *       },\n     *\n     *       // optional method\n     *      'requestError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       },\n     *\n     *\n     *\n     *       // optional method\n     *       'response': function(response) {\n     *         // do something on success\n     *         return response;\n     *       },\n     *\n     *       // optional method\n     *      'responseError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       }\n     *     };\n     *   });\n     *\n     *   $httpProvider.interceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // alternatively, register the interceptor via an anonymous factory\n     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\n     *     return {\n     *      'request': function(config) {\n     *          // same as above\n     *       },\n     *\n     *       'response': function(response) {\n     *          // same as above\n     *       }\n     *     };\n     *   });\n     * ```\n     *\n     * ## Security Considerations\n     *\n     * When designing web applications, consider security threats from:\n     *\n     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n     *\n     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\n     * pre-configured with strategies that address these issues, but for this to work backend server\n     * cooperation is required.\n     *\n     * ### JSON Vulnerability Protection\n     *\n     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n     * allows third party website to turn your JSON resource URL into\n     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To\n     * counter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\n     * Angular will automatically strip the prefix before processing it as JSON.\n     *\n     * For example if your server needs to return:\n     * ```js\n     * ['one','two']\n     * ```\n     *\n     * which is vulnerable to attack, your server can return:\n     * ```js\n     * )]}',\n     * ['one','two']\n     * ```\n     *\n     * Angular will strip the prefix, before processing the JSON.\n     *\n     *\n     * ### Cross Site Request Forgery (XSRF) Protection\n     *\n     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is an attack technique by\n     * which the attacker can trick an authenticated user into unknowingly executing actions on your\n     * website. Angular provides a mechanism to counter XSRF. When performing XHR requests, the\n     * $http service reads a token from a cookie (by default, `XSRF-TOKEN`) and sets it as an HTTP\n     * header (`X-XSRF-TOKEN`). Since only JavaScript that runs on your domain could read the\n     * cookie, your server can be assured that the XHR came from JavaScript running on your domain.\n     * The header will not be set for cross-domain requests.\n     *\n     * To take advantage of this, your server needs to set a token in a JavaScript readable session\n     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\n     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\n     * that only JavaScript running on your domain could have sent the request. The token must be\n     * unique for each user and must be verifiable by the server (to prevent the JavaScript from\n     * making up its own tokens). We recommend that the token is a digest of your site's\n     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)\n     * for added security.\n     *\n     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\n     * properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,\n     * or the per-request config object.\n     *\n     * In order to prevent collisions in environments where multiple Angular apps share the\n     * same domain or subdomain, we recommend that each application uses unique cookie name.\n     *\n     * @param {object} config Object describing the request to be made and how it should be\n     *    processed. The object has following properties:\n     *\n     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n     *    - **url** – `{string|TrustedObject}` – Absolute or relative URL of the resource that is being requested;\n     *      or an object created by a call to `$sce.trustAsResourceUrl(url)`.\n     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be serialized\n     *      with the `paramSerializer` and appended as GET parameters.\n     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\n     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing\n     *      HTTP headers to send to the server. If the return value of a function is null, the\n     *      header will not be sent. Functions accept a config object as an argument.\n     *    - **eventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest object.\n     *      To bind events to the XMLHttpRequest upload object, use `uploadEventHandlers`.\n     *      The handler will be called in the context of a `$apply` block.\n     *    - **uploadEventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest upload\n     *      object. To bind events to the XMLHttpRequest object, use `eventHandlers`.\n     *      The handler will be called in the context of a `$apply` block.\n     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\n     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\n     *    - **transformRequest** –\n     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      request body and headers and returns its transformed (typically serialized) version.\n     *      See {@link ng.$http#overriding-the-default-transformations-per-request\n     *      Overriding the Default Transformations}\n     *    - **transformResponse** –\n     *      `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      response body, headers and status and returns its transformed (typically deserialized) version.\n     *      See {@link ng.$http#overriding-the-default-transformations-per-request\n     *      Overriding the Default Transformations}\n     *    - **paramSerializer** - `{string|function(Object<string,string>):string}` - A function used to\n     *      prepare the string representation of request parameters (specified as an object).\n     *      If specified as string, it is interpreted as function registered with the\n     *      {@link $injector $injector}, which means you can create your own serializer\n     *      by registering it as a {@link auto.$provide#service service}.\n     *      The default serializer is the {@link $httpParamSerializer $httpParamSerializer};\n     *      alternatively, you can use the {@link $httpParamSerializerJQLike $httpParamSerializerJQLike}\n     *    - **cache** – `{boolean|Object}` – A boolean value or object created with\n     *      {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of the HTTP response.\n     *      See {@link $http#caching $http Caching} for more information.\n     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\n     *      that should abort the request when resolved.\n     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the\n     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)\n     *      for more information.\n     *    - **responseType** - `{string}` - see\n     *      [XMLHttpRequest.responseType](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype).\n     *\n     * @returns {HttpPromise} Returns a {@link ng.$q `Promise}` that will be resolved to a response object\n     *                        when the request succeeds or fails.\n     *\n     *\n     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\n     *   requests. This is primarily meant to be used for debugging purposes.\n     *\n     *\n     * @example\n<example module=\"httpExample\" name=\"http-service\">\n<file name=\"index.html\">\n  <div ng-controller=\"FetchController\">\n    <select ng-model=\"method\" aria-label=\"Request method\">\n      <option>GET</option>\n      <option>JSONP</option>\n    </select>\n    <input type=\"text\" ng-model=\"url\" size=\"80\" aria-label=\"URL\" />\n    <button id=\"fetchbtn\" ng-click=\"fetch()\">fetch</button><br>\n    <button id=\"samplegetbtn\" ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n    <button id=\"samplejsonpbtn\"\n      ng-click=\"updateModel('JSONP',\n                    'https://angularjs.org/greet.php?name=Super%20Hero')\">\n      Sample JSONP\n    </button>\n    <button id=\"invalidjsonpbtn\"\n      ng-click=\"updateModel('JSONP', 'https://angularjs.org/doesntexist')\">\n        Invalid JSONP\n      </button>\n    <pre>http status code: {{status}}</pre>\n    <pre>http response data: {{data}}</pre>\n  </div>\n</file>\n<file name=\"script.js\">\n  angular.module('httpExample', [])\n    .config(['$sceDelegateProvider', function($sceDelegateProvider) {\n      // We must whitelist the JSONP endpoint that we are using to show that we trust it\n      $sceDelegateProvider.resourceUrlWhitelist([\n        'self',\n        'https://angularjs.org/**'\n      ]);\n    }])\n    .controller('FetchController', ['$scope', '$http', '$templateCache',\n      function($scope, $http, $templateCache) {\n        $scope.method = 'GET';\n        $scope.url = 'http-hello.html';\n\n        $scope.fetch = function() {\n          $scope.code = null;\n          $scope.response = null;\n\n          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n            then(function(response) {\n              $scope.status = response.status;\n              $scope.data = response.data;\n            }, function(response) {\n              $scope.data = response.data || 'Request failed';\n              $scope.status = response.status;\n          });\n        };\n\n        $scope.updateModel = function(method, url) {\n          $scope.method = method;\n          $scope.url = url;\n        };\n      }]);\n</file>\n<file name=\"http-hello.html\">\n  Hello, $http!\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n  var status = element(by.binding('status'));\n  var data = element(by.binding('data'));\n  var fetchBtn = element(by.id('fetchbtn'));\n  var sampleGetBtn = element(by.id('samplegetbtn'));\n  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));\n\n  it('should make an xhr GET request', function() {\n    sampleGetBtn.click();\n    fetchBtn.click();\n    expect(status.getText()).toMatch('200');\n    expect(data.getText()).toMatch(/Hello, \\$http!/);\n  });\n\n// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185\n// it('should make a JSONP request to angularjs.org', function() {\n//   var sampleJsonpBtn = element(by.id('samplejsonpbtn'));\n//   sampleJsonpBtn.click();\n//   fetchBtn.click();\n//   expect(status.getText()).toMatch('200');\n//   expect(data.getText()).toMatch(/Super Hero!/);\n// });\n\n  it('should make JSONP request to invalid URL and invoke the error handler',\n      function() {\n    invalidJsonpBtn.click();\n    fetchBtn.click();\n    expect(status.getText()).toMatch('0');\n    expect(data.getText()).toMatch('Request failed');\n  });\n</file>\n</example>\n     */\n    function $http(requestConfig) {\n\n      if (!isObject(requestConfig)) {\n        throw minErr('$http')('badreq', 'Http request configuration must be an object.  Received: {0}', requestConfig);\n      }\n\n      if (!isString($sce.valueOf(requestConfig.url))) {\n        throw minErr('$http')('badreq', 'Http request configuration url must be a string or a $sce trusted object.  Received: {0}', requestConfig.url);\n      }\n\n      var config = extend({\n        method: 'get',\n        transformRequest: defaults.transformRequest,\n        transformResponse: defaults.transformResponse,\n        paramSerializer: defaults.paramSerializer,\n        jsonpCallbackParam: defaults.jsonpCallbackParam\n      }, requestConfig);\n\n      config.headers = mergeHeaders(requestConfig);\n      config.method = uppercase(config.method);\n      config.paramSerializer = isString(config.paramSerializer) ?\n          $injector.get(config.paramSerializer) : config.paramSerializer;\n\n      $browser.$$incOutstandingRequestCount();\n\n      var requestInterceptors = [];\n      var responseInterceptors = [];\n      var promise = $q.resolve(config);\n\n      // apply interceptors\n      forEach(reversedInterceptors, function(interceptor) {\n        if (interceptor.request || interceptor.requestError) {\n          requestInterceptors.unshift(interceptor.request, interceptor.requestError);\n        }\n        if (interceptor.response || interceptor.responseError) {\n          responseInterceptors.push(interceptor.response, interceptor.responseError);\n        }\n      });\n\n      promise = chainInterceptors(promise, requestInterceptors);\n      promise = promise.then(serverRequest);\n      promise = chainInterceptors(promise, responseInterceptors);\n      promise = promise.finally(completeOutstandingRequest);\n\n      return promise;\n\n\n      function chainInterceptors(promise, interceptors) {\n        for (var i = 0, ii = interceptors.length; i < ii;) {\n          var thenFn = interceptors[i++];\n          var rejectFn = interceptors[i++];\n\n          promise = promise.then(thenFn, rejectFn);\n        }\n\n        interceptors.length = 0;\n\n        return promise;\n      }\n\n      function completeOutstandingRequest() {\n        $browser.$$completeOutstandingRequest(noop);\n      }\n\n      function executeHeaderFns(headers, config) {\n        var headerContent, processedHeaders = {};\n\n        forEach(headers, function(headerFn, header) {\n          if (isFunction(headerFn)) {\n            headerContent = headerFn(config);\n            if (headerContent != null) {\n              processedHeaders[header] = headerContent;\n            }\n          } else {\n            processedHeaders[header] = headerFn;\n          }\n        });\n\n        return processedHeaders;\n      }\n\n      function mergeHeaders(config) {\n        var defHeaders = defaults.headers,\n            reqHeaders = extend({}, config.headers),\n            defHeaderName, lowercaseDefHeaderName, reqHeaderName;\n\n        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);\n\n        // using for-in instead of forEach to avoid unnecessary iteration after header has been found\n        defaultHeadersIteration:\n        for (defHeaderName in defHeaders) {\n          lowercaseDefHeaderName = lowercase(defHeaderName);\n\n          for (reqHeaderName in reqHeaders) {\n            if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {\n              continue defaultHeadersIteration;\n            }\n          }\n\n          reqHeaders[defHeaderName] = defHeaders[defHeaderName];\n        }\n\n        // execute if header value is a function for merged headers\n        return executeHeaderFns(reqHeaders, shallowCopy(config));\n      }\n\n      function serverRequest(config) {\n        var headers = config.headers;\n        var reqData = transformData(config.data, headersGetter(headers), undefined, config.transformRequest);\n\n        // strip content-type if data is undefined\n        if (isUndefined(reqData)) {\n          forEach(headers, function(value, header) {\n            if (lowercase(header) === 'content-type') {\n              delete headers[header];\n            }\n          });\n        }\n\n        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {\n          config.withCredentials = defaults.withCredentials;\n        }\n\n        // send request\n        return sendReq(config, reqData).then(transformResponse, transformResponse);\n      }\n\n      function transformResponse(response) {\n        // make a copy since the response must be cacheable\n        var resp = extend({}, response);\n        resp.data = transformData(response.data, response.headers, response.status,\n                                  config.transformResponse);\n        return (isSuccess(response.status))\n          ? resp\n          : $q.reject(resp);\n      }\n    }\n\n    $http.pendingRequests = [];\n\n    /**\n     * @ngdoc method\n     * @name $http#get\n     *\n     * @description\n     * Shortcut method to perform `GET` request.\n     *\n     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;\n     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#delete\n     *\n     * @description\n     * Shortcut method to perform `DELETE` request.\n     *\n     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;\n     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#head\n     *\n     * @description\n     * Shortcut method to perform `HEAD` request.\n     *\n     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;\n     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#jsonp\n     *\n     * @description\n     * Shortcut method to perform `JSONP` request.\n     *\n     * Note that, since JSONP requests are sensitive because the response is given full access to the browser,\n     * the url must be declared, via {@link $sce} as a trusted resource URL.\n     * You can trust a URL by adding it to the whitelist via\n     * {@link $sceDelegateProvider#resourceUrlWhitelist  `$sceDelegateProvider.resourceUrlWhitelist`} or\n     * by explicitly trusting the URL via {@link $sce#trustAsResourceUrl `$sce.trustAsResourceUrl(url)`}.\n     *\n     * JSONP requests must specify a callback to be used in the response from the server. This callback\n     * is passed as a query parameter in the request. You must specify the name of this parameter by\n     * setting the `jsonpCallbackParam` property on the request config object.\n     *\n     * ```\n     * $http.jsonp('some/trusted/url', {jsonpCallbackParam: 'callback'})\n     * ```\n     *\n     * You can also specify a default callback parameter name in `$http.defaults.jsonpCallbackParam`.\n     * Initially this is set to `'callback'`.\n     *\n     * <div class=\"alert alert-danger\">\n     * You can no longer use the `JSON_CALLBACK` string as a placeholder for specifying where the callback\n     * parameter value should go.\n     * </div>\n     *\n     * If you would like to customise where and how the callbacks are stored then try overriding\n     * or decorating the {@link $jsonpCallbacks} service.\n     *\n     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;\n     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethods('get', 'delete', 'head', 'jsonp');\n\n    /**\n     * @ngdoc method\n     * @name $http#post\n     *\n     * @description\n     * Shortcut method to perform `POST` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#put\n     *\n     * @description\n     * Shortcut method to perform `PUT` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n     /**\n      * @ngdoc method\n      * @name $http#patch\n      *\n      * @description\n      * Shortcut method to perform `PATCH` request.\n      *\n      * @param {string} url Relative or absolute URL specifying the destination of the request\n      * @param {*} data Request content\n      * @param {Object=} config Optional configuration object\n      * @returns {HttpPromise} Future object\n      */\n    createShortMethodsWithData('post', 'put', 'patch');\n\n        /**\n         * @ngdoc property\n         * @name $http#defaults\n         *\n         * @description\n         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\n         * default headers, withCredentials as well as request and response transformations.\n         *\n         * See \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.\n         */\n    $http.defaults = defaults;\n\n\n    return $http;\n\n\n    function createShortMethods(names) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, config) {\n          return $http(extend({}, config || {}, {\n            method: name,\n            url: url\n          }));\n        };\n      });\n    }\n\n\n    function createShortMethodsWithData(name) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, data, config) {\n          return $http(extend({}, config || {}, {\n            method: name,\n            url: url,\n            data: data\n          }));\n        };\n      });\n    }\n\n\n    /**\n     * Makes the request.\n     *\n     * !!! ACCESSES CLOSURE VARS:\n     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests\n     */\n    function sendReq(config, reqData) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          cache,\n          cachedResp,\n          reqHeaders = config.headers,\n          isJsonp = lowercase(config.method) === 'jsonp',\n          url = config.url;\n\n      if (isJsonp) {\n        // JSONP is a pretty sensitive operation where we're allowing a script to have full access to\n        // our DOM and JS space.  So we require that the URL satisfies SCE.RESOURCE_URL.\n        url = $sce.getTrustedResourceUrl(url);\n      } else if (!isString(url)) {\n        // If it is not a string then the URL must be a $sce trusted object\n        url = $sce.valueOf(url);\n      }\n\n      url = buildUrl(url, config.paramSerializer(config.params));\n\n      if (isJsonp) {\n        // Check the url and add the JSONP callback placeholder\n        url = sanitizeJsonpCallbackParam(url, config.jsonpCallbackParam);\n      }\n\n      $http.pendingRequests.push(config);\n      promise.then(removePendingReq, removePendingReq);\n\n      if ((config.cache || defaults.cache) && config.cache !== false &&\n          (config.method === 'GET' || config.method === 'JSONP')) {\n        cache = isObject(config.cache) ? config.cache\n            : isObject(/** @type {?} */ (defaults).cache)\n              ? /** @type {?} */ (defaults).cache\n              : defaultCache;\n      }\n\n      if (cache) {\n        cachedResp = cache.get(url);\n        if (isDefined(cachedResp)) {\n          if (isPromiseLike(cachedResp)) {\n            // cached request has already been sent, but there is no response yet\n            cachedResp.then(resolvePromiseWithResult, resolvePromiseWithResult);\n          } else {\n            // serving from cache\n            if (isArray(cachedResp)) {\n              resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]);\n            } else {\n              resolvePromise(cachedResp, 200, {}, 'OK');\n            }\n          }\n        } else {\n          // put the promise for the non-transformed response into cache as a placeholder\n          cache.put(url, promise);\n        }\n      }\n\n\n      // if we won't have the response in cache, set the xsrf headers and\n      // send the request to the backend\n      if (isUndefined(cachedResp)) {\n        var xsrfValue = urlIsSameOrigin(config.url)\n            ? $$cookieReader()[config.xsrfCookieName || defaults.xsrfCookieName]\n            : undefined;\n        if (xsrfValue) {\n          reqHeaders[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;\n        }\n\n        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\n            config.withCredentials, config.responseType,\n            createApplyHandlers(config.eventHandlers),\n            createApplyHandlers(config.uploadEventHandlers));\n      }\n\n      return promise;\n\n      function createApplyHandlers(eventHandlers) {\n        if (eventHandlers) {\n          var applyHandlers = {};\n          forEach(eventHandlers, function(eventHandler, key) {\n            applyHandlers[key] = function(event) {\n              if (useApplyAsync) {\n                $rootScope.$applyAsync(callEventHandler);\n              } else if ($rootScope.$$phase) {\n                callEventHandler();\n              } else {\n                $rootScope.$apply(callEventHandler);\n              }\n\n              function callEventHandler() {\n                eventHandler(event);\n              }\n            };\n          });\n          return applyHandlers;\n        }\n      }\n\n\n      /**\n       * Callback registered to $httpBackend():\n       *  - caches the response if desired\n       *  - resolves the raw $http promise\n       *  - calls $apply\n       */\n      function done(status, response, headersString, statusText) {\n        if (cache) {\n          if (isSuccess(status)) {\n            cache.put(url, [status, response, parseHeaders(headersString), statusText]);\n          } else {\n            // remove promise from the cache\n            cache.remove(url);\n          }\n        }\n\n        function resolveHttpPromise() {\n          resolvePromise(response, status, headersString, statusText);\n        }\n\n        if (useApplyAsync) {\n          $rootScope.$applyAsync(resolveHttpPromise);\n        } else {\n          resolveHttpPromise();\n          if (!$rootScope.$$phase) $rootScope.$apply();\n        }\n      }\n\n\n      /**\n       * Resolves the raw $http promise.\n       */\n      function resolvePromise(response, status, headers, statusText) {\n        //status: HTTP response status code, 0, -1 (aborted by timeout / promise)\n        status = status >= -1 ? status : 0;\n\n        (isSuccess(status) ? deferred.resolve : deferred.reject)({\n          data: response,\n          status: status,\n          headers: headersGetter(headers),\n          config: config,\n          statusText: statusText\n        });\n      }\n\n      function resolvePromiseWithResult(result) {\n        resolvePromise(result.data, result.status, shallowCopy(result.headers()), result.statusText);\n      }\n\n      function removePendingReq() {\n        var idx = $http.pendingRequests.indexOf(config);\n        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\n      }\n    }\n\n\n    function buildUrl(url, serializedParams) {\n      if (serializedParams.length > 0) {\n        url += ((url.indexOf('?') === -1) ? '?' : '&') + serializedParams;\n      }\n      return url;\n    }\n\n    function sanitizeJsonpCallbackParam(url, key) {\n      if (/[&?][^=]+=JSON_CALLBACK/.test(url)) {\n        // Throw if the url already contains a reference to JSON_CALLBACK\n        throw $httpMinErr('badjsonp', 'Illegal use of JSON_CALLBACK in url, \"{0}\"', url);\n      }\n\n      var callbackParamRegex = new RegExp('[&?]' + key + '=');\n      if (callbackParamRegex.test(url)) {\n        // Throw if the callback param was already provided\n        throw $httpMinErr('badjsonp', 'Illegal use of callback param, \"{0}\", in url, \"{1}\"', key, url);\n      }\n\n      // Add in the JSON_CALLBACK callback param value\n      url += ((url.indexOf('?') === -1) ? '?' : '&') + key + '=JSON_CALLBACK';\n\n      return url;\n    }\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $xhrFactory\n * @this\n *\n * @description\n * Factory function used to create XMLHttpRequest objects.\n *\n * Replace or decorate this service to create your own custom XMLHttpRequest objects.\n *\n * ```\n * angular.module('myApp', [])\n * .factory('$xhrFactory', function() {\n *   return function createXhr(method, url) {\n *     return new window.XMLHttpRequest({mozSystem: true});\n *   };\n * });\n * ```\n *\n * @param {string} method HTTP method of the request (GET, POST, PUT, ..)\n * @param {string} url URL of the request.\n */\nfunction $xhrFactoryProvider() {\n  this.$get = function() {\n    return function createXhr() {\n      return new window.XMLHttpRequest();\n    };\n  };\n}\n\n/**\n * @ngdoc service\n * @name $httpBackend\n * @requires $jsonpCallbacks\n * @requires $document\n * @requires $xhrFactory\n * @this\n *\n * @description\n * HTTP backend used by the {@link ng.$http service} that delegates to\n * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\n *\n * You should never need to use this service directly, instead use the higher-level abstractions:\n * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\n *\n * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\n * $httpBackend} which can be trained with responses.\n */\nfunction $HttpBackendProvider() {\n  this.$get = ['$browser', '$jsonpCallbacks', '$document', '$xhrFactory', function($browser, $jsonpCallbacks, $document, $xhrFactory) {\n    return createHttpBackend($browser, $xhrFactory, $browser.defer, $jsonpCallbacks, $document[0]);\n  }];\n}\n\nfunction createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {\n  // TODO(vojta): fix the signature\n  return function(method, url, post, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers) {\n    url = url || $browser.url();\n\n    if (lowercase(method) === 'jsonp') {\n      var callbackPath = callbacks.createCallback(url);\n      var jsonpDone = jsonpReq(url, callbackPath, function(status, text) {\n        // jsonpReq only ever sets status to 200 (OK), 404 (ERROR) or -1 (WAITING)\n        var response = (status === 200) && callbacks.getResponse(callbackPath);\n        completeRequest(callback, status, response, '', text);\n        callbacks.removeCallback(callbackPath);\n      });\n    } else {\n\n      var xhr = createXhr(method, url);\n\n      xhr.open(method, url, true);\n      forEach(headers, function(value, key) {\n        if (isDefined(value)) {\n            xhr.setRequestHeader(key, value);\n        }\n      });\n\n      xhr.onload = function requestLoaded() {\n        var statusText = xhr.statusText || '';\n\n        // responseText is the old-school way of retrieving response (supported by IE9)\n        // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\n        var response = ('response' in xhr) ? xhr.response : xhr.responseText;\n\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        var status = xhr.status === 1223 ? 204 : xhr.status;\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : urlResolve(url).protocol === 'file' ? 404 : 0;\n        }\n\n        completeRequest(callback,\n            status,\n            response,\n            xhr.getAllResponseHeaders(),\n            statusText);\n      };\n\n      var requestError = function() {\n        // The response is always empty\n        // See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error\n        completeRequest(callback, -1, null, null, '');\n      };\n\n      xhr.onerror = requestError;\n      xhr.onabort = requestError;\n      xhr.ontimeout = requestError;\n\n      forEach(eventHandlers, function(value, key) {\n          xhr.addEventListener(key, value);\n      });\n\n      forEach(uploadEventHandlers, function(value, key) {\n        xhr.upload.addEventListener(key, value);\n      });\n\n      if (withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      if (responseType) {\n        try {\n          xhr.responseType = responseType;\n        } catch (e) {\n          // WebKit added support for the json responseType value on 09/03/2013\n          // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are\n          // known to throw when setting the value \"json\" as the response type. Other older\n          // browsers implementing the responseType\n          //\n          // The json response type can be ignored if not supported, because JSON payloads are\n          // parsed on the client-side regardless.\n          if (responseType !== 'json') {\n            throw e;\n          }\n        }\n      }\n\n      xhr.send(isUndefined(post) ? null : post);\n    }\n\n    if (timeout > 0) {\n      var timeoutId = $browserDefer(timeoutRequest, timeout);\n    } else if (isPromiseLike(timeout)) {\n      timeout.then(timeoutRequest);\n    }\n\n\n    function timeoutRequest() {\n      if (jsonpDone) {\n        jsonpDone();\n      }\n      if (xhr) {\n        xhr.abort();\n      }\n    }\n\n    function completeRequest(callback, status, response, headersString, statusText) {\n      // cancel timeout and subsequent timeout promise resolution\n      if (isDefined(timeoutId)) {\n        $browserDefer.cancel(timeoutId);\n      }\n      jsonpDone = xhr = null;\n\n      callback(status, response, headersString, statusText);\n    }\n  };\n\n  function jsonpReq(url, callbackPath, done) {\n    url = url.replace('JSON_CALLBACK', callbackPath);\n    // we can't use jQuery/jqLite here because jQuery does crazy stuff with script elements, e.g.:\n    // - fetches local scripts via XHR and evals them\n    // - adds and immediately removes script elements from the document\n    var script = rawDocument.createElement('script'), callback = null;\n    script.type = 'text/javascript';\n    script.src = url;\n    script.async = true;\n\n    callback = function(event) {\n      script.removeEventListener('load', callback);\n      script.removeEventListener('error', callback);\n      rawDocument.body.removeChild(script);\n      script = null;\n      var status = -1;\n      var text = 'unknown';\n\n      if (event) {\n        if (event.type === 'load' && !callbacks.wasCalled(callbackPath)) {\n          event = { type: 'error' };\n        }\n        text = event.type;\n        status = event.type === 'error' ? 404 : 200;\n      }\n\n      if (done) {\n        done(status, text);\n      }\n    };\n\n    script.addEventListener('load', callback);\n    script.addEventListener('error', callback);\n    rawDocument.body.appendChild(script);\n    return callback;\n  }\n}\n\nvar $interpolateMinErr = angular.$interpolateMinErr = minErr('$interpolate');\n$interpolateMinErr.throwNoconcat = function(text) {\n  throw $interpolateMinErr('noconcat',\n      'Error while interpolating: {0}\\nStrict Contextual Escaping disallows ' +\n      'interpolations that concatenate multiple expressions when a trusted value is ' +\n      'required.  See http://docs.angularjs.org/api/ng.$sce', text);\n};\n\n$interpolateMinErr.interr = function(text, err) {\n  return $interpolateMinErr('interr', 'Can\\'t interpolate: {0}\\n{1}', text, err.toString());\n};\n\n/**\n * @ngdoc provider\n * @name $interpolateProvider\n * @this\n *\n * @description\n *\n * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n *\n * <div class=\"alert alert-danger\">\n * This feature is sometimes used to mix different markup languages, e.g. to wrap an Angular\n * template within a Python Jinja template (or any other template language). Mixing templating\n * languages is **very dangerous**. The embedding template language will not safely escape Angular\n * expressions, so any user-controlled values in the template will cause Cross Site Scripting (XSS)\n * security bugs!\n * </div>\n *\n * @example\n<example name=\"custom-interpolation-markup\" module=\"customInterpolationApp\">\n<file name=\"index.html\">\n<script>\n  var customInterpolationApp = angular.module('customInterpolationApp', []);\n\n  customInterpolationApp.config(function($interpolateProvider) {\n    $interpolateProvider.startSymbol('//');\n    $interpolateProvider.endSymbol('//');\n  });\n\n\n  customInterpolationApp.controller('DemoController', function() {\n      this.label = \"This binding is brought you by // interpolation symbols.\";\n  });\n</script>\n<div ng-controller=\"DemoController as demo\">\n    //demo.label//\n</div>\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n  it('should interpolate binding with custom symbols', function() {\n    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');\n  });\n</file>\n</example>\n */\nfunction $InterpolateProvider() {\n  var startSymbol = '{{';\n  var endSymbol = '}}';\n\n  /**\n   * @ngdoc method\n   * @name $interpolateProvider#startSymbol\n   * @description\n   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\n   *\n   * @param {string=} value new value to set the starting symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.startSymbol = function(value) {\n    if (value) {\n      startSymbol = value;\n      return this;\n    } else {\n      return startSymbol;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $interpolateProvider#endSymbol\n   * @description\n   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n   *\n   * @param {string=} value new value to set the ending symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.endSymbol = function(value) {\n    if (value) {\n      endSymbol = value;\n      return this;\n    } else {\n      return endSymbol;\n    }\n  };\n\n\n  this.$get = ['$parse', '$exceptionHandler', '$sce', function($parse, $exceptionHandler, $sce) {\n    var startSymbolLength = startSymbol.length,\n        endSymbolLength = endSymbol.length,\n        escapedStartRegexp = new RegExp(startSymbol.replace(/./g, escape), 'g'),\n        escapedEndRegexp = new RegExp(endSymbol.replace(/./g, escape), 'g');\n\n    function escape(ch) {\n      return '\\\\\\\\\\\\' + ch;\n    }\n\n    function unescapeText(text) {\n      return text.replace(escapedStartRegexp, startSymbol).\n        replace(escapedEndRegexp, endSymbol);\n    }\n\n    // TODO: this is the same as the constantWatchDelegate in parse.js\n    function constantWatchDelegate(scope, listener, objectEquality, constantInterp) {\n      var unwatch = scope.$watch(function constantInterpolateWatch(scope) {\n        unwatch();\n        return constantInterp(scope);\n      }, listener, objectEquality);\n      return unwatch;\n    }\n\n    /**\n     * @ngdoc service\n     * @name $interpolate\n     * @kind function\n     *\n     * @requires $parse\n     * @requires $sce\n     *\n     * @description\n     *\n     * Compiles a string with markup into an interpolation function. This service is used by the\n     * HTML {@link ng.$compile $compile} service for data binding. See\n     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\n     * interpolation markup.\n     *\n     *\n     * ```js\n     *   var $interpolate = ...; // injected\n     *   var exp = $interpolate('Hello {{name | uppercase}}!');\n     *   expect(exp({name:'Angular'})).toEqual('Hello ANGULAR!');\n     * ```\n     *\n     * `$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is\n     * `true`, the interpolation function will return `undefined` unless all embedded expressions\n     * evaluate to a value other than `undefined`.\n     *\n     * ```js\n     *   var $interpolate = ...; // injected\n     *   var context = {greeting: 'Hello', name: undefined };\n     *\n     *   // default \"forgiving\" mode\n     *   var exp = $interpolate('{{greeting}} {{name}}!');\n     *   expect(exp(context)).toEqual('Hello !');\n     *\n     *   // \"allOrNothing\" mode\n     *   exp = $interpolate('{{greeting}} {{name}}!', false, null, true);\n     *   expect(exp(context)).toBeUndefined();\n     *   context.name = 'Angular';\n     *   expect(exp(context)).toEqual('Hello Angular!');\n     * ```\n     *\n     * `allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.\n     *\n     * #### Escaped Interpolation\n     * $interpolate provides a mechanism for escaping interpolation markers. Start and end markers\n     * can be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).\n     * It will be rendered as a regular start/end marker, and will not be interpreted as an expression\n     * or binding.\n     *\n     * This enables web-servers to prevent script injection attacks and defacing attacks, to some\n     * degree, while also enabling code examples to work without relying on the\n     * {@link ng.directive:ngNonBindable ngNonBindable} directive.\n     *\n     * **For security purposes, it is strongly encouraged that web servers escape user-supplied data,\n     * replacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all\n     * interpolation start/end markers with their escaped counterparts.**\n     *\n     * Escaped interpolation markers are only replaced with the actual interpolation markers in rendered\n     * output when the $interpolate service processes the text. So, for HTML elements interpolated\n     * by {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter\n     * set to `true`, the interpolated text must contain an unescaped interpolation expression. As such,\n     * this is typically useful only when user-data is used in rendering a template from the server, or\n     * when otherwise untrusted data is used by a directive.\n     *\n     * <example name=\"interpolation\">\n     *  <file name=\"index.html\">\n     *    <div ng-init=\"username='A user'\">\n     *      <p ng-init=\"apptitle='Escaping demo'\">{{apptitle}}: \\{\\{ username = \"defaced value\"; \\}\\}\n     *        </p>\n     *      <p><strong>{{username}}</strong> attempts to inject code which will deface the\n     *        application, but fails to accomplish their task, because the server has correctly\n     *        escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)\n     *        characters.</p>\n     *      <p>Instead, the result of the attempted script injection is visible, and can be removed\n     *        from the database by an administrator.</p>\n     *    </div>\n     *  </file>\n     * </example>\n     *\n     * @knownIssue\n     * It is currently not possible for an interpolated expression to contain the interpolation end\n     * symbol. For example, `{{ '}}' }}` will be incorrectly interpreted as `{{ ' }}` + `' }}`, i.e.\n     * an interpolated expression consisting of a single-quote (`'`) and the `' }}` string.\n     *\n     * @knownIssue\n     * All directives and components must use the standard `{{` `}}` interpolation symbols\n     * in their templates. If you change the application interpolation symbols the {@link $compile}\n     * service will attempt to denormalize the standard symbols to the custom symbols.\n     * The denormalization process is not clever enough to know not to replace instances of the standard\n     * symbols where they would not normally be treated as interpolation symbols. For example in the following\n     * code snippet the closing braces of the literal object will get incorrectly denormalized:\n     *\n     * ```\n     * <div data-context='{\"context\":{\"id\":3,\"type\":\"page\"}}\">\n     * ```\n     *\n     * The workaround is to ensure that such instances are separated by whitespace:\n     * ```\n     * <div data-context='{\"context\":{\"id\":3,\"type\":\"page\"} }\">\n     * ```\n     *\n     * See https://github.com/angular/angular.js/pull/14610#issuecomment-219401099 for more information.\n     *\n     * @param {string} text The text with markup to interpolate.\n     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\n     *    embedded expression in order to return an interpolation function. Strings with no\n     *    embedded expression will return null for the interpolation function.\n     * @param {string=} trustedContext when provided, the returned function passes the interpolated\n     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,\n     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that\n     *    provides Strict Contextual Escaping for details.\n     * @param {boolean=} allOrNothing if `true`, then the returned function returns undefined\n     *    unless all embedded expressions evaluate to a value other than `undefined`.\n     * @returns {function(context)} an interpolation function which is used to compute the\n     *    interpolated string. The function has these parameters:\n     *\n     * - `context`: evaluation context for all expressions embedded in the interpolated text\n     */\n    function $interpolate(text, mustHaveExpression, trustedContext, allOrNothing) {\n      // Provide a quick exit and simplified result function for text with no interpolation\n      if (!text.length || text.indexOf(startSymbol) === -1) {\n        var constantInterp;\n        if (!mustHaveExpression) {\n          var unescapedText = unescapeText(text);\n          constantInterp = valueFn(unescapedText);\n          constantInterp.exp = text;\n          constantInterp.expressions = [];\n          constantInterp.$$watchDelegate = constantWatchDelegate;\n        }\n        return constantInterp;\n      }\n\n      allOrNothing = !!allOrNothing;\n      var startIndex,\n          endIndex,\n          index = 0,\n          expressions = [],\n          parseFns = [],\n          textLength = text.length,\n          exp,\n          concat = [],\n          expressionPositions = [];\n\n      while (index < textLength) {\n        if (((startIndex = text.indexOf(startSymbol, index)) !== -1) &&\n             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) !== -1)) {\n          if (index !== startIndex) {\n            concat.push(unescapeText(text.substring(index, startIndex)));\n          }\n          exp = text.substring(startIndex + startSymbolLength, endIndex);\n          expressions.push(exp);\n          parseFns.push($parse(exp, parseStringifyInterceptor));\n          index = endIndex + endSymbolLength;\n          expressionPositions.push(concat.length);\n          concat.push('');\n        } else {\n          // we did not find an interpolation, so we have to add the remainder to the separators array\n          if (index !== textLength) {\n            concat.push(unescapeText(text.substring(index)));\n          }\n          break;\n        }\n      }\n\n      // Concatenating expressions makes it hard to reason about whether some combination of\n      // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a\n      // single expression be used for iframe[src], object[src], etc., we ensure that the value\n      // that's used is assigned or constructed by some JS code somewhere that is more testable or\n      // make it obvious that you bound the value to some user controlled value.  This helps reduce\n      // the load when auditing for XSS issues.\n      if (trustedContext && concat.length > 1) {\n          $interpolateMinErr.throwNoconcat(text);\n      }\n\n      if (!mustHaveExpression || expressions.length) {\n        var compute = function(values) {\n          for (var i = 0, ii = expressions.length; i < ii; i++) {\n            if (allOrNothing && isUndefined(values[i])) return;\n            concat[expressionPositions[i]] = values[i];\n          }\n          return concat.join('');\n        };\n\n        var getValue = function(value) {\n          return trustedContext ?\n            $sce.getTrusted(trustedContext, value) :\n            $sce.valueOf(value);\n        };\n\n        return extend(function interpolationFn(context) {\n            var i = 0;\n            var ii = expressions.length;\n            var values = new Array(ii);\n\n            try {\n              for (; i < ii; i++) {\n                values[i] = parseFns[i](context);\n              }\n\n              return compute(values);\n            } catch (err) {\n              $exceptionHandler($interpolateMinErr.interr(text, err));\n            }\n\n          }, {\n          // all of these properties are undocumented for now\n          exp: text, //just for compatibility with regular watchers created via $watch\n          expressions: expressions,\n          $$watchDelegate: function(scope, listener) {\n            var lastValue;\n            return scope.$watchGroup(parseFns, /** @this */ function interpolateFnWatcher(values, oldValues) {\n              var currValue = compute(values);\n              if (isFunction(listener)) {\n                listener.call(this, currValue, values !== oldValues ? lastValue : currValue, scope);\n              }\n              lastValue = currValue;\n            });\n          }\n        });\n      }\n\n      function parseStringifyInterceptor(value) {\n        try {\n          value = getValue(value);\n          return allOrNothing && !isDefined(value) ? value : stringify(value);\n        } catch (err) {\n          $exceptionHandler($interpolateMinErr.interr(text, err));\n        }\n      }\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name $interpolate#startSymbol\n     * @description\n     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n     *\n     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.startSymbol = function() {\n      return startSymbol;\n    };\n\n\n    /**\n     * @ngdoc method\n     * @name $interpolate#endSymbol\n     * @description\n     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n     *\n     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\n     * the symbol.\n     *\n     * @returns {string} end symbol.\n     */\n    $interpolate.endSymbol = function() {\n      return endSymbol;\n    };\n\n    return $interpolate;\n  }];\n}\n\n/** @this */\nfunction $IntervalProvider() {\n  this.$get = ['$rootScope', '$window', '$q', '$$q', '$browser',\n       function($rootScope,   $window,   $q,   $$q,   $browser) {\n    var intervals = {};\n\n\n     /**\n      * @ngdoc service\n      * @name $interval\n      *\n      * @description\n      * Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\n      * milliseconds.\n      *\n      * The return value of registering an interval function is a promise. This promise will be\n      * notified upon each tick of the interval, and will be resolved after `count` iterations, or\n      * run indefinitely if `count` is not defined. The value of the notification will be the\n      * number of iterations that have run.\n      * To cancel an interval, call `$interval.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\n      * move forward by `millis` milliseconds and trigger any functions scheduled to run in that\n      * time.\n      *\n      * <div class=\"alert alert-warning\">\n      * **Note**: Intervals created by this service must be explicitly destroyed when you are finished\n      * with them.  In particular they are not automatically destroyed when a controller's scope or a\n      * directive's element are destroyed.\n      * You should take this into consideration and make sure to always cancel the interval at the\n      * appropriate moment.  See the example below for more details on how and when to do this.\n      * </div>\n      *\n      * @param {function()} fn A function that should be called repeatedly. If no additional arguments\n      *   are passed (see below), the function is called with the current iteration count.\n      * @param {number} delay Number of milliseconds between each function call.\n      * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat\n      *   indefinitely.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @param {...*=} Pass additional parameters to the executed function.\n      * @returns {promise} A promise which will be notified on each iteration.\n      *\n      * @example\n      * <example module=\"intervalExample\" name=\"interval-service\">\n      * <file name=\"index.html\">\n      *   <script>\n      *     angular.module('intervalExample', [])\n      *       .controller('ExampleController', ['$scope', '$interval',\n      *         function($scope, $interval) {\n      *           $scope.format = 'M/d/yy h:mm:ss a';\n      *           $scope.blood_1 = 100;\n      *           $scope.blood_2 = 120;\n      *\n      *           var stop;\n      *           $scope.fight = function() {\n      *             // Don't start a new fight if we are already fighting\n      *             if ( angular.isDefined(stop) ) return;\n      *\n      *             stop = $interval(function() {\n      *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {\n      *                 $scope.blood_1 = $scope.blood_1 - 3;\n      *                 $scope.blood_2 = $scope.blood_2 - 4;\n      *               } else {\n      *                 $scope.stopFight();\n      *               }\n      *             }, 100);\n      *           };\n      *\n      *           $scope.stopFight = function() {\n      *             if (angular.isDefined(stop)) {\n      *               $interval.cancel(stop);\n      *               stop = undefined;\n      *             }\n      *           };\n      *\n      *           $scope.resetFight = function() {\n      *             $scope.blood_1 = 100;\n      *             $scope.blood_2 = 120;\n      *           };\n      *\n      *           $scope.$on('$destroy', function() {\n      *             // Make sure that the interval is destroyed too\n      *             $scope.stopFight();\n      *           });\n      *         }])\n      *       // Register the 'myCurrentTime' directive factory method.\n      *       // We inject $interval and dateFilter service since the factory method is DI.\n      *       .directive('myCurrentTime', ['$interval', 'dateFilter',\n      *         function($interval, dateFilter) {\n      *           // return the directive link function. (compile function not needed)\n      *           return function(scope, element, attrs) {\n      *             var format,  // date format\n      *                 stopTime; // so that we can cancel the time updates\n      *\n      *             // used to update the UI\n      *             function updateTime() {\n      *               element.text(dateFilter(new Date(), format));\n      *             }\n      *\n      *             // watch the expression, and update the UI on change.\n      *             scope.$watch(attrs.myCurrentTime, function(value) {\n      *               format = value;\n      *               updateTime();\n      *             });\n      *\n      *             stopTime = $interval(updateTime, 1000);\n      *\n      *             // listen on DOM destroy (removal) event, and cancel the next UI update\n      *             // to prevent updating time after the DOM element was removed.\n      *             element.on('$destroy', function() {\n      *               $interval.cancel(stopTime);\n      *             });\n      *           }\n      *         }]);\n      *   </script>\n      *\n      *   <div>\n      *     <div ng-controller=\"ExampleController\">\n      *       <label>Date format: <input ng-model=\"format\"></label> <hr/>\n      *       Current time is: <span my-current-time=\"format\"></span>\n      *       <hr/>\n      *       Blood 1 : <font color='red'>{{blood_1}}</font>\n      *       Blood 2 : <font color='red'>{{blood_2}}</font>\n      *       <button type=\"button\" data-ng-click=\"fight()\">Fight</button>\n      *       <button type=\"button\" data-ng-click=\"stopFight()\">StopFight</button>\n      *       <button type=\"button\" data-ng-click=\"resetFight()\">resetFight</button>\n      *     </div>\n      *   </div>\n      *\n      * </file>\n      * </example>\n      */\n    function interval(fn, delay, count, invokeApply) {\n      var hasParams = arguments.length > 4,\n          args = hasParams ? sliceArgs(arguments, 4) : [],\n          setInterval = $window.setInterval,\n          clearInterval = $window.clearInterval,\n          iteration = 0,\n          skipApply = (isDefined(invokeApply) && !invokeApply),\n          deferred = (skipApply ? $$q : $q).defer(),\n          promise = deferred.promise;\n\n      count = isDefined(count) ? count : 0;\n\n      promise.$$intervalId = setInterval(function tick() {\n        if (skipApply) {\n          $browser.defer(callback);\n        } else {\n          $rootScope.$evalAsync(callback);\n        }\n        deferred.notify(iteration++);\n\n        if (count > 0 && iteration >= count) {\n          deferred.resolve(iteration);\n          clearInterval(promise.$$intervalId);\n          delete intervals[promise.$$intervalId];\n        }\n\n        if (!skipApply) $rootScope.$apply();\n\n      }, delay);\n\n      intervals[promise.$$intervalId] = deferred;\n\n      return promise;\n\n      function callback() {\n        if (!hasParams) {\n          fn(iteration);\n        } else {\n          fn.apply(null, args);\n        }\n      }\n    }\n\n\n     /**\n      * @ngdoc method\n      * @name $interval#cancel\n      *\n      * @description\n      * Cancels a task associated with the `promise`.\n      *\n      * @param {Promise=} promise returned by the `$interval` function.\n      * @returns {boolean} Returns `true` if the task was successfully canceled.\n      */\n    interval.cancel = function(promise) {\n      if (promise && promise.$$intervalId in intervals) {\n        // Interval cancels should not report as unhandled promise.\n        intervals[promise.$$intervalId].promise.catch(noop);\n        intervals[promise.$$intervalId].reject('canceled');\n        $window.clearInterval(promise.$$intervalId);\n        delete intervals[promise.$$intervalId];\n        return true;\n      }\n      return false;\n    };\n\n    return interval;\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $jsonpCallbacks\n * @requires $window\n * @description\n * This service handles the lifecycle of callbacks to handle JSONP requests.\n * Override this service if you wish to customise where the callbacks are stored and\n * how they vary compared to the requested url.\n */\nvar $jsonpCallbacksProvider = /** @this */ function() {\n  this.$get = ['$window', function($window) {\n    var callbacks = $window.angular.callbacks;\n    var callbackMap = {};\n\n    function createCallback(callbackId) {\n      var callback = function(data) {\n        callback.data = data;\n        callback.called = true;\n      };\n      callback.id = callbackId;\n      return callback;\n    }\n\n    return {\n      /**\n       * @ngdoc method\n       * @name $jsonpCallbacks#createCallback\n       * @param {string} url the url of the JSONP request\n       * @returns {string} the callback path to send to the server as part of the JSONP request\n       * @description\n       * {@link $httpBackend} calls this method to create a callback and get hold of the path to the callback\n       * to pass to the server, which will be used to call the callback with its payload in the JSONP response.\n       */\n      createCallback: function(url) {\n        var callbackId = '_' + (callbacks.$$counter++).toString(36);\n        var callbackPath = 'angular.callbacks.' + callbackId;\n        var callback = createCallback(callbackId);\n        callbackMap[callbackPath] = callbacks[callbackId] = callback;\n        return callbackPath;\n      },\n      /**\n       * @ngdoc method\n       * @name $jsonpCallbacks#wasCalled\n       * @param {string} callbackPath the path to the callback that was sent in the JSONP request\n       * @returns {boolean} whether the callback has been called, as a result of the JSONP response\n       * @description\n       * {@link $httpBackend} calls this method to find out whether the JSONP response actually called the\n       * callback that was passed in the request.\n       */\n      wasCalled: function(callbackPath) {\n        return callbackMap[callbackPath].called;\n      },\n      /**\n       * @ngdoc method\n       * @name $jsonpCallbacks#getResponse\n       * @param {string} callbackPath the path to the callback that was sent in the JSONP request\n       * @returns {*} the data received from the response via the registered callback\n       * @description\n       * {@link $httpBackend} calls this method to get hold of the data that was provided to the callback\n       * in the JSONP response.\n       */\n      getResponse: function(callbackPath) {\n        return callbackMap[callbackPath].data;\n      },\n      /**\n       * @ngdoc method\n       * @name $jsonpCallbacks#removeCallback\n       * @param {string} callbackPath the path to the callback that was sent in the JSONP request\n       * @description\n       * {@link $httpBackend} calls this method to remove the callback after the JSONP request has\n       * completed or timed-out.\n       */\n      removeCallback: function(callbackPath) {\n        var callback = callbackMap[callbackPath];\n        delete callbacks[callback.id];\n        delete callbackMap[callbackPath];\n      }\n    };\n  }];\n};\n\n/**\n * @ngdoc service\n * @name $locale\n *\n * @description\n * $locale service provides localization rules for various Angular components. As of right now the\n * only public api is:\n *\n * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\n */\n\nvar PATH_MATCH = /^([^?#]*)(\\?([^#]*))?(#(.*))?$/,\n    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\nvar $locationMinErr = minErr('$location');\n\n\n/**\n * Encode path using encodeUriSegment, ignoring forward slashes\n *\n * @param {string} path Path to encode\n * @returns {string}\n */\nfunction encodePath(path) {\n  var segments = path.split('/'),\n      i = segments.length;\n\n  while (i--) {\n    segments[i] = encodeUriSegment(segments[i]);\n  }\n\n  return segments.join('/');\n}\n\nfunction parseAbsoluteUrl(absoluteUrl, locationObj) {\n  var parsedUrl = urlResolve(absoluteUrl);\n\n  locationObj.$$protocol = parsedUrl.protocol;\n  locationObj.$$host = parsedUrl.hostname;\n  locationObj.$$port = toInt(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;\n}\n\nvar DOUBLE_SLASH_REGEX = /^\\s*[\\\\/]{2,}/;\nfunction parseAppUrl(url, locationObj) {\n\n  if (DOUBLE_SLASH_REGEX.test(url)) {\n    throw $locationMinErr('badpath', 'Invalid url \"{0}\".', url);\n  }\n\n  var prefixed = (url.charAt(0) !== '/');\n  if (prefixed) {\n    url = '/' + url;\n  }\n  var match = urlResolve(url);\n  locationObj.$$path = decodeURIComponent(prefixed && match.pathname.charAt(0) === '/' ?\n      match.pathname.substring(1) : match.pathname);\n  locationObj.$$search = parseKeyValue(match.search);\n  locationObj.$$hash = decodeURIComponent(match.hash);\n\n  // make sure path starts with '/';\n  if (locationObj.$$path && locationObj.$$path.charAt(0) !== '/') {\n    locationObj.$$path = '/' + locationObj.$$path;\n  }\n}\n\nfunction startsWith(str, search) {\n  return str.slice(0, search.length) === search;\n}\n\n/**\n *\n * @param {string} base\n * @param {string} url\n * @returns {string} returns text from `url` after `base` or `undefined` if it does not begin with\n *                   the expected string.\n */\nfunction stripBaseUrl(base, url) {\n  if (startsWith(url, base)) {\n    return url.substr(base.length);\n  }\n}\n\n\nfunction stripHash(url) {\n  var index = url.indexOf('#');\n  return index === -1 ? url : url.substr(0, index);\n}\n\nfunction trimEmptyHash(url) {\n  return url.replace(/(#.+)|#$/, '$1');\n}\n\n\nfunction stripFile(url) {\n  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);\n}\n\n/* return the server only (scheme://host:port) */\nfunction serverBase(url) {\n  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));\n}\n\n\n/**\n * LocationHtml5Url represents a URL\n * This object is exposed as $location service when HTML5 mode is enabled and supported\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} appBaseNoFile application base URL stripped of any filename\n * @param {string} basePrefix URL path prefix\n */\nfunction LocationHtml5Url(appBase, appBaseNoFile, basePrefix) {\n  this.$$html5 = true;\n  basePrefix = basePrefix || '';\n  parseAbsoluteUrl(appBase, this);\n\n\n  /**\n   * Parse given HTML5 (regular) URL string into properties\n   * @param {string} url HTML5 URL\n   * @private\n   */\n  this.$$parse = function(url) {\n    var pathUrl = stripBaseUrl(appBaseNoFile, url);\n    if (!isString(pathUrl)) {\n      throw $locationMinErr('ipthprfx', 'Invalid url \"{0}\", missing path prefix \"{1}\".', url,\n          appBaseNoFile);\n    }\n\n    parseAppUrl(pathUrl, this);\n\n    if (!this.$$path) {\n      this.$$path = '/';\n    }\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBaseNoFile + this.$$url.substr(1); // first char is always '/'\n\n    this.$$urlUpdatedByLocation = true;\n  };\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    if (relHref && relHref[0] === '#') {\n      // special case for links to hash fragments:\n      // keep the old url and only replace the hash fragment\n      this.hash(relHref.slice(1));\n      return true;\n    }\n    var appUrl, prevAppUrl;\n    var rewrittenUrl;\n\n\n    if (isDefined(appUrl = stripBaseUrl(appBase, url))) {\n      prevAppUrl = appUrl;\n      if (basePrefix && isDefined(appUrl = stripBaseUrl(basePrefix, appUrl))) {\n        rewrittenUrl = appBaseNoFile + (stripBaseUrl('/', appUrl) || appUrl);\n      } else {\n        rewrittenUrl = appBase + prevAppUrl;\n      }\n    } else if (isDefined(appUrl = stripBaseUrl(appBaseNoFile, url))) {\n      rewrittenUrl = appBaseNoFile + appUrl;\n    } else if (appBaseNoFile === url + '/') {\n      rewrittenUrl = appBaseNoFile;\n    }\n    if (rewrittenUrl) {\n      this.$$parse(rewrittenUrl);\n    }\n    return !!rewrittenUrl;\n  };\n}\n\n\n/**\n * LocationHashbangUrl represents URL\n * This object is exposed as $location service when developer doesn't opt into html5 mode.\n * It also serves as the base class for html5 mode fallback on legacy browsers.\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} appBaseNoFile application base URL stripped of any filename\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangUrl(appBase, appBaseNoFile, hashPrefix) {\n\n  parseAbsoluteUrl(appBase, this);\n\n\n  /**\n   * Parse given hashbang URL into properties\n   * @param {string} url Hashbang URL\n   * @private\n   */\n  this.$$parse = function(url) {\n    var withoutBaseUrl = stripBaseUrl(appBase, url) || stripBaseUrl(appBaseNoFile, url);\n    var withoutHashUrl;\n\n    if (!isUndefined(withoutBaseUrl) && withoutBaseUrl.charAt(0) === '#') {\n\n      // The rest of the URL starts with a hash so we have\n      // got either a hashbang path or a plain hash fragment\n      withoutHashUrl = stripBaseUrl(hashPrefix, withoutBaseUrl);\n      if (isUndefined(withoutHashUrl)) {\n        // There was no hashbang prefix so we just have a hash fragment\n        withoutHashUrl = withoutBaseUrl;\n      }\n\n    } else {\n      // There was no hashbang path nor hash fragment:\n      // If we are in HTML5 mode we use what is left as the path;\n      // Otherwise we ignore what is left\n      if (this.$$html5) {\n        withoutHashUrl = withoutBaseUrl;\n      } else {\n        withoutHashUrl = '';\n        if (isUndefined(withoutBaseUrl)) {\n          appBase = url;\n          /** @type {?} */ (this).replace();\n        }\n      }\n    }\n\n    parseAppUrl(withoutHashUrl, this);\n\n    this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);\n\n    this.$$compose();\n\n    /*\n     * In Windows, on an anchor node on documents loaded from\n     * the filesystem, the browser will return a pathname\n     * prefixed with the drive name ('/C:/path') when a\n     * pathname without a drive is set:\n     *  * a.setAttribute('href', '/foo')\n     *   * a.pathname === '/C:/foo' //true\n     *\n     * Inside of Angular, we're always using pathnames that\n     * do not include drive names for routing.\n     */\n    function removeWindowsDriveName(path, url, base) {\n      /*\n      Matches paths for file protocol on windows,\n      such as /C:/foo/bar, and captures only /foo/bar.\n      */\n      var windowsFilePathExp = /^\\/[A-Z]:(\\/.*)/;\n\n      var firstPathSegmentMatch;\n\n      //Get the relative path from the input URL.\n      if (startsWith(url, base)) {\n        url = url.replace(base, '');\n      }\n\n      // The input URL intentionally contains a first path segment that ends with a colon.\n      if (windowsFilePathExp.exec(url)) {\n        return path;\n      }\n\n      firstPathSegmentMatch = windowsFilePathExp.exec(path);\n      return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;\n    }\n  };\n\n  /**\n   * Compose hashbang URL and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');\n\n    this.$$urlUpdatedByLocation = true;\n  };\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    if (stripHash(appBase) === stripHash(url)) {\n      this.$$parse(url);\n      return true;\n    }\n    return false;\n  };\n}\n\n\n/**\n * LocationHashbangUrl represents URL\n * This object is exposed as $location service when html5 history api is enabled but the browser\n * does not support it.\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} appBaseNoFile application base URL stripped of any filename\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangInHtml5Url(appBase, appBaseNoFile, hashPrefix) {\n  this.$$html5 = true;\n  LocationHashbangUrl.apply(this, arguments);\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    if (relHref && relHref[0] === '#') {\n      // special case for links to hash fragments:\n      // keep the old url and only replace the hash fragment\n      this.hash(relHref.slice(1));\n      return true;\n    }\n\n    var rewrittenUrl;\n    var appUrl;\n\n    if (appBase === stripHash(url)) {\n      rewrittenUrl = url;\n    } else if ((appUrl = stripBaseUrl(appBaseNoFile, url))) {\n      rewrittenUrl = appBase + hashPrefix + appUrl;\n    } else if (appBaseNoFile === url + '/') {\n      rewrittenUrl = appBaseNoFile;\n    }\n    if (rewrittenUrl) {\n      this.$$parse(rewrittenUrl);\n    }\n    return !!rewrittenUrl;\n  };\n\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    // include hashPrefix in $$absUrl when $$url is empty so IE9 does not reload page because of removal of '#'\n    this.$$absUrl = appBase + hashPrefix + this.$$url;\n\n    this.$$urlUpdatedByLocation = true;\n  };\n\n}\n\n\nvar locationPrototype = {\n\n  /**\n   * Ensure absolute URL is initialized.\n   * @private\n   */\n  $$absUrl:'',\n\n  /**\n   * Are we in html5 mode?\n   * @private\n   */\n  $$html5: false,\n\n  /**\n   * Has any change been replacing?\n   * @private\n   */\n  $$replace: false,\n\n  /**\n   * @ngdoc method\n   * @name $location#absUrl\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return full URL representation with all segments encoded according to rules specified in\n   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var absUrl = $location.absUrl();\n   * // => \"http://example.com/#/some/path?foo=bar&baz=xoxo\"\n   * ```\n   *\n   * @return {string} full URL\n   */\n  absUrl: locationGetter('$$absUrl'),\n\n  /**\n   * @ngdoc method\n   * @name $location#url\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return URL (e.g. `/path?a=b#hash`) when called without any parameter.\n   *\n   * Change path, search and hash, when called with parameter and return `$location`.\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var url = $location.url();\n   * // => \"/some/path?foo=bar&baz=xoxo\"\n   * ```\n   *\n   * @param {string=} url New URL without base prefix (e.g. `/path?a=b#hash`)\n   * @return {string} url\n   */\n  url: function(url) {\n    if (isUndefined(url)) {\n      return this.$$url;\n    }\n\n    var match = PATH_MATCH.exec(url);\n    if (match[1] || url === '') this.path(decodeURIComponent(match[1]));\n    if (match[2] || match[1] || url === '') this.search(match[3] || '');\n    this.hash(match[5] || '');\n\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name $location#protocol\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return protocol of current URL.\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var protocol = $location.protocol();\n   * // => \"http\"\n   * ```\n   *\n   * @return {string} protocol of current URL\n   */\n  protocol: locationGetter('$$protocol'),\n\n  /**\n   * @ngdoc method\n   * @name $location#host\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return host of current URL.\n   *\n   * Note: compared to the non-angular version `location.host` which returns `hostname:port`, this returns the `hostname` portion only.\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var host = $location.host();\n   * // => \"example.com\"\n   *\n   * // given URL http://user:password@example.com:8080/#/some/path?foo=bar&baz=xoxo\n   * host = $location.host();\n   * // => \"example.com\"\n   * host = location.host;\n   * // => \"example.com:8080\"\n   * ```\n   *\n   * @return {string} host of current URL.\n   */\n  host: locationGetter('$$host'),\n\n  /**\n   * @ngdoc method\n   * @name $location#port\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return port of current URL.\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var port = $location.port();\n   * // => 80\n   * ```\n   *\n   * @return {Number} port\n   */\n  port: locationGetter('$$port'),\n\n  /**\n   * @ngdoc method\n   * @name $location#path\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return path of current URL when called without any parameter.\n   *\n   * Change path when called with parameter and return `$location`.\n   *\n   * Note: Path should always begin with forward slash (/), this method will add the forward slash\n   * if it is missing.\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var path = $location.path();\n   * // => \"/some/path\"\n   * ```\n   *\n   * @param {(string|number)=} path New path\n   * @return {(string|object)} path if called with no parameters, or `$location` if called with a parameter\n   */\n  path: locationGetterSetter('$$path', function(path) {\n    path = path !== null ? path.toString() : '';\n    return path.charAt(0) === '/' ? path : '/' + path;\n  }),\n\n  /**\n   * @ngdoc method\n   * @name $location#search\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return search part (as object) of current URL when called without any parameter.\n   *\n   * Change search part when called with parameter and return `$location`.\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var searchObject = $location.search();\n   * // => {foo: 'bar', baz: 'xoxo'}\n   *\n   * // set foo to 'yipee'\n   * $location.search('foo', 'yipee');\n   * // $location.search() => {foo: 'yipee', baz: 'xoxo'}\n   * ```\n   *\n   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or\n   * hash object.\n   *\n   * When called with a single argument the method acts as a setter, setting the `search` component\n   * of `$location` to the specified value.\n   *\n   * If the argument is a hash object containing an array of values, these values will be encoded\n   * as duplicate search parameters in the URL.\n   *\n   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`\n   * will override only a single search property.\n   *\n   * If `paramValue` is an array, it will override the property of the `search` component of\n   * `$location` specified via the first argument.\n   *\n   * If `paramValue` is `null`, the property specified via the first argument will be deleted.\n   *\n   * If `paramValue` is `true`, the property specified via the first argument will be added with no\n   * value nor trailing equal sign.\n   *\n   * @return {Object} If called with no arguments returns the parsed `search` object. If called with\n   * one or more arguments returns `$location` object itself.\n   */\n  search: function(search, paramValue) {\n    switch (arguments.length) {\n      case 0:\n        return this.$$search;\n      case 1:\n        if (isString(search) || isNumber(search)) {\n          search = search.toString();\n          this.$$search = parseKeyValue(search);\n        } else if (isObject(search)) {\n          search = copy(search, {});\n          // remove object undefined or null properties\n          forEach(search, function(value, key) {\n            if (value == null) delete search[key];\n          });\n\n          this.$$search = search;\n        } else {\n          throw $locationMinErr('isrcharg',\n              'The first argument of the `$location#search()` call must be a string or an object.');\n        }\n        break;\n      default:\n        if (isUndefined(paramValue) || paramValue === null) {\n          delete this.$$search[search];\n        } else {\n          this.$$search[search] = paramValue;\n        }\n    }\n\n    this.$$compose();\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name $location#hash\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Returns the hash fragment when called without any parameters.\n   *\n   * Changes the hash fragment when called with a parameter and returns `$location`.\n   *\n   *\n   * ```js\n   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue\n   * var hash = $location.hash();\n   * // => \"hashValue\"\n   * ```\n   *\n   * @param {(string|number)=} hash New hash fragment\n   * @return {string} hash\n   */\n  hash: locationGetterSetter('$$hash', function(hash) {\n    return hash !== null ? hash.toString() : '';\n  }),\n\n  /**\n   * @ngdoc method\n   * @name $location#replace\n   *\n   * @description\n   * If called, all changes to $location during the current `$digest` will replace the current history\n   * record, instead of adding a new one.\n   */\n  replace: function() {\n    this.$$replace = true;\n    return this;\n  }\n};\n\nforEach([LocationHashbangInHtml5Url, LocationHashbangUrl, LocationHtml5Url], function(Location) {\n  Location.prototype = Object.create(locationPrototype);\n\n  /**\n   * @ngdoc method\n   * @name $location#state\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return the history state object when called without any parameter.\n   *\n   * Change the history state object when called with one parameter and return `$location`.\n   * The state object is later passed to `pushState` or `replaceState`.\n   *\n   * NOTE: This method is supported only in HTML5 mode and only in browsers supporting\n   * the HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support\n   * older browsers (like IE9 or Android < 4.0), don't use this method.\n   *\n   * @param {object=} state State object for pushState or replaceState\n   * @return {object} state\n   */\n  Location.prototype.state = function(state) {\n    if (!arguments.length) {\n      return this.$$state;\n    }\n\n    if (Location !== LocationHtml5Url || !this.$$html5) {\n      throw $locationMinErr('nostate', 'History API state support is available only ' +\n        'in HTML5 mode and only in browsers supporting HTML5 History API');\n    }\n    // The user might modify `stateObject` after invoking `$location.state(stateObject)`\n    // but we're changing the $$state reference to $browser.state() during the $digest\n    // so the modification window is narrow.\n    this.$$state = isUndefined(state) ? null : state;\n    this.$$urlUpdatedByLocation = true;\n\n    return this;\n  };\n});\n\n\nfunction locationGetter(property) {\n  return /** @this */ function() {\n    return this[property];\n  };\n}\n\n\nfunction locationGetterSetter(property, preprocess) {\n  return /** @this */ function(value) {\n    if (isUndefined(value)) {\n      return this[property];\n    }\n\n    this[property] = preprocess(value);\n    this.$$compose();\n\n    return this;\n  };\n}\n\n\n/**\n * @ngdoc service\n * @name $location\n *\n * @requires $rootElement\n *\n * @description\n * The $location service parses the URL in the browser address bar (based on the\n * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\n * available to your application. Changes to the URL in the address bar are reflected into\n * $location service and changes to $location are reflected into the browser address bar.\n *\n * **The $location service:**\n *\n * - Exposes the current URL in the browser address bar, so you can\n *   - Watch and observe the URL.\n *   - Change the URL.\n * - Synchronizes the URL with the browser when the user\n *   - Changes the address bar.\n *   - Clicks the back or forward button (or clicks a History link).\n *   - Clicks on a link.\n * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n *\n * For more information see {@link guide/$location Developer Guide: Using $location}\n */\n\n/**\n * @ngdoc provider\n * @name $locationProvider\n * @this\n *\n * @description\n * Use the `$locationProvider` to configure how the application deep linking paths are stored.\n */\nfunction $LocationProvider() {\n  var hashPrefix = '!',\n      html5Mode = {\n        enabled: false,\n        requireBase: true,\n        rewriteLinks: true\n      };\n\n  /**\n   * @ngdoc method\n   * @name $locationProvider#hashPrefix\n   * @description\n   * The default value for the prefix is `'!'`.\n   * @param {string=} prefix Prefix for hash part (containing path and search)\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.hashPrefix = function(prefix) {\n    if (isDefined(prefix)) {\n      hashPrefix = prefix;\n      return this;\n    } else {\n      return hashPrefix;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $locationProvider#html5Mode\n   * @description\n   * @param {(boolean|Object)=} mode If boolean, sets `html5Mode.enabled` to value.\n   *   If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported\n   *   properties:\n   *   - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to\n   *     change urls where supported. Will fall back to hash-prefixed paths in browsers that do not\n   *     support `pushState`.\n   *   - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies\n   *     whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are\n   *     true, and a base tag is not present, an error will be thrown when `$location` is injected.\n   *     See the {@link guide/$location $location guide for more information}\n   *   - **rewriteLinks** - `{boolean|string}` - (default: `true`) When html5Mode is enabled,\n   *     enables/disables URL rewriting for relative links. If set to a string, URL rewriting will\n   *     only happen on links with an attribute that matches the given string. For example, if set\n   *     to `'internal-link'`, then the URL will only be rewritten for `<a internal-link>` links.\n   *     Note that [attribute name normalization](guide/directive#normalization) does not apply\n   *     here, so `'internalLink'` will **not** match `'internal-link'`.\n   *\n   * @returns {Object} html5Mode object if used as getter or itself (chaining) if used as setter\n   */\n  this.html5Mode = function(mode) {\n    if (isBoolean(mode)) {\n      html5Mode.enabled = mode;\n      return this;\n    } else if (isObject(mode)) {\n\n      if (isBoolean(mode.enabled)) {\n        html5Mode.enabled = mode.enabled;\n      }\n\n      if (isBoolean(mode.requireBase)) {\n        html5Mode.requireBase = mode.requireBase;\n      }\n\n      if (isBoolean(mode.rewriteLinks) || isString(mode.rewriteLinks)) {\n        html5Mode.rewriteLinks = mode.rewriteLinks;\n      }\n\n      return this;\n    } else {\n      return html5Mode;\n    }\n  };\n\n  /**\n   * @ngdoc event\n   * @name $location#$locationChangeStart\n   * @eventType broadcast on root scope\n   * @description\n   * Broadcasted before a URL will change.\n   *\n   * This change can be prevented by calling\n   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\n   * details about event object. Upon successful change\n   * {@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.\n   *\n   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when\n   * the browser supports the HTML5 History API.\n   *\n   * @param {Object} angularEvent Synthetic event object.\n   * @param {string} newUrl New URL\n   * @param {string=} oldUrl URL that was before it was changed.\n   * @param {string=} newState New history state object\n   * @param {string=} oldState History state object that was before it was changed.\n   */\n\n  /**\n   * @ngdoc event\n   * @name $location#$locationChangeSuccess\n   * @eventType broadcast on root scope\n   * @description\n   * Broadcasted after a URL was changed.\n   *\n   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when\n   * the browser supports the HTML5 History API.\n   *\n   * @param {Object} angularEvent Synthetic event object.\n   * @param {string} newUrl New URL\n   * @param {string=} oldUrl URL that was before it was changed.\n   * @param {string=} newState New history state object\n   * @param {string=} oldState History state object that was before it was changed.\n   */\n\n  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window',\n      function($rootScope, $browser, $sniffer, $rootElement, $window) {\n    var $location,\n        LocationMode,\n        baseHref = $browser.baseHref(), // if base[href] is undefined, it defaults to ''\n        initialUrl = $browser.url(),\n        appBase;\n\n    if (html5Mode.enabled) {\n      if (!baseHref && html5Mode.requireBase) {\n        throw $locationMinErr('nobase',\n          '$location in HTML5 mode requires a <base> tag to be present!');\n      }\n      appBase = serverBase(initialUrl) + (baseHref || '/');\n      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;\n    } else {\n      appBase = stripHash(initialUrl);\n      LocationMode = LocationHashbangUrl;\n    }\n    var appBaseNoFile = stripFile(appBase);\n\n    $location = new LocationMode(appBase, appBaseNoFile, '#' + hashPrefix);\n    $location.$$parseLinkUrl(initialUrl, initialUrl);\n\n    $location.$$state = $browser.state();\n\n    var IGNORE_URI_REGEXP = /^\\s*(javascript|mailto):/i;\n\n    function setBrowserUrlWithFallback(url, replace, state) {\n      var oldUrl = $location.url();\n      var oldState = $location.$$state;\n      try {\n        $browser.url(url, replace, state);\n\n        // Make sure $location.state() returns referentially identical (not just deeply equal)\n        // state object; this makes possible quick checking if the state changed in the digest\n        // loop. Checking deep equality would be too expensive.\n        $location.$$state = $browser.state();\n      } catch (e) {\n        // Restore old values if pushState fails\n        $location.url(oldUrl);\n        $location.$$state = oldState;\n\n        throw e;\n      }\n    }\n\n    $rootElement.on('click', function(event) {\n      var rewriteLinks = html5Mode.rewriteLinks;\n      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\n      // currently we open nice url link and redirect then\n\n      if (!rewriteLinks || event.ctrlKey || event.metaKey || event.shiftKey || event.which === 2 || event.button === 2) return;\n\n      var elm = jqLite(event.target);\n\n      // traverse the DOM up to find first A tag\n      while (nodeName_(elm[0]) !== 'a') {\n        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\n        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\n      }\n\n      if (isString(rewriteLinks) && isUndefined(elm.attr(rewriteLinks))) return;\n\n      var absHref = elm.prop('href');\n      // get the actual href attribute - see\n      // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx\n      var relHref = elm.attr('href') || elm.attr('xlink:href');\n\n      if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {\n        // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during\n        // an animation.\n        absHref = urlResolve(absHref.animVal).href;\n      }\n\n      // Ignore when url is started with javascript: or mailto:\n      if (IGNORE_URI_REGEXP.test(absHref)) return;\n\n      if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {\n        if ($location.$$parseLinkUrl(absHref, relHref)) {\n          // We do a preventDefault for all urls that are part of the angular application,\n          // in html5mode and also without, so that we are able to abort navigation without\n          // getting double entries in the location history.\n          event.preventDefault();\n          // update location manually\n          if ($location.absUrl() !== $browser.url()) {\n            $rootScope.$apply();\n            // hack to work around FF6 bug 684208 when scenario runner clicks on links\n            $window.angular['ff-684208-preventDefault'] = true;\n          }\n        }\n      }\n    });\n\n\n    // rewrite hashbang url <> html5 url\n    if (trimEmptyHash($location.absUrl()) !== trimEmptyHash(initialUrl)) {\n      $browser.url($location.absUrl(), true);\n    }\n\n    var initializing = true;\n\n    // update $location when $browser url changes\n    $browser.onUrlChange(function(newUrl, newState) {\n\n      if (!startsWith(newUrl, appBaseNoFile)) {\n        // If we are navigating outside of the app then force a reload\n        $window.location.href = newUrl;\n        return;\n      }\n\n      $rootScope.$evalAsync(function() {\n        var oldUrl = $location.absUrl();\n        var oldState = $location.$$state;\n        var defaultPrevented;\n        newUrl = trimEmptyHash(newUrl);\n        $location.$$parse(newUrl);\n        $location.$$state = newState;\n\n        defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,\n            newState, oldState).defaultPrevented;\n\n        // if the location was changed by a `$locationChangeStart` handler then stop\n        // processing this location change\n        if ($location.absUrl() !== newUrl) return;\n\n        if (defaultPrevented) {\n          $location.$$parse(oldUrl);\n          $location.$$state = oldState;\n          setBrowserUrlWithFallback(oldUrl, false, oldState);\n        } else {\n          initializing = false;\n          afterLocationChange(oldUrl, oldState);\n        }\n      });\n      if (!$rootScope.$$phase) $rootScope.$digest();\n    });\n\n    // update browser\n    $rootScope.$watch(function $locationWatch() {\n      if (initializing || $location.$$urlUpdatedByLocation) {\n        $location.$$urlUpdatedByLocation = false;\n\n        var oldUrl = trimEmptyHash($browser.url());\n        var newUrl = trimEmptyHash($location.absUrl());\n        var oldState = $browser.state();\n        var currentReplace = $location.$$replace;\n        var urlOrStateChanged = oldUrl !== newUrl ||\n          ($location.$$html5 && $sniffer.history && oldState !== $location.$$state);\n\n        if (initializing || urlOrStateChanged) {\n          initializing = false;\n\n          $rootScope.$evalAsync(function() {\n            var newUrl = $location.absUrl();\n            var defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,\n                $location.$$state, oldState).defaultPrevented;\n\n            // if the location was changed by a `$locationChangeStart` handler then stop\n            // processing this location change\n            if ($location.absUrl() !== newUrl) return;\n\n            if (defaultPrevented) {\n              $location.$$parse(oldUrl);\n              $location.$$state = oldState;\n            } else {\n              if (urlOrStateChanged) {\n                setBrowserUrlWithFallback(newUrl, currentReplace,\n                                          oldState === $location.$$state ? null : $location.$$state);\n              }\n              afterLocationChange(oldUrl, oldState);\n            }\n          });\n        }\n      }\n\n      $location.$$replace = false;\n\n      // we don't need to return anything because $evalAsync will make the digest loop dirty when\n      // there is a change\n    });\n\n    return $location;\n\n    function afterLocationChange(oldUrl, oldState) {\n      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl,\n        $location.$$state, oldState);\n    }\n}];\n}\n\n/**\n * @ngdoc service\n * @name $log\n * @requires $window\n *\n * @description\n * Simple service for logging. Default implementation safely writes the message\n * into the browser's console (if present).\n *\n * The main purpose of this service is to simplify debugging and troubleshooting.\n *\n * The default is to log `debug` messages. You can use\n * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.\n *\n * @example\n   <example module=\"logExample\" name=\"log-service\">\n     <file name=\"script.js\">\n       angular.module('logExample', [])\n         .controller('LogController', ['$scope', '$log', function($scope, $log) {\n           $scope.$log = $log;\n           $scope.message = 'Hello World!';\n         }]);\n     </file>\n     <file name=\"index.html\">\n       <div ng-controller=\"LogController\">\n         <p>Reload this page with open console, enter text and hit the log button...</p>\n         <label>Message:\n         <input type=\"text\" ng-model=\"message\" /></label>\n         <button ng-click=\"$log.log(message)\">log</button>\n         <button ng-click=\"$log.warn(message)\">warn</button>\n         <button ng-click=\"$log.info(message)\">info</button>\n         <button ng-click=\"$log.error(message)\">error</button>\n         <button ng-click=\"$log.debug(message)\">debug</button>\n       </div>\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc provider\n * @name $logProvider\n * @this\n *\n * @description\n * Use the `$logProvider` to configure how the application logs messages\n */\nfunction $LogProvider() {\n  var debug = true,\n      self = this;\n\n  /**\n   * @ngdoc method\n   * @name $logProvider#debugEnabled\n   * @description\n   * @param {boolean=} flag enable or disable debug level messages\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.debugEnabled = function(flag) {\n    if (isDefined(flag)) {\n      debug = flag;\n      return this;\n    } else {\n      return debug;\n    }\n  };\n\n  this.$get = ['$window', function($window) {\n    return {\n      /**\n       * @ngdoc method\n       * @name $log#log\n       *\n       * @description\n       * Write a log message\n       */\n      log: consoleLog('log'),\n\n      /**\n       * @ngdoc method\n       * @name $log#info\n       *\n       * @description\n       * Write an information message\n       */\n      info: consoleLog('info'),\n\n      /**\n       * @ngdoc method\n       * @name $log#warn\n       *\n       * @description\n       * Write a warning message\n       */\n      warn: consoleLog('warn'),\n\n      /**\n       * @ngdoc method\n       * @name $log#error\n       *\n       * @description\n       * Write an error message\n       */\n      error: consoleLog('error'),\n\n      /**\n       * @ngdoc method\n       * @name $log#debug\n       *\n       * @description\n       * Write a debug message\n       */\n      debug: (function() {\n        var fn = consoleLog('debug');\n\n        return function() {\n          if (debug) {\n            fn.apply(self, arguments);\n          }\n        };\n      })()\n    };\n\n    function formatError(arg) {\n      if (arg instanceof Error) {\n        if (arg.stack) {\n          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\n              ? 'Error: ' + arg.message + '\\n' + arg.stack\n              : arg.stack;\n        } else if (arg.sourceURL) {\n          arg = arg.message + '\\n' + arg.sourceURL + ':' + arg.line;\n        }\n      }\n      return arg;\n    }\n\n    function consoleLog(type) {\n      var console = $window.console || {},\n          logFn = console[type] || console.log || noop,\n          hasApply = false;\n\n      // Note: reading logFn.apply throws an error in IE11 in IE8 document mode.\n      // The reason behind this is that console.log has type \"object\" in IE8...\n      try {\n        hasApply = !!logFn.apply;\n      } catch (e) { /* empty */ }\n\n      if (hasApply) {\n        return function() {\n          var args = [];\n          forEach(arguments, function(arg) {\n            args.push(formatError(arg));\n          });\n          return logFn.apply(console, args);\n        };\n      }\n\n      // we are IE which either doesn't have window.console => this is noop and we do nothing,\n      // or we are IE where console.log doesn't have apply so we log at least first 2 args\n      return function(arg1, arg2) {\n        logFn(arg1, arg2 == null ? '' : arg2);\n      };\n    }\n  }];\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $parseMinErr = minErr('$parse');\n\nvar objectValueOf = {}.constructor.prototype.valueOf;\n\n// Sandboxing Angular Expressions\n// ------------------------------\n// Angular expressions are no longer sandboxed. So it is now even easier to access arbitrary JS code by\n// various means such as obtaining a reference to native JS functions like the Function constructor.\n//\n// As an example, consider the following Angular expression:\n//\n//   {}.toString.constructor('alert(\"evil JS code\")')\n//\n// It is important to realize that if you create an expression from a string that contains user provided\n// content then it is possible that your application contains a security vulnerability to an XSS style attack.\n//\n// See https://docs.angularjs.org/guide/security\n\n\nfunction getStringValue(name) {\n  // Property names must be strings. This means that non-string objects cannot be used\n  // as keys in an object. Any non-string object, including a number, is typecasted\n  // into a string via the toString method.\n  // -- MDN, https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Property_accessors#Property_names\n  //\n  // So, to ensure that we are checking the same `name` that JavaScript would use, we cast it\n  // to a string. It's not always possible. If `name` is an object and its `toString` method is\n  // 'broken' (doesn't return a string, isn't a function, etc.), an error will be thrown:\n  //\n  // TypeError: Cannot convert object to primitive value\n  //\n  // For performance reasons, we don't catch this error here and allow it to propagate up the call\n  // stack. Note that you'll get the same error in JavaScript if you try to access a property using\n  // such a 'broken' object as a key.\n  return name + '';\n}\n\n\nvar OPERATORS = createMap();\nforEach('+ - * / % === !== == != < > <= >= && || ! = |'.split(' '), function(operator) { OPERATORS[operator] = true; });\nvar ESCAPE = {'n':'\\n', 'f':'\\f', 'r':'\\r', 't':'\\t', 'v':'\\v', '\\'':'\\'', '\"':'\"'};\n\n\n/////////////////////////////////////////\n\n\n/**\n * @constructor\n */\nvar Lexer = function Lexer(options) {\n  this.options = options;\n};\n\nLexer.prototype = {\n  constructor: Lexer,\n\n  lex: function(text) {\n    this.text = text;\n    this.index = 0;\n    this.tokens = [];\n\n    while (this.index < this.text.length) {\n      var ch = this.text.charAt(this.index);\n      if (ch === '\"' || ch === '\\'') {\n        this.readString(ch);\n      } else if (this.isNumber(ch) || ch === '.' && this.isNumber(this.peek())) {\n        this.readNumber();\n      } else if (this.isIdentifierStart(this.peekMultichar())) {\n        this.readIdent();\n      } else if (this.is(ch, '(){}[].,;:?')) {\n        this.tokens.push({index: this.index, text: ch});\n        this.index++;\n      } else if (this.isWhitespace(ch)) {\n        this.index++;\n      } else {\n        var ch2 = ch + this.peek();\n        var ch3 = ch2 + this.peek(2);\n        var op1 = OPERATORS[ch];\n        var op2 = OPERATORS[ch2];\n        var op3 = OPERATORS[ch3];\n        if (op1 || op2 || op3) {\n          var token = op3 ? ch3 : (op2 ? ch2 : ch);\n          this.tokens.push({index: this.index, text: token, operator: true});\n          this.index += token.length;\n        } else {\n          this.throwError('Unexpected next character ', this.index, this.index + 1);\n        }\n      }\n    }\n    return this.tokens;\n  },\n\n  is: function(ch, chars) {\n    return chars.indexOf(ch) !== -1;\n  },\n\n  peek: function(i) {\n    var num = i || 1;\n    return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;\n  },\n\n  isNumber: function(ch) {\n    return ('0' <= ch && ch <= '9') && typeof ch === 'string';\n  },\n\n  isWhitespace: function(ch) {\n    // IE treats non-breaking space as \\u00A0\n    return (ch === ' ' || ch === '\\r' || ch === '\\t' ||\n            ch === '\\n' || ch === '\\v' || ch === '\\u00A0');\n  },\n\n  isIdentifierStart: function(ch) {\n    return this.options.isIdentifierStart ?\n        this.options.isIdentifierStart(ch, this.codePointAt(ch)) :\n        this.isValidIdentifierStart(ch);\n  },\n\n  isValidIdentifierStart: function(ch) {\n    return ('a' <= ch && ch <= 'z' ||\n            'A' <= ch && ch <= 'Z' ||\n            '_' === ch || ch === '$');\n  },\n\n  isIdentifierContinue: function(ch) {\n    return this.options.isIdentifierContinue ?\n        this.options.isIdentifierContinue(ch, this.codePointAt(ch)) :\n        this.isValidIdentifierContinue(ch);\n  },\n\n  isValidIdentifierContinue: function(ch, cp) {\n    return this.isValidIdentifierStart(ch, cp) || this.isNumber(ch);\n  },\n\n  codePointAt: function(ch) {\n    if (ch.length === 1) return ch.charCodeAt(0);\n    // eslint-disable-next-line no-bitwise\n    return (ch.charCodeAt(0) << 10) + ch.charCodeAt(1) - 0x35FDC00;\n  },\n\n  peekMultichar: function() {\n    var ch = this.text.charAt(this.index);\n    var peek = this.peek();\n    if (!peek) {\n      return ch;\n    }\n    var cp1 = ch.charCodeAt(0);\n    var cp2 = peek.charCodeAt(0);\n    if (cp1 >= 0xD800 && cp1 <= 0xDBFF && cp2 >= 0xDC00 && cp2 <= 0xDFFF) {\n      return ch + peek;\n    }\n    return ch;\n  },\n\n  isExpOperator: function(ch) {\n    return (ch === '-' || ch === '+' || this.isNumber(ch));\n  },\n\n  throwError: function(error, start, end) {\n    end = end || this.index;\n    var colStr = (isDefined(start)\n            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'\n            : ' ' + end);\n    throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',\n        error, colStr, this.text);\n  },\n\n  readNumber: function() {\n    var number = '';\n    var start = this.index;\n    while (this.index < this.text.length) {\n      var ch = lowercase(this.text.charAt(this.index));\n      if (ch === '.' || this.isNumber(ch)) {\n        number += ch;\n      } else {\n        var peekCh = this.peek();\n        if (ch === 'e' && this.isExpOperator(peekCh)) {\n          number += ch;\n        } else if (this.isExpOperator(ch) &&\n            peekCh && this.isNumber(peekCh) &&\n            number.charAt(number.length - 1) === 'e') {\n          number += ch;\n        } else if (this.isExpOperator(ch) &&\n            (!peekCh || !this.isNumber(peekCh)) &&\n            number.charAt(number.length - 1) === 'e') {\n          this.throwError('Invalid exponent');\n        } else {\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.tokens.push({\n      index: start,\n      text: number,\n      constant: true,\n      value: Number(number)\n    });\n  },\n\n  readIdent: function() {\n    var start = this.index;\n    this.index += this.peekMultichar().length;\n    while (this.index < this.text.length) {\n      var ch = this.peekMultichar();\n      if (!this.isIdentifierContinue(ch)) {\n        break;\n      }\n      this.index += ch.length;\n    }\n    this.tokens.push({\n      index: start,\n      text: this.text.slice(start, this.index),\n      identifier: true\n    });\n  },\n\n  readString: function(quote) {\n    var start = this.index;\n    this.index++;\n    var string = '';\n    var rawString = quote;\n    var escape = false;\n    while (this.index < this.text.length) {\n      var ch = this.text.charAt(this.index);\n      rawString += ch;\n      if (escape) {\n        if (ch === 'u') {\n          var hex = this.text.substring(this.index + 1, this.index + 5);\n          if (!hex.match(/[\\da-f]{4}/i)) {\n            this.throwError('Invalid unicode escape [\\\\u' + hex + ']');\n          }\n          this.index += 4;\n          string += String.fromCharCode(parseInt(hex, 16));\n        } else {\n          var rep = ESCAPE[ch];\n          string = string + (rep || ch);\n        }\n        escape = false;\n      } else if (ch === '\\\\') {\n        escape = true;\n      } else if (ch === quote) {\n        this.index++;\n        this.tokens.push({\n          index: start,\n          text: rawString,\n          constant: true,\n          value: string\n        });\n        return;\n      } else {\n        string += ch;\n      }\n      this.index++;\n    }\n    this.throwError('Unterminated quote', start);\n  }\n};\n\nvar AST = function AST(lexer, options) {\n  this.lexer = lexer;\n  this.options = options;\n};\n\nAST.Program = 'Program';\nAST.ExpressionStatement = 'ExpressionStatement';\nAST.AssignmentExpression = 'AssignmentExpression';\nAST.ConditionalExpression = 'ConditionalExpression';\nAST.LogicalExpression = 'LogicalExpression';\nAST.BinaryExpression = 'BinaryExpression';\nAST.UnaryExpression = 'UnaryExpression';\nAST.CallExpression = 'CallExpression';\nAST.MemberExpression = 'MemberExpression';\nAST.Identifier = 'Identifier';\nAST.Literal = 'Literal';\nAST.ArrayExpression = 'ArrayExpression';\nAST.Property = 'Property';\nAST.ObjectExpression = 'ObjectExpression';\nAST.ThisExpression = 'ThisExpression';\nAST.LocalsExpression = 'LocalsExpression';\n\n// Internal use only\nAST.NGValueParameter = 'NGValueParameter';\n\nAST.prototype = {\n  ast: function(text) {\n    this.text = text;\n    this.tokens = this.lexer.lex(text);\n\n    var value = this.program();\n\n    if (this.tokens.length !== 0) {\n      this.throwError('is an unexpected token', this.tokens[0]);\n    }\n\n    return value;\n  },\n\n  program: function() {\n    var body = [];\n    while (true) {\n      if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))\n        body.push(this.expressionStatement());\n      if (!this.expect(';')) {\n        return { type: AST.Program, body: body};\n      }\n    }\n  },\n\n  expressionStatement: function() {\n    return { type: AST.ExpressionStatement, expression: this.filterChain() };\n  },\n\n  filterChain: function() {\n    var left = this.expression();\n    while (this.expect('|')) {\n      left = this.filter(left);\n    }\n    return left;\n  },\n\n  expression: function() {\n    return this.assignment();\n  },\n\n  assignment: function() {\n    var result = this.ternary();\n    if (this.expect('=')) {\n      if (!isAssignable(result)) {\n        throw $parseMinErr('lval', 'Trying to assign a value to a non l-value');\n      }\n\n      result = { type: AST.AssignmentExpression, left: result, right: this.assignment(), operator: '='};\n    }\n    return result;\n  },\n\n  ternary: function() {\n    var test = this.logicalOR();\n    var alternate;\n    var consequent;\n    if (this.expect('?')) {\n      alternate = this.expression();\n      if (this.consume(':')) {\n        consequent = this.expression();\n        return { type: AST.ConditionalExpression, test: test, alternate: alternate, consequent: consequent};\n      }\n    }\n    return test;\n  },\n\n  logicalOR: function() {\n    var left = this.logicalAND();\n    while (this.expect('||')) {\n      left = { type: AST.LogicalExpression, operator: '||', left: left, right: this.logicalAND() };\n    }\n    return left;\n  },\n\n  logicalAND: function() {\n    var left = this.equality();\n    while (this.expect('&&')) {\n      left = { type: AST.LogicalExpression, operator: '&&', left: left, right: this.equality()};\n    }\n    return left;\n  },\n\n  equality: function() {\n    var left = this.relational();\n    var token;\n    while ((token = this.expect('==','!=','===','!=='))) {\n      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.relational() };\n    }\n    return left;\n  },\n\n  relational: function() {\n    var left = this.additive();\n    var token;\n    while ((token = this.expect('<', '>', '<=', '>='))) {\n      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.additive() };\n    }\n    return left;\n  },\n\n  additive: function() {\n    var left = this.multiplicative();\n    var token;\n    while ((token = this.expect('+','-'))) {\n      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.multiplicative() };\n    }\n    return left;\n  },\n\n  multiplicative: function() {\n    var left = this.unary();\n    var token;\n    while ((token = this.expect('*','/','%'))) {\n      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.unary() };\n    }\n    return left;\n  },\n\n  unary: function() {\n    var token;\n    if ((token = this.expect('+', '-', '!'))) {\n      return { type: AST.UnaryExpression, operator: token.text, prefix: true, argument: this.unary() };\n    } else {\n      return this.primary();\n    }\n  },\n\n  primary: function() {\n    var primary;\n    if (this.expect('(')) {\n      primary = this.filterChain();\n      this.consume(')');\n    } else if (this.expect('[')) {\n      primary = this.arrayDeclaration();\n    } else if (this.expect('{')) {\n      primary = this.object();\n    } else if (this.selfReferential.hasOwnProperty(this.peek().text)) {\n      primary = copy(this.selfReferential[this.consume().text]);\n    } else if (this.options.literals.hasOwnProperty(this.peek().text)) {\n      primary = { type: AST.Literal, value: this.options.literals[this.consume().text]};\n    } else if (this.peek().identifier) {\n      primary = this.identifier();\n    } else if (this.peek().constant) {\n      primary = this.constant();\n    } else {\n      this.throwError('not a primary expression', this.peek());\n    }\n\n    var next;\n    while ((next = this.expect('(', '[', '.'))) {\n      if (next.text === '(') {\n        primary = {type: AST.CallExpression, callee: primary, arguments: this.parseArguments() };\n        this.consume(')');\n      } else if (next.text === '[') {\n        primary = { type: AST.MemberExpression, object: primary, property: this.expression(), computed: true };\n        this.consume(']');\n      } else if (next.text === '.') {\n        primary = { type: AST.MemberExpression, object: primary, property: this.identifier(), computed: false };\n      } else {\n        this.throwError('IMPOSSIBLE');\n      }\n    }\n    return primary;\n  },\n\n  filter: function(baseExpression) {\n    var args = [baseExpression];\n    var result = {type: AST.CallExpression, callee: this.identifier(), arguments: args, filter: true};\n\n    while (this.expect(':')) {\n      args.push(this.expression());\n    }\n\n    return result;\n  },\n\n  parseArguments: function() {\n    var args = [];\n    if (this.peekToken().text !== ')') {\n      do {\n        args.push(this.filterChain());\n      } while (this.expect(','));\n    }\n    return args;\n  },\n\n  identifier: function() {\n    var token = this.consume();\n    if (!token.identifier) {\n      this.throwError('is not a valid identifier', token);\n    }\n    return { type: AST.Identifier, name: token.text };\n  },\n\n  constant: function() {\n    // TODO check that it is a constant\n    return { type: AST.Literal, value: this.consume().value };\n  },\n\n  arrayDeclaration: function() {\n    var elements = [];\n    if (this.peekToken().text !== ']') {\n      do {\n        if (this.peek(']')) {\n          // Support trailing commas per ES5.1.\n          break;\n        }\n        elements.push(this.expression());\n      } while (this.expect(','));\n    }\n    this.consume(']');\n\n    return { type: AST.ArrayExpression, elements: elements };\n  },\n\n  object: function() {\n    var properties = [], property;\n    if (this.peekToken().text !== '}') {\n      do {\n        if (this.peek('}')) {\n          // Support trailing commas per ES5.1.\n          break;\n        }\n        property = {type: AST.Property, kind: 'init'};\n        if (this.peek().constant) {\n          property.key = this.constant();\n          property.computed = false;\n          this.consume(':');\n          property.value = this.expression();\n        } else if (this.peek().identifier) {\n          property.key = this.identifier();\n          property.computed = false;\n          if (this.peek(':')) {\n            this.consume(':');\n            property.value = this.expression();\n          } else {\n            property.value = property.key;\n          }\n        } else if (this.peek('[')) {\n          this.consume('[');\n          property.key = this.expression();\n          this.consume(']');\n          property.computed = true;\n          this.consume(':');\n          property.value = this.expression();\n        } else {\n          this.throwError('invalid key', this.peek());\n        }\n        properties.push(property);\n      } while (this.expect(','));\n    }\n    this.consume('}');\n\n    return {type: AST.ObjectExpression, properties: properties };\n  },\n\n  throwError: function(msg, token) {\n    throw $parseMinErr('syntax',\n        'Syntax Error: Token \\'{0}\\' {1} at column {2} of the expression [{3}] starting at [{4}].',\n          token.text, msg, (token.index + 1), this.text, this.text.substring(token.index));\n  },\n\n  consume: function(e1) {\n    if (this.tokens.length === 0) {\n      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\n    }\n\n    var token = this.expect(e1);\n    if (!token) {\n      this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());\n    }\n    return token;\n  },\n\n  peekToken: function() {\n    if (this.tokens.length === 0) {\n      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\n    }\n    return this.tokens[0];\n  },\n\n  peek: function(e1, e2, e3, e4) {\n    return this.peekAhead(0, e1, e2, e3, e4);\n  },\n\n  peekAhead: function(i, e1, e2, e3, e4) {\n    if (this.tokens.length > i) {\n      var token = this.tokens[i];\n      var t = token.text;\n      if (t === e1 || t === e2 || t === e3 || t === e4 ||\n          (!e1 && !e2 && !e3 && !e4)) {\n        return token;\n      }\n    }\n    return false;\n  },\n\n  expect: function(e1, e2, e3, e4) {\n    var token = this.peek(e1, e2, e3, e4);\n    if (token) {\n      this.tokens.shift();\n      return token;\n    }\n    return false;\n  },\n\n  selfReferential: {\n    'this': {type: AST.ThisExpression },\n    '$locals': {type: AST.LocalsExpression }\n  }\n};\n\nfunction ifDefined(v, d) {\n  return typeof v !== 'undefined' ? v : d;\n}\n\nfunction plusFn(l, r) {\n  if (typeof l === 'undefined') return r;\n  if (typeof r === 'undefined') return l;\n  return l + r;\n}\n\nfunction isStateless($filter, filterName) {\n  var fn = $filter(filterName);\n  return !fn.$stateful;\n}\n\nfunction findConstantAndWatchExpressions(ast, $filter) {\n  var allConstants;\n  var argsToWatch;\n  var isStatelessFilter;\n  switch (ast.type) {\n  case AST.Program:\n    allConstants = true;\n    forEach(ast.body, function(expr) {\n      findConstantAndWatchExpressions(expr.expression, $filter);\n      allConstants = allConstants && expr.expression.constant;\n    });\n    ast.constant = allConstants;\n    break;\n  case AST.Literal:\n    ast.constant = true;\n    ast.toWatch = [];\n    break;\n  case AST.UnaryExpression:\n    findConstantAndWatchExpressions(ast.argument, $filter);\n    ast.constant = ast.argument.constant;\n    ast.toWatch = ast.argument.toWatch;\n    break;\n  case AST.BinaryExpression:\n    findConstantAndWatchExpressions(ast.left, $filter);\n    findConstantAndWatchExpressions(ast.right, $filter);\n    ast.constant = ast.left.constant && ast.right.constant;\n    ast.toWatch = ast.left.toWatch.concat(ast.right.toWatch);\n    break;\n  case AST.LogicalExpression:\n    findConstantAndWatchExpressions(ast.left, $filter);\n    findConstantAndWatchExpressions(ast.right, $filter);\n    ast.constant = ast.left.constant && ast.right.constant;\n    ast.toWatch = ast.constant ? [] : [ast];\n    break;\n  case AST.ConditionalExpression:\n    findConstantAndWatchExpressions(ast.test, $filter);\n    findConstantAndWatchExpressions(ast.alternate, $filter);\n    findConstantAndWatchExpressions(ast.consequent, $filter);\n    ast.constant = ast.test.constant && ast.alternate.constant && ast.consequent.constant;\n    ast.toWatch = ast.constant ? [] : [ast];\n    break;\n  case AST.Identifier:\n    ast.constant = false;\n    ast.toWatch = [ast];\n    break;\n  case AST.MemberExpression:\n    findConstantAndWatchExpressions(ast.object, $filter);\n    if (ast.computed) {\n      findConstantAndWatchExpressions(ast.property, $filter);\n    }\n    ast.constant = ast.object.constant && (!ast.computed || ast.property.constant);\n    ast.toWatch = [ast];\n    break;\n  case AST.CallExpression:\n    isStatelessFilter = ast.filter ? isStateless($filter, ast.callee.name) : false;\n    allConstants = isStatelessFilter;\n    argsToWatch = [];\n    forEach(ast.arguments, function(expr) {\n      findConstantAndWatchExpressions(expr, $filter);\n      allConstants = allConstants && expr.constant;\n      if (!expr.constant) {\n        argsToWatch.push.apply(argsToWatch, expr.toWatch);\n      }\n    });\n    ast.constant = allConstants;\n    ast.toWatch = isStatelessFilter ? argsToWatch : [ast];\n    break;\n  case AST.AssignmentExpression:\n    findConstantAndWatchExpressions(ast.left, $filter);\n    findConstantAndWatchExpressions(ast.right, $filter);\n    ast.constant = ast.left.constant && ast.right.constant;\n    ast.toWatch = [ast];\n    break;\n  case AST.ArrayExpression:\n    allConstants = true;\n    argsToWatch = [];\n    forEach(ast.elements, function(expr) {\n      findConstantAndWatchExpressions(expr, $filter);\n      allConstants = allConstants && expr.constant;\n      if (!expr.constant) {\n        argsToWatch.push.apply(argsToWatch, expr.toWatch);\n      }\n    });\n    ast.constant = allConstants;\n    ast.toWatch = argsToWatch;\n    break;\n  case AST.ObjectExpression:\n    allConstants = true;\n    argsToWatch = [];\n    forEach(ast.properties, function(property) {\n      findConstantAndWatchExpressions(property.value, $filter);\n      allConstants = allConstants && property.value.constant && !property.computed;\n      if (!property.value.constant) {\n        argsToWatch.push.apply(argsToWatch, property.value.toWatch);\n      }\n      if (property.computed) {\n        findConstantAndWatchExpressions(property.key, $filter);\n        if (!property.key.constant) {\n          argsToWatch.push.apply(argsToWatch, property.key.toWatch);\n        }\n      }\n\n    });\n    ast.constant = allConstants;\n    ast.toWatch = argsToWatch;\n    break;\n  case AST.ThisExpression:\n    ast.constant = false;\n    ast.toWatch = [];\n    break;\n  case AST.LocalsExpression:\n    ast.constant = false;\n    ast.toWatch = [];\n    break;\n  }\n}\n\nfunction getInputs(body) {\n  if (body.length !== 1) return;\n  var lastExpression = body[0].expression;\n  var candidate = lastExpression.toWatch;\n  if (candidate.length !== 1) return candidate;\n  return candidate[0] !== lastExpression ? candidate : undefined;\n}\n\nfunction isAssignable(ast) {\n  return ast.type === AST.Identifier || ast.type === AST.MemberExpression;\n}\n\nfunction assignableAST(ast) {\n  if (ast.body.length === 1 && isAssignable(ast.body[0].expression)) {\n    return {type: AST.AssignmentExpression, left: ast.body[0].expression, right: {type: AST.NGValueParameter}, operator: '='};\n  }\n}\n\nfunction isLiteral(ast) {\n  return ast.body.length === 0 ||\n      ast.body.length === 1 && (\n      ast.body[0].expression.type === AST.Literal ||\n      ast.body[0].expression.type === AST.ArrayExpression ||\n      ast.body[0].expression.type === AST.ObjectExpression);\n}\n\nfunction isConstant(ast) {\n  return ast.constant;\n}\n\nfunction ASTCompiler(astBuilder, $filter) {\n  this.astBuilder = astBuilder;\n  this.$filter = $filter;\n}\n\nASTCompiler.prototype = {\n  compile: function(expression) {\n    var self = this;\n    var ast = this.astBuilder.ast(expression);\n    this.state = {\n      nextId: 0,\n      filters: {},\n      fn: {vars: [], body: [], own: {}},\n      assign: {vars: [], body: [], own: {}},\n      inputs: []\n    };\n    findConstantAndWatchExpressions(ast, self.$filter);\n    var extra = '';\n    var assignable;\n    this.stage = 'assign';\n    if ((assignable = assignableAST(ast))) {\n      this.state.computing = 'assign';\n      var result = this.nextId();\n      this.recurse(assignable, result);\n      this.return_(result);\n      extra = 'fn.assign=' + this.generateFunction('assign', 's,v,l');\n    }\n    var toWatch = getInputs(ast.body);\n    self.stage = 'inputs';\n    forEach(toWatch, function(watch, key) {\n      var fnKey = 'fn' + key;\n      self.state[fnKey] = {vars: [], body: [], own: {}};\n      self.state.computing = fnKey;\n      var intoId = self.nextId();\n      self.recurse(watch, intoId);\n      self.return_(intoId);\n      self.state.inputs.push(fnKey);\n      watch.watchId = key;\n    });\n    this.state.computing = 'fn';\n    this.stage = 'main';\n    this.recurse(ast);\n    var fnString =\n      // The build and minification steps remove the string \"use strict\" from the code, but this is done using a regex.\n      // This is a workaround for this until we do a better job at only removing the prefix only when we should.\n      '\"' + this.USE + ' ' + this.STRICT + '\";\\n' +\n      this.filterPrefix() +\n      'var fn=' + this.generateFunction('fn', 's,l,a,i') +\n      extra +\n      this.watchFns() +\n      'return fn;';\n\n    // eslint-disable-next-line no-new-func\n    var fn = (new Function('$filter',\n        'getStringValue',\n        'ifDefined',\n        'plus',\n        fnString))(\n          this.$filter,\n          getStringValue,\n          ifDefined,\n          plusFn);\n    this.state = this.stage = undefined;\n    fn.literal = isLiteral(ast);\n    fn.constant = isConstant(ast);\n    return fn;\n  },\n\n  USE: 'use',\n\n  STRICT: 'strict',\n\n  watchFns: function() {\n    var result = [];\n    var fns = this.state.inputs;\n    var self = this;\n    forEach(fns, function(name) {\n      result.push('var ' + name + '=' + self.generateFunction(name, 's'));\n    });\n    if (fns.length) {\n      result.push('fn.inputs=[' + fns.join(',') + '];');\n    }\n    return result.join('');\n  },\n\n  generateFunction: function(name, params) {\n    return 'function(' + params + '){' +\n        this.varsPrefix(name) +\n        this.body(name) +\n        '};';\n  },\n\n  filterPrefix: function() {\n    var parts = [];\n    var self = this;\n    forEach(this.state.filters, function(id, filter) {\n      parts.push(id + '=$filter(' + self.escape(filter) + ')');\n    });\n    if (parts.length) return 'var ' + parts.join(',') + ';';\n    return '';\n  },\n\n  varsPrefix: function(section) {\n    return this.state[section].vars.length ? 'var ' + this.state[section].vars.join(',') + ';' : '';\n  },\n\n  body: function(section) {\n    return this.state[section].body.join('');\n  },\n\n  recurse: function(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {\n    var left, right, self = this, args, expression, computed;\n    recursionFn = recursionFn || noop;\n    if (!skipWatchIdCheck && isDefined(ast.watchId)) {\n      intoId = intoId || this.nextId();\n      this.if_('i',\n        this.lazyAssign(intoId, this.computedMember('i', ast.watchId)),\n        this.lazyRecurse(ast, intoId, nameId, recursionFn, create, true)\n      );\n      return;\n    }\n    switch (ast.type) {\n    case AST.Program:\n      forEach(ast.body, function(expression, pos) {\n        self.recurse(expression.expression, undefined, undefined, function(expr) { right = expr; });\n        if (pos !== ast.body.length - 1) {\n          self.current().body.push(right, ';');\n        } else {\n          self.return_(right);\n        }\n      });\n      break;\n    case AST.Literal:\n      expression = this.escape(ast.value);\n      this.assign(intoId, expression);\n      recursionFn(intoId || expression);\n      break;\n    case AST.UnaryExpression:\n      this.recurse(ast.argument, undefined, undefined, function(expr) { right = expr; });\n      expression = ast.operator + '(' + this.ifDefined(right, 0) + ')';\n      this.assign(intoId, expression);\n      recursionFn(expression);\n      break;\n    case AST.BinaryExpression:\n      this.recurse(ast.left, undefined, undefined, function(expr) { left = expr; });\n      this.recurse(ast.right, undefined, undefined, function(expr) { right = expr; });\n      if (ast.operator === '+') {\n        expression = this.plus(left, right);\n      } else if (ast.operator === '-') {\n        expression = this.ifDefined(left, 0) + ast.operator + this.ifDefined(right, 0);\n      } else {\n        expression = '(' + left + ')' + ast.operator + '(' + right + ')';\n      }\n      this.assign(intoId, expression);\n      recursionFn(expression);\n      break;\n    case AST.LogicalExpression:\n      intoId = intoId || this.nextId();\n      self.recurse(ast.left, intoId);\n      self.if_(ast.operator === '&&' ? intoId : self.not(intoId), self.lazyRecurse(ast.right, intoId));\n      recursionFn(intoId);\n      break;\n    case AST.ConditionalExpression:\n      intoId = intoId || this.nextId();\n      self.recurse(ast.test, intoId);\n      self.if_(intoId, self.lazyRecurse(ast.alternate, intoId), self.lazyRecurse(ast.consequent, intoId));\n      recursionFn(intoId);\n      break;\n    case AST.Identifier:\n      intoId = intoId || this.nextId();\n      if (nameId) {\n        nameId.context = self.stage === 'inputs' ? 's' : this.assign(this.nextId(), this.getHasOwnProperty('l', ast.name) + '?l:s');\n        nameId.computed = false;\n        nameId.name = ast.name;\n      }\n      self.if_(self.stage === 'inputs' || self.not(self.getHasOwnProperty('l', ast.name)),\n        function() {\n          self.if_(self.stage === 'inputs' || 's', function() {\n            if (create && create !== 1) {\n              self.if_(\n                self.isNull(self.nonComputedMember('s', ast.name)),\n                self.lazyAssign(self.nonComputedMember('s', ast.name), '{}'));\n            }\n            self.assign(intoId, self.nonComputedMember('s', ast.name));\n          });\n        }, intoId && self.lazyAssign(intoId, self.nonComputedMember('l', ast.name))\n        );\n      recursionFn(intoId);\n      break;\n    case AST.MemberExpression:\n      left = nameId && (nameId.context = this.nextId()) || this.nextId();\n      intoId = intoId || this.nextId();\n      self.recurse(ast.object, left, undefined, function() {\n        self.if_(self.notNull(left), function() {\n          if (ast.computed) {\n            right = self.nextId();\n            self.recurse(ast.property, right);\n            self.getStringValue(right);\n            if (create && create !== 1) {\n              self.if_(self.not(self.computedMember(left, right)), self.lazyAssign(self.computedMember(left, right), '{}'));\n            }\n            expression = self.computedMember(left, right);\n            self.assign(intoId, expression);\n            if (nameId) {\n              nameId.computed = true;\n              nameId.name = right;\n            }\n          } else {\n            if (create && create !== 1) {\n              self.if_(self.isNull(self.nonComputedMember(left, ast.property.name)), self.lazyAssign(self.nonComputedMember(left, ast.property.name), '{}'));\n            }\n            expression = self.nonComputedMember(left, ast.property.name);\n            self.assign(intoId, expression);\n            if (nameId) {\n              nameId.computed = false;\n              nameId.name = ast.property.name;\n            }\n          }\n        }, function() {\n          self.assign(intoId, 'undefined');\n        });\n        recursionFn(intoId);\n      }, !!create);\n      break;\n    case AST.CallExpression:\n      intoId = intoId || this.nextId();\n      if (ast.filter) {\n        right = self.filter(ast.callee.name);\n        args = [];\n        forEach(ast.arguments, function(expr) {\n          var argument = self.nextId();\n          self.recurse(expr, argument);\n          args.push(argument);\n        });\n        expression = right + '(' + args.join(',') + ')';\n        self.assign(intoId, expression);\n        recursionFn(intoId);\n      } else {\n        right = self.nextId();\n        left = {};\n        args = [];\n        self.recurse(ast.callee, right, left, function() {\n          self.if_(self.notNull(right), function() {\n            forEach(ast.arguments, function(expr) {\n              self.recurse(expr, ast.constant ? undefined : self.nextId(), undefined, function(argument) {\n                args.push(argument);\n              });\n            });\n            if (left.name) {\n              expression = self.member(left.context, left.name, left.computed) + '(' + args.join(',') + ')';\n            } else {\n              expression = right + '(' + args.join(',') + ')';\n            }\n            self.assign(intoId, expression);\n          }, function() {\n            self.assign(intoId, 'undefined');\n          });\n          recursionFn(intoId);\n        });\n      }\n      break;\n    case AST.AssignmentExpression:\n      right = this.nextId();\n      left = {};\n      this.recurse(ast.left, undefined, left, function() {\n        self.if_(self.notNull(left.context), function() {\n          self.recurse(ast.right, right);\n          expression = self.member(left.context, left.name, left.computed) + ast.operator + right;\n          self.assign(intoId, expression);\n          recursionFn(intoId || expression);\n        });\n      }, 1);\n      break;\n    case AST.ArrayExpression:\n      args = [];\n      forEach(ast.elements, function(expr) {\n        self.recurse(expr, ast.constant ? undefined : self.nextId(), undefined, function(argument) {\n          args.push(argument);\n        });\n      });\n      expression = '[' + args.join(',') + ']';\n      this.assign(intoId, expression);\n      recursionFn(intoId || expression);\n      break;\n    case AST.ObjectExpression:\n      args = [];\n      computed = false;\n      forEach(ast.properties, function(property) {\n        if (property.computed) {\n          computed = true;\n        }\n      });\n      if (computed) {\n        intoId = intoId || this.nextId();\n        this.assign(intoId, '{}');\n        forEach(ast.properties, function(property) {\n          if (property.computed) {\n            left = self.nextId();\n            self.recurse(property.key, left);\n          } else {\n            left = property.key.type === AST.Identifier ?\n                       property.key.name :\n                       ('' + property.key.value);\n          }\n          right = self.nextId();\n          self.recurse(property.value, right);\n          self.assign(self.member(intoId, left, property.computed), right);\n        });\n      } else {\n        forEach(ast.properties, function(property) {\n          self.recurse(property.value, ast.constant ? undefined : self.nextId(), undefined, function(expr) {\n            args.push(self.escape(\n                property.key.type === AST.Identifier ? property.key.name :\n                  ('' + property.key.value)) +\n                ':' + expr);\n          });\n        });\n        expression = '{' + args.join(',') + '}';\n        this.assign(intoId, expression);\n      }\n      recursionFn(intoId || expression);\n      break;\n    case AST.ThisExpression:\n      this.assign(intoId, 's');\n      recursionFn(intoId || 's');\n      break;\n    case AST.LocalsExpression:\n      this.assign(intoId, 'l');\n      recursionFn(intoId || 'l');\n      break;\n    case AST.NGValueParameter:\n      this.assign(intoId, 'v');\n      recursionFn(intoId || 'v');\n      break;\n    }\n  },\n\n  getHasOwnProperty: function(element, property) {\n    var key = element + '.' + property;\n    var own = this.current().own;\n    if (!own.hasOwnProperty(key)) {\n      own[key] = this.nextId(false, element + '&&(' + this.escape(property) + ' in ' + element + ')');\n    }\n    return own[key];\n  },\n\n  assign: function(id, value) {\n    if (!id) return;\n    this.current().body.push(id, '=', value, ';');\n    return id;\n  },\n\n  filter: function(filterName) {\n    if (!this.state.filters.hasOwnProperty(filterName)) {\n      this.state.filters[filterName] = this.nextId(true);\n    }\n    return this.state.filters[filterName];\n  },\n\n  ifDefined: function(id, defaultValue) {\n    return 'ifDefined(' + id + ',' + this.escape(defaultValue) + ')';\n  },\n\n  plus: function(left, right) {\n    return 'plus(' + left + ',' + right + ')';\n  },\n\n  return_: function(id) {\n    this.current().body.push('return ', id, ';');\n  },\n\n  if_: function(test, alternate, consequent) {\n    if (test === true) {\n      alternate();\n    } else {\n      var body = this.current().body;\n      body.push('if(', test, '){');\n      alternate();\n      body.push('}');\n      if (consequent) {\n        body.push('else{');\n        consequent();\n        body.push('}');\n      }\n    }\n  },\n\n  not: function(expression) {\n    return '!(' + expression + ')';\n  },\n\n  isNull: function(expression) {\n    return expression + '==null';\n  },\n\n  notNull: function(expression) {\n    return expression + '!=null';\n  },\n\n  nonComputedMember: function(left, right) {\n    var SAFE_IDENTIFIER = /^[$_a-zA-Z][$_a-zA-Z0-9]*$/;\n    var UNSAFE_CHARACTERS = /[^$_a-zA-Z0-9]/g;\n    if (SAFE_IDENTIFIER.test(right)) {\n      return left + '.' + right;\n    } else {\n      return left  + '[\"' + right.replace(UNSAFE_CHARACTERS, this.stringEscapeFn) + '\"]';\n    }\n  },\n\n  computedMember: function(left, right) {\n    return left + '[' + right + ']';\n  },\n\n  member: function(left, right, computed) {\n    if (computed) return this.computedMember(left, right);\n    return this.nonComputedMember(left, right);\n  },\n\n  getStringValue: function(item) {\n    this.assign(item, 'getStringValue(' + item + ')');\n  },\n\n  lazyRecurse: function(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {\n    var self = this;\n    return function() {\n      self.recurse(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck);\n    };\n  },\n\n  lazyAssign: function(id, value) {\n    var self = this;\n    return function() {\n      self.assign(id, value);\n    };\n  },\n\n  stringEscapeRegex: /[^ a-zA-Z0-9]/g,\n\n  stringEscapeFn: function(c) {\n    return '\\\\u' + ('0000' + c.charCodeAt(0).toString(16)).slice(-4);\n  },\n\n  escape: function(value) {\n    if (isString(value)) return '\\'' + value.replace(this.stringEscapeRegex, this.stringEscapeFn) + '\\'';\n    if (isNumber(value)) return value.toString();\n    if (value === true) return 'true';\n    if (value === false) return 'false';\n    if (value === null) return 'null';\n    if (typeof value === 'undefined') return 'undefined';\n\n    throw $parseMinErr('esc', 'IMPOSSIBLE');\n  },\n\n  nextId: function(skip, init) {\n    var id = 'v' + (this.state.nextId++);\n    if (!skip) {\n      this.current().vars.push(id + (init ? '=' + init : ''));\n    }\n    return id;\n  },\n\n  current: function() {\n    return this.state[this.state.computing];\n  }\n};\n\n\nfunction ASTInterpreter(astBuilder, $filter) {\n  this.astBuilder = astBuilder;\n  this.$filter = $filter;\n}\n\nASTInterpreter.prototype = {\n  compile: function(expression) {\n    var self = this;\n    var ast = this.astBuilder.ast(expression);\n    findConstantAndWatchExpressions(ast, self.$filter);\n    var assignable;\n    var assign;\n    if ((assignable = assignableAST(ast))) {\n      assign = this.recurse(assignable);\n    }\n    var toWatch = getInputs(ast.body);\n    var inputs;\n    if (toWatch) {\n      inputs = [];\n      forEach(toWatch, function(watch, key) {\n        var input = self.recurse(watch);\n        watch.input = input;\n        inputs.push(input);\n        watch.watchId = key;\n      });\n    }\n    var expressions = [];\n    forEach(ast.body, function(expression) {\n      expressions.push(self.recurse(expression.expression));\n    });\n    var fn = ast.body.length === 0 ? noop :\n             ast.body.length === 1 ? expressions[0] :\n             function(scope, locals) {\n               var lastValue;\n               forEach(expressions, function(exp) {\n                 lastValue = exp(scope, locals);\n               });\n               return lastValue;\n             };\n    if (assign) {\n      fn.assign = function(scope, value, locals) {\n        return assign(scope, locals, value);\n      };\n    }\n    if (inputs) {\n      fn.inputs = inputs;\n    }\n    fn.literal = isLiteral(ast);\n    fn.constant = isConstant(ast);\n    return fn;\n  },\n\n  recurse: function(ast, context, create) {\n    var left, right, self = this, args;\n    if (ast.input) {\n      return this.inputs(ast.input, ast.watchId);\n    }\n    switch (ast.type) {\n    case AST.Literal:\n      return this.value(ast.value, context);\n    case AST.UnaryExpression:\n      right = this.recurse(ast.argument);\n      return this['unary' + ast.operator](right, context);\n    case AST.BinaryExpression:\n      left = this.recurse(ast.left);\n      right = this.recurse(ast.right);\n      return this['binary' + ast.operator](left, right, context);\n    case AST.LogicalExpression:\n      left = this.recurse(ast.left);\n      right = this.recurse(ast.right);\n      return this['binary' + ast.operator](left, right, context);\n    case AST.ConditionalExpression:\n      return this['ternary?:'](\n        this.recurse(ast.test),\n        this.recurse(ast.alternate),\n        this.recurse(ast.consequent),\n        context\n      );\n    case AST.Identifier:\n      return self.identifier(ast.name, context, create);\n    case AST.MemberExpression:\n      left = this.recurse(ast.object, false, !!create);\n      if (!ast.computed) {\n        right = ast.property.name;\n      }\n      if (ast.computed) right = this.recurse(ast.property);\n      return ast.computed ?\n        this.computedMember(left, right, context, create) :\n        this.nonComputedMember(left, right, context, create);\n    case AST.CallExpression:\n      args = [];\n      forEach(ast.arguments, function(expr) {\n        args.push(self.recurse(expr));\n      });\n      if (ast.filter) right = this.$filter(ast.callee.name);\n      if (!ast.filter) right = this.recurse(ast.callee, true);\n      return ast.filter ?\n        function(scope, locals, assign, inputs) {\n          var values = [];\n          for (var i = 0; i < args.length; ++i) {\n            values.push(args[i](scope, locals, assign, inputs));\n          }\n          var value = right.apply(undefined, values, inputs);\n          return context ? {context: undefined, name: undefined, value: value} : value;\n        } :\n        function(scope, locals, assign, inputs) {\n          var rhs = right(scope, locals, assign, inputs);\n          var value;\n          if (rhs.value != null) {\n            var values = [];\n            for (var i = 0; i < args.length; ++i) {\n              values.push(args[i](scope, locals, assign, inputs));\n            }\n            value = rhs.value.apply(rhs.context, values);\n          }\n          return context ? {value: value} : value;\n        };\n    case AST.AssignmentExpression:\n      left = this.recurse(ast.left, true, 1);\n      right = this.recurse(ast.right);\n      return function(scope, locals, assign, inputs) {\n        var lhs = left(scope, locals, assign, inputs);\n        var rhs = right(scope, locals, assign, inputs);\n        lhs.context[lhs.name] = rhs;\n        return context ? {value: rhs} : rhs;\n      };\n    case AST.ArrayExpression:\n      args = [];\n      forEach(ast.elements, function(expr) {\n        args.push(self.recurse(expr));\n      });\n      return function(scope, locals, assign, inputs) {\n        var value = [];\n        for (var i = 0; i < args.length; ++i) {\n          value.push(args[i](scope, locals, assign, inputs));\n        }\n        return context ? {value: value} : value;\n      };\n    case AST.ObjectExpression:\n      args = [];\n      forEach(ast.properties, function(property) {\n        if (property.computed) {\n          args.push({key: self.recurse(property.key),\n                     computed: true,\n                     value: self.recurse(property.value)\n          });\n        } else {\n          args.push({key: property.key.type === AST.Identifier ?\n                          property.key.name :\n                          ('' + property.key.value),\n                     computed: false,\n                     value: self.recurse(property.value)\n          });\n        }\n      });\n      return function(scope, locals, assign, inputs) {\n        var value = {};\n        for (var i = 0; i < args.length; ++i) {\n          if (args[i].computed) {\n            value[args[i].key(scope, locals, assign, inputs)] = args[i].value(scope, locals, assign, inputs);\n          } else {\n            value[args[i].key] = args[i].value(scope, locals, assign, inputs);\n          }\n        }\n        return context ? {value: value} : value;\n      };\n    case AST.ThisExpression:\n      return function(scope) {\n        return context ? {value: scope} : scope;\n      };\n    case AST.LocalsExpression:\n      return function(scope, locals) {\n        return context ? {value: locals} : locals;\n      };\n    case AST.NGValueParameter:\n      return function(scope, locals, assign) {\n        return context ? {value: assign} : assign;\n      };\n    }\n  },\n\n  'unary+': function(argument, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = argument(scope, locals, assign, inputs);\n      if (isDefined(arg)) {\n        arg = +arg;\n      } else {\n        arg = 0;\n      }\n      return context ? {value: arg} : arg;\n    };\n  },\n  'unary-': function(argument, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = argument(scope, locals, assign, inputs);\n      if (isDefined(arg)) {\n        arg = -arg;\n      } else {\n        arg = -0;\n      }\n      return context ? {value: arg} : arg;\n    };\n  },\n  'unary!': function(argument, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = !argument(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary+': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var lhs = left(scope, locals, assign, inputs);\n      var rhs = right(scope, locals, assign, inputs);\n      var arg = plusFn(lhs, rhs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary-': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var lhs = left(scope, locals, assign, inputs);\n      var rhs = right(scope, locals, assign, inputs);\n      var arg = (isDefined(lhs) ? lhs : 0) - (isDefined(rhs) ? rhs : 0);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary*': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) * right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary/': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) / right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary%': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) % right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary===': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) === right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary!==': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) !== right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary==': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      // eslint-disable-next-line eqeqeq\n      var arg = left(scope, locals, assign, inputs) == right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary!=': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      // eslint-disable-next-line eqeqeq\n      var arg = left(scope, locals, assign, inputs) != right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary<': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) < right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary>': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) > right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary<=': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) <= right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary>=': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) >= right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary&&': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) && right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'binary||': function(left, right, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = left(scope, locals, assign, inputs) || right(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  'ternary?:': function(test, alternate, consequent, context) {\n    return function(scope, locals, assign, inputs) {\n      var arg = test(scope, locals, assign, inputs) ? alternate(scope, locals, assign, inputs) : consequent(scope, locals, assign, inputs);\n      return context ? {value: arg} : arg;\n    };\n  },\n  value: function(value, context) {\n    return function() { return context ? {context: undefined, name: undefined, value: value} : value; };\n  },\n  identifier: function(name, context, create) {\n    return function(scope, locals, assign, inputs) {\n      var base = locals && (name in locals) ? locals : scope;\n      if (create && create !== 1 && base && base[name] == null) {\n        base[name] = {};\n      }\n      var value = base ? base[name] : undefined;\n      if (context) {\n        return {context: base, name: name, value: value};\n      } else {\n        return value;\n      }\n    };\n  },\n  computedMember: function(left, right, context, create) {\n    return function(scope, locals, assign, inputs) {\n      var lhs = left(scope, locals, assign, inputs);\n      var rhs;\n      var value;\n      if (lhs != null) {\n        rhs = right(scope, locals, assign, inputs);\n        rhs = getStringValue(rhs);\n        if (create && create !== 1) {\n          if (lhs && !(lhs[rhs])) {\n            lhs[rhs] = {};\n          }\n        }\n        value = lhs[rhs];\n      }\n      if (context) {\n        return {context: lhs, name: rhs, value: value};\n      } else {\n        return value;\n      }\n    };\n  },\n  nonComputedMember: function(left, right, context, create) {\n    return function(scope, locals, assign, inputs) {\n      var lhs = left(scope, locals, assign, inputs);\n      if (create && create !== 1) {\n        if (lhs && lhs[right] == null) {\n          lhs[right] = {};\n        }\n      }\n      var value = lhs != null ? lhs[right] : undefined;\n      if (context) {\n        return {context: lhs, name: right, value: value};\n      } else {\n        return value;\n      }\n    };\n  },\n  inputs: function(input, watchId) {\n    return function(scope, value, locals, inputs) {\n      if (inputs) return inputs[watchId];\n      return input(scope, value, locals);\n    };\n  }\n};\n\n/**\n * @constructor\n */\nvar Parser = function Parser(lexer, $filter, options) {\n  this.lexer = lexer;\n  this.$filter = $filter;\n  this.options = options;\n  this.ast = new AST(lexer, options);\n  this.astCompiler = options.csp ? new ASTInterpreter(this.ast, $filter) :\n                                   new ASTCompiler(this.ast, $filter);\n};\n\nParser.prototype = {\n  constructor: Parser,\n\n  parse: function(text) {\n    return this.astCompiler.compile(text);\n  }\n};\n\nfunction getValueOf(value) {\n  return isFunction(value.valueOf) ? value.valueOf() : objectValueOf.call(value);\n}\n\n///////////////////////////////////\n\n/**\n * @ngdoc service\n * @name $parse\n * @kind function\n *\n * @description\n *\n * Converts Angular {@link guide/expression expression} into a function.\n *\n * ```js\n *   var getter = $parse('user.name');\n *   var setter = getter.assign;\n *   var context = {user:{name:'angular'}};\n *   var locals = {user:{name:'local'}};\n *\n *   expect(getter(context)).toEqual('angular');\n *   setter(context, 'newValue');\n *   expect(context.user.name).toEqual('newValue');\n *   expect(getter(context, locals)).toEqual('local');\n * ```\n *\n *\n * @param {string} expression String expression to compile.\n * @returns {function(context, locals)} a function which represents the compiled expression:\n *\n *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n *      are evaluated against (typically a scope object).\n *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n *      `context`.\n *\n *    The returned function also has the following properties:\n *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\n *        literal.\n *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\n *        constant literals.\n *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\n *        set to a function to change its value on the given context.\n *\n */\n\n\n/**\n * @ngdoc provider\n * @name $parseProvider\n * @this\n *\n * @description\n * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n *  service.\n */\nfunction $ParseProvider() {\n  var cache = createMap();\n  var literals = {\n    'true': true,\n    'false': false,\n    'null': null,\n    'undefined': undefined\n  };\n  var identStart, identContinue;\n\n  /**\n   * @ngdoc method\n   * @name $parseProvider#addLiteral\n   * @description\n   *\n   * Configure $parse service to add literal values that will be present as literal at expressions.\n   *\n   * @param {string} literalName Token for the literal value. The literal name value must be a valid literal name.\n   * @param {*} literalValue Value for this literal. All literal values must be primitives or `undefined`.\n   *\n   **/\n  this.addLiteral = function(literalName, literalValue) {\n    literals[literalName] = literalValue;\n  };\n\n /**\n  * @ngdoc method\n  * @name $parseProvider#setIdentifierFns\n  *\n  * @description\n  *\n  * Allows defining the set of characters that are allowed in Angular expressions. The function\n  * `identifierStart` will get called to know if a given character is a valid character to be the\n  * first character for an identifier. The function `identifierContinue` will get called to know if\n  * a given character is a valid character to be a follow-up identifier character. The functions\n  * `identifierStart` and `identifierContinue` will receive as arguments the single character to be\n  * identifier and the character code point. These arguments will be `string` and `numeric`. Keep in\n  * mind that the `string` parameter can be two characters long depending on the character\n  * representation. It is expected for the function to return `true` or `false`, whether that\n  * character is allowed or not.\n  *\n  * Since this function will be called extensively, keep the implementation of these functions fast,\n  * as the performance of these functions have a direct impact on the expressions parsing speed.\n  *\n  * @param {function=} identifierStart The function that will decide whether the given character is\n  *   a valid identifier start character.\n  * @param {function=} identifierContinue The function that will decide whether the given character is\n  *   a valid identifier continue character.\n  */\n  this.setIdentifierFns = function(identifierStart, identifierContinue) {\n    identStart = identifierStart;\n    identContinue = identifierContinue;\n    return this;\n  };\n\n  this.$get = ['$filter', function($filter) {\n    var noUnsafeEval = csp().noUnsafeEval;\n    var $parseOptions = {\n          csp: noUnsafeEval,\n          literals: copy(literals),\n          isIdentifierStart: isFunction(identStart) && identStart,\n          isIdentifierContinue: isFunction(identContinue) && identContinue\n        };\n    return $parse;\n\n    function $parse(exp, interceptorFn) {\n      var parsedExpression, oneTime, cacheKey;\n\n      switch (typeof exp) {\n        case 'string':\n          exp = exp.trim();\n          cacheKey = exp;\n\n          parsedExpression = cache[cacheKey];\n\n          if (!parsedExpression) {\n            if (exp.charAt(0) === ':' && exp.charAt(1) === ':') {\n              oneTime = true;\n              exp = exp.substring(2);\n            }\n            var lexer = new Lexer($parseOptions);\n            var parser = new Parser(lexer, $filter, $parseOptions);\n            parsedExpression = parser.parse(exp);\n            if (parsedExpression.constant) {\n              parsedExpression.$$watchDelegate = constantWatchDelegate;\n            } else if (oneTime) {\n              parsedExpression.$$watchDelegate = parsedExpression.literal ?\n                  oneTimeLiteralWatchDelegate : oneTimeWatchDelegate;\n            } else if (parsedExpression.inputs) {\n              parsedExpression.$$watchDelegate = inputsWatchDelegate;\n            }\n            cache[cacheKey] = parsedExpression;\n          }\n          return addInterceptor(parsedExpression, interceptorFn);\n\n        case 'function':\n          return addInterceptor(exp, interceptorFn);\n\n        default:\n          return addInterceptor(noop, interceptorFn);\n      }\n    }\n\n    function expressionInputDirtyCheck(newValue, oldValueOfValue, compareObjectIdentity) {\n\n      if (newValue == null || oldValueOfValue == null) { // null/undefined\n        return newValue === oldValueOfValue;\n      }\n\n      if (typeof newValue === 'object' && !compareObjectIdentity) {\n\n        // attempt to convert the value to a primitive type\n        // TODO(docs): add a note to docs that by implementing valueOf even objects and arrays can\n        //             be cheaply dirty-checked\n        newValue = getValueOf(newValue);\n\n        if (typeof newValue === 'object') {\n          // objects/arrays are not supported - deep-watching them would be too expensive\n          return false;\n        }\n\n        // fall-through to the primitive equality check\n      }\n\n      //Primitive or NaN\n      // eslint-disable-next-line no-self-compare\n      return newValue === oldValueOfValue || (newValue !== newValue && oldValueOfValue !== oldValueOfValue);\n    }\n\n    function inputsWatchDelegate(scope, listener, objectEquality, parsedExpression, prettyPrintExpression) {\n      var inputExpressions = parsedExpression.inputs;\n      var lastResult;\n\n      if (inputExpressions.length === 1) {\n        var oldInputValueOf = expressionInputDirtyCheck; // init to something unique so that equals check fails\n        inputExpressions = inputExpressions[0];\n        return scope.$watch(function expressionInputWatch(scope) {\n          var newInputValue = inputExpressions(scope);\n          if (!expressionInputDirtyCheck(newInputValue, oldInputValueOf, parsedExpression.literal)) {\n            lastResult = parsedExpression(scope, undefined, undefined, [newInputValue]);\n            oldInputValueOf = newInputValue && getValueOf(newInputValue);\n          }\n          return lastResult;\n        }, listener, objectEquality, prettyPrintExpression);\n      }\n\n      var oldInputValueOfValues = [];\n      var oldInputValues = [];\n      for (var i = 0, ii = inputExpressions.length; i < ii; i++) {\n        oldInputValueOfValues[i] = expressionInputDirtyCheck; // init to something unique so that equals check fails\n        oldInputValues[i] = null;\n      }\n\n      return scope.$watch(function expressionInputsWatch(scope) {\n        var changed = false;\n\n        for (var i = 0, ii = inputExpressions.length; i < ii; i++) {\n          var newInputValue = inputExpressions[i](scope);\n          if (changed || (changed = !expressionInputDirtyCheck(newInputValue, oldInputValueOfValues[i], parsedExpression.literal))) {\n            oldInputValues[i] = newInputValue;\n            oldInputValueOfValues[i] = newInputValue && getValueOf(newInputValue);\n          }\n        }\n\n        if (changed) {\n          lastResult = parsedExpression(scope, undefined, undefined, oldInputValues);\n        }\n\n        return lastResult;\n      }, listener, objectEquality, prettyPrintExpression);\n    }\n\n    function oneTimeWatchDelegate(scope, listener, objectEquality, parsedExpression, prettyPrintExpression) {\n      var unwatch, lastValue;\n      if (parsedExpression.inputs) {\n        unwatch = inputsWatchDelegate(scope, oneTimeListener, objectEquality, parsedExpression, prettyPrintExpression);\n      } else {\n        unwatch = scope.$watch(oneTimeWatch, oneTimeListener, objectEquality);\n      }\n      return unwatch;\n\n      function oneTimeWatch(scope) {\n        return parsedExpression(scope);\n      }\n      function oneTimeListener(value, old, scope) {\n        lastValue = value;\n        if (isFunction(listener)) {\n          listener(value, old, scope);\n        }\n        if (isDefined(value)) {\n          scope.$$postDigest(function() {\n            if (isDefined(lastValue)) {\n              unwatch();\n            }\n          });\n        }\n      }\n    }\n\n    function oneTimeLiteralWatchDelegate(scope, listener, objectEquality, parsedExpression) {\n      var unwatch, lastValue;\n      unwatch = scope.$watch(function oneTimeWatch(scope) {\n        return parsedExpression(scope);\n      }, function oneTimeListener(value, old, scope) {\n        lastValue = value;\n        if (isFunction(listener)) {\n          listener(value, old, scope);\n        }\n        if (isAllDefined(value)) {\n          scope.$$postDigest(function() {\n            if (isAllDefined(lastValue)) unwatch();\n          });\n        }\n      }, objectEquality);\n\n      return unwatch;\n\n      function isAllDefined(value) {\n        var allDefined = true;\n        forEach(value, function(val) {\n          if (!isDefined(val)) allDefined = false;\n        });\n        return allDefined;\n      }\n    }\n\n    function constantWatchDelegate(scope, listener, objectEquality, parsedExpression) {\n      var unwatch = scope.$watch(function constantWatch(scope) {\n        unwatch();\n        return parsedExpression(scope);\n      }, listener, objectEquality);\n      return unwatch;\n    }\n\n    function addInterceptor(parsedExpression, interceptorFn) {\n      if (!interceptorFn) return parsedExpression;\n      var watchDelegate = parsedExpression.$$watchDelegate;\n      var useInputs = false;\n\n      var regularWatch =\n          watchDelegate !== oneTimeLiteralWatchDelegate &&\n          watchDelegate !== oneTimeWatchDelegate;\n\n      var fn = regularWatch ? function regularInterceptedExpression(scope, locals, assign, inputs) {\n        var value = useInputs && inputs ? inputs[0] : parsedExpression(scope, locals, assign, inputs);\n        return interceptorFn(value, scope, locals);\n      } : function oneTimeInterceptedExpression(scope, locals, assign, inputs) {\n        var value = parsedExpression(scope, locals, assign, inputs);\n        var result = interceptorFn(value, scope, locals);\n        // we only return the interceptor's result if the\n        // initial value is defined (for bind-once)\n        return isDefined(value) ? result : value;\n      };\n\n      // Propagate $$watchDelegates other then inputsWatchDelegate\n      useInputs = !parsedExpression.inputs;\n      if (parsedExpression.$$watchDelegate &&\n          parsedExpression.$$watchDelegate !== inputsWatchDelegate) {\n        fn.$$watchDelegate = parsedExpression.$$watchDelegate;\n        fn.inputs = parsedExpression.inputs;\n      } else if (!interceptorFn.$stateful) {\n        // If there is an interceptor, but no watchDelegate then treat the interceptor like\n        // we treat filters - it is assumed to be a pure function unless flagged with $stateful\n        fn.$$watchDelegate = inputsWatchDelegate;\n        fn.inputs = parsedExpression.inputs ? parsedExpression.inputs : [parsedExpression];\n      }\n\n      return fn;\n    }\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $q\n * @requires $rootScope\n *\n * @description\n * A service that helps you run functions asynchronously, and use their return values (or exceptions)\n * when they are done processing.\n *\n * This is a [Promises/A+](https://promisesaplus.com/)-compliant implementation of promises/deferred\n * objects inspired by [Kris Kowal's Q](https://github.com/kriskowal/q).\n *\n * $q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred\n * implementations, and the other which resembles ES6 (ES2015) promises to some degree.\n *\n * # $q constructor\n *\n * The streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`\n * function as the first argument. This is similar to the native Promise implementation from ES6,\n * see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n *\n * While the constructor-style use is supported, not all of the supporting methods from ES6 promises are\n * available yet.\n *\n * It can be used like so:\n *\n * ```js\n *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n *   // are available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     // perform some asynchronous operation, resolve or reject the promise when appropriate.\n *     return $q(function(resolve, reject) {\n *       setTimeout(function() {\n *         if (okToGreet(name)) {\n *           resolve('Hello, ' + name + '!');\n *         } else {\n *           reject('Greeting ' + name + ' is not allowed.');\n *         }\n *       }, 1000);\n *     });\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   });\n * ```\n *\n * Note: progress/notify callbacks are not currently supported via the ES6-style interface.\n *\n * Note: unlike ES6 behavior, an exception thrown in the constructor function will NOT implicitly reject the promise.\n *\n * However, the more traditional CommonJS-style usage is still available, and documented below.\n *\n * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\n * interface for interacting with an object that represents the result of an action that is\n * performed asynchronously, and may or may not be finished at any given point in time.\n *\n * From the perspective of dealing with error handling, deferred and promise APIs are to\n * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n *\n * ```js\n *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n *   // are available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     var deferred = $q.defer();\n *\n *     setTimeout(function() {\n *       deferred.notify('About to greet ' + name + '.');\n *\n *       if (okToGreet(name)) {\n *         deferred.resolve('Hello, ' + name + '!');\n *       } else {\n *         deferred.reject('Greeting ' + name + ' is not allowed.');\n *       }\n *     }, 1000);\n *\n *     return deferred.promise;\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   }, function(update) {\n *     alert('Got notification: ' + update);\n *   });\n * ```\n *\n * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\n * comes in the way of guarantees that promise and deferred APIs make, see\n * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n *\n * Additionally the promise api allows for composition that is very hard to do with the\n * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\n * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\n * section on serial or parallel joining of promises.\n *\n * # The Deferred API\n *\n * A new instance of deferred is constructed by calling `$q.defer()`.\n *\n * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\n * that can be used for signaling the successful or unsuccessful completion, as well as the status\n * of the task.\n *\n * **Methods**\n *\n * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n *   constructed via `$q.reject`, the promise will be rejected instead.\n * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n *   resolving it with a rejection constructed via `$q.reject`.\n * - `notify(value)` - provides updates on the status of the promise's execution. This may be called\n *   multiple times before the promise is either resolved or rejected.\n *\n * **Properties**\n *\n * - promise – `{Promise}` – promise object associated with this deferred.\n *\n *\n * # The Promise API\n *\n * A new promise instance is created when a deferred instance is created and can be retrieved by\n * calling `deferred.promise`.\n *\n * The purpose of the promise object is to allow for interested parties to get access to the result\n * of the deferred task when it completes.\n *\n * **Methods**\n *\n * - `then(successCallback, [errorCallback], [notifyCallback])` – regardless of when the promise was or\n *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n *   as soon as the result is available. The callbacks are called with a single argument: the result\n *   or rejection reason. Additionally, the notify callback may be called zero or more times to\n *   provide a progress indication, before the promise is resolved or rejected.\n *\n *   This method *returns a new promise* which is resolved or rejected via the return value of the\n *   `successCallback`, `errorCallback` (unless that value is a promise, in which case it is resolved\n *   with the value which is resolved in that promise using\n *   [promise chaining](http://www.html5rocks.com/en/tutorials/es6/promises/#toc-promises-queues)).\n *   It also notifies via the return value of the `notifyCallback` method. The promise cannot be\n *   resolved or rejected from the notifyCallback method. The errorCallback and notifyCallback\n *   arguments are optional.\n *\n * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n *\n * - `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,\n *   but to do so without modifying the final value. This is useful to release resources or do some\n *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n *   more information.\n *\n * # Chaining promises\n *\n * Because calling the `then` method of a promise returns a new derived promise, it is easily\n * possible to create a chain of promises:\n *\n * ```js\n *   promiseB = promiseA.then(function(result) {\n *     return result + 1;\n *   });\n *\n *   // promiseB will be resolved immediately after promiseA is resolved and its value\n *   // will be the result of promiseA incremented by 1\n * ```\n *\n * It is possible to create chains of any length and since a promise can be resolved with another\n * promise (which will defer its resolution further), it is possible to pause/defer resolution of\n * the promises at any point in the chain. This makes it possible to implement powerful APIs like\n * $http's response interceptors.\n *\n *\n * # Differences between Kris Kowal's Q and $q\n *\n *  There are two main differences:\n *\n * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n *   mechanism in angular, which means faster propagation of resolution or rejection into your\n *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\n * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n *   all the important functionality needed for common async tasks.\n *\n * # Testing\n *\n *  ```js\n *    it('should simulate promise', inject(function($q, $rootScope) {\n *      var deferred = $q.defer();\n *      var promise = deferred.promise;\n *      var resolvedValue;\n *\n *      promise.then(function(value) { resolvedValue = value; });\n *      expect(resolvedValue).toBeUndefined();\n *\n *      // Simulate resolving of promise\n *      deferred.resolve(123);\n *      // Note that the 'then' function does not get called synchronously.\n *      // This is because we want the promise API to always be async, whether or not\n *      // it got called synchronously or asynchronously.\n *      expect(resolvedValue).toBeUndefined();\n *\n *      // Propagate promise resolution to 'then' functions using $apply().\n *      $rootScope.$apply();\n *      expect(resolvedValue).toEqual(123);\n *    }));\n *  ```\n *\n * @param {function(function, function)} resolver Function which is responsible for resolving or\n *   rejecting the newly created promise. The first parameter is a function which resolves the\n *   promise, the second parameter is a function which rejects the promise.\n *\n * @returns {Promise} The newly created promise.\n */\n/**\n * @ngdoc provider\n * @name $qProvider\n * @this\n *\n * @description\n */\nfunction $QProvider() {\n  var errorOnUnhandledRejections = true;\n  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $rootScope.$evalAsync(callback);\n    }, $exceptionHandler, errorOnUnhandledRejections);\n  }];\n\n  /**\n   * @ngdoc method\n   * @name $qProvider#errorOnUnhandledRejections\n   * @kind function\n   *\n   * @description\n   * Retrieves or overrides whether to generate an error when a rejected promise is not handled.\n   * This feature is enabled by default.\n   *\n   * @param {boolean=} value Whether to generate an error when a rejected promise is not handled.\n   * @returns {boolean|ng.$qProvider} Current value when called without a new value or self for\n   *    chaining otherwise.\n   */\n  this.errorOnUnhandledRejections = function(value) {\n    if (isDefined(value)) {\n      errorOnUnhandledRejections = value;\n      return this;\n    } else {\n      return errorOnUnhandledRejections;\n    }\n  };\n}\n\n/** @this */\nfunction $$QProvider() {\n  var errorOnUnhandledRejections = true;\n  this.$get = ['$browser', '$exceptionHandler', function($browser, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $browser.defer(callback);\n    }, $exceptionHandler, errorOnUnhandledRejections);\n  }];\n\n  this.errorOnUnhandledRejections = function(value) {\n    if (isDefined(value)) {\n      errorOnUnhandledRejections = value;\n      return this;\n    } else {\n      return errorOnUnhandledRejections;\n    }\n  };\n}\n\n/**\n * Constructs a promise manager.\n *\n * @param {function(function)} nextTick Function for executing functions in the next turn.\n * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\n *     debugging purposes.\n @ param {=boolean} errorOnUnhandledRejections Whether an error should be generated on unhandled\n *     promises rejections.\n * @returns {object} Promise manager.\n */\nfunction qFactory(nextTick, exceptionHandler, errorOnUnhandledRejections) {\n  var $qMinErr = minErr('$q', TypeError);\n  var queueSize = 0;\n  var checkQueue = [];\n\n  /**\n   * @ngdoc method\n   * @name ng.$q#defer\n   * @kind function\n   *\n   * @description\n   * Creates a `Deferred` object which represents a task which will finish in the future.\n   *\n   * @returns {Deferred} Returns a new instance of deferred.\n   */\n  function defer() {\n    return new Deferred();\n  }\n\n  function Deferred() {\n    var promise = this.promise = new Promise();\n    //Non prototype methods necessary to support unbound execution :/\n    this.resolve = function(val) { resolvePromise(promise, val); };\n    this.reject = function(reason) { rejectPromise(promise, reason); };\n    this.notify = function(progress) { notifyPromise(promise, progress); };\n  }\n\n\n  function Promise() {\n    this.$$state = { status: 0 };\n  }\n\n  extend(Promise.prototype, {\n    then: function(onFulfilled, onRejected, progressBack) {\n      if (isUndefined(onFulfilled) && isUndefined(onRejected) && isUndefined(progressBack)) {\n        return this;\n      }\n      var result = new Promise();\n\n      this.$$state.pending = this.$$state.pending || [];\n      this.$$state.pending.push([result, onFulfilled, onRejected, progressBack]);\n      if (this.$$state.status > 0) scheduleProcessQueue(this.$$state);\n\n      return result;\n    },\n\n    'catch': function(callback) {\n      return this.then(null, callback);\n    },\n\n    'finally': function(callback, progressBack) {\n      return this.then(function(value) {\n        return handleCallback(value, resolve, callback);\n      }, function(error) {\n        return handleCallback(error, reject, callback);\n      }, progressBack);\n    }\n  });\n\n  function processQueue(state) {\n    var fn, promise, pending;\n\n    pending = state.pending;\n    state.processScheduled = false;\n    state.pending = undefined;\n    try {\n      for (var i = 0, ii = pending.length; i < ii; ++i) {\n        state.pur = true;\n        promise = pending[i][0];\n        fn = pending[i][state.status];\n        try {\n          if (isFunction(fn)) {\n            resolvePromise(promise, fn(state.value));\n          } else if (state.status === 1) {\n            resolvePromise(promise, state.value);\n          } else {\n            rejectPromise(promise, state.value);\n          }\n        } catch (e) {\n          rejectPromise(promise, e);\n        }\n      }\n    } finally {\n      --queueSize;\n      if (errorOnUnhandledRejections && queueSize === 0) {\n        nextTick(processChecks);\n      }\n    }\n  }\n\n  function processChecks() {\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (!queueSize && checkQueue.length) {\n      var toCheck = checkQueue.shift();\n      if (!toCheck.pur) {\n        toCheck.pur = true;\n        var errorMessage = 'Possibly unhandled rejection: ' + toDebugString(toCheck.value);\n        if (toCheck.value instanceof Error) {\n          exceptionHandler(toCheck.value, errorMessage);\n        } else {\n          exceptionHandler(errorMessage);\n        }\n      }\n    }\n  }\n\n  function scheduleProcessQueue(state) {\n    if (errorOnUnhandledRejections && !state.pending && state.status === 2 && !state.pur) {\n      if (queueSize === 0 && checkQueue.length === 0) {\n        nextTick(processChecks);\n      }\n      checkQueue.push(state);\n    }\n    if (state.processScheduled || !state.pending) return;\n    state.processScheduled = true;\n    ++queueSize;\n    nextTick(function() { processQueue(state); });\n  }\n\n  function resolvePromise(promise, val) {\n    if (promise.$$state.status) return;\n    if (val === promise) {\n      $$reject(promise, $qMinErr(\n        'qcycle',\n        'Expected promise to be resolved with value other than itself \\'{0}\\'',\n        val));\n    } else {\n      $$resolve(promise, val);\n    }\n\n  }\n\n  function $$resolve(promise, val) {\n    var then;\n    var done = false;\n    try {\n      if (isObject(val) || isFunction(val)) then = val.then;\n      if (isFunction(then)) {\n        promise.$$state.status = -1;\n        then.call(val, doResolve, doReject, doNotify);\n      } else {\n        promise.$$state.value = val;\n        promise.$$state.status = 1;\n        scheduleProcessQueue(promise.$$state);\n      }\n    } catch (e) {\n      doReject(e);\n    }\n\n    function doResolve(val) {\n      if (done) return;\n      done = true;\n      $$resolve(promise, val);\n    }\n    function doReject(val) {\n      if (done) return;\n      done = true;\n      $$reject(promise, val);\n    }\n    function doNotify(progress) {\n      notifyPromise(promise, progress);\n    }\n  }\n\n  function rejectPromise(promise, reason) {\n    if (promise.$$state.status) return;\n    $$reject(promise, reason);\n  }\n\n  function $$reject(promise, reason) {\n    promise.$$state.value = reason;\n    promise.$$state.status = 2;\n    scheduleProcessQueue(promise.$$state);\n  }\n\n  function notifyPromise(promise, progress) {\n    var callbacks = promise.$$state.pending;\n\n    if ((promise.$$state.status <= 0) && callbacks && callbacks.length) {\n      nextTick(function() {\n        var callback, result;\n        for (var i = 0, ii = callbacks.length; i < ii; i++) {\n          result = callbacks[i][0];\n          callback = callbacks[i][3];\n          try {\n            notifyPromise(result, isFunction(callback) ? callback(progress) : progress);\n          } catch (e) {\n            exceptionHandler(e);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name $q#reject\n   * @kind function\n   *\n   * @description\n   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\n   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\n   * a promise chain, you don't need to worry about it.\n   *\n   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n   * `reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\n   * a promise error callback and you want to forward the error to the promise derived from the\n   * current promise, you have to \"rethrow\" the error by returning a rejection constructed via\n   * `reject`.\n   *\n   * ```js\n   *   promiseB = promiseA.then(function(result) {\n   *     // success: do something and resolve promiseB\n   *     //          with the old or a new result\n   *     return result;\n   *   }, function(reason) {\n   *     // error: handle the error if possible and\n   *     //        resolve promiseB with newPromiseOrValue,\n   *     //        otherwise forward the rejection to promiseB\n   *     if (canHandle(reason)) {\n   *      // handle the error and recover\n   *      return newPromiseOrValue;\n   *     }\n   *     return $q.reject(reason);\n   *   });\n   * ```\n   *\n   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\n   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\n   */\n  function reject(reason) {\n    var result = new Promise();\n    rejectPromise(result, reason);\n    return result;\n  }\n\n  function handleCallback(value, resolver, callback) {\n    var callbackOutput = null;\n    try {\n      if (isFunction(callback)) callbackOutput = callback();\n    } catch (e) {\n      return reject(e);\n    }\n    if (isPromiseLike(callbackOutput)) {\n      return callbackOutput.then(function() {\n        return resolver(value);\n      }, reject);\n    } else {\n      return resolver(value);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name $q#when\n   * @kind function\n   *\n   * @description\n   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\n   * This is useful when you are dealing with an object that might or might not be a promise, or if\n   * the promise comes from a source that can't be trusted.\n   *\n   * @param {*} value Value or a promise\n   * @param {Function=} successCallback\n   * @param {Function=} errorCallback\n   * @param {Function=} progressCallback\n   * @returns {Promise} Returns a promise of the passed value or promise\n   */\n\n\n  function when(value, callback, errback, progressBack) {\n    var result = new Promise();\n    resolvePromise(result, value);\n    return result.then(callback, errback, progressBack);\n  }\n\n  /**\n   * @ngdoc method\n   * @name $q#resolve\n   * @kind function\n   *\n   * @description\n   * Alias of {@link ng.$q#when when} to maintain naming consistency with ES6.\n   *\n   * @param {*} value Value or a promise\n   * @param {Function=} successCallback\n   * @param {Function=} errorCallback\n   * @param {Function=} progressCallback\n   * @returns {Promise} Returns a promise of the passed value or promise\n   */\n  var resolve = when;\n\n  /**\n   * @ngdoc method\n   * @name $q#all\n   * @kind function\n   *\n   * @description\n   * Combines multiple promises into a single promise that is resolved when all of the input\n   * promises are resolved.\n   *\n   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.\n   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,\n   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.\n   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected\n   *   with the same rejection value.\n   */\n\n  function all(promises) {\n    var result = new Promise(),\n        counter = 0,\n        results = isArray(promises) ? [] : {};\n\n    forEach(promises, function(promise, key) {\n      counter++;\n      when(promise).then(function(value) {\n        results[key] = value;\n        if (!(--counter)) resolvePromise(result, results);\n      }, function(reason) {\n        rejectPromise(result, reason);\n      });\n    });\n\n    if (counter === 0) {\n      resolvePromise(result, results);\n    }\n\n    return result;\n  }\n\n  /**\n   * @ngdoc method\n   * @name $q#race\n   * @kind function\n   *\n   * @description\n   * Returns a promise that resolves or rejects as soon as one of those promises\n   * resolves or rejects, with the value or reason from that promise.\n   *\n   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.\n   * @returns {Promise} a promise that resolves or rejects as soon as one of the `promises`\n   * resolves or rejects, with the value or reason from that promise.\n   */\n\n  function race(promises) {\n    var deferred = defer();\n\n    forEach(promises, function(promise) {\n      when(promise).then(deferred.resolve, deferred.reject);\n    });\n\n    return deferred.promise;\n  }\n\n  function $Q(resolver) {\n    if (!isFunction(resolver)) {\n      throw $qMinErr('norslvr', 'Expected resolverFn, got \\'{0}\\'', resolver);\n    }\n\n    var promise = new Promise();\n\n    function resolveFn(value) {\n      resolvePromise(promise, value);\n    }\n\n    function rejectFn(reason) {\n      rejectPromise(promise, reason);\n    }\n\n    resolver(resolveFn, rejectFn);\n\n    return promise;\n  }\n\n  // Let's make the instanceof operator work for promises, so that\n  // `new $q(fn) instanceof $q` would evaluate to true.\n  $Q.prototype = Promise.prototype;\n\n  $Q.defer = defer;\n  $Q.reject = reject;\n  $Q.when = when;\n  $Q.resolve = resolve;\n  $Q.all = all;\n  $Q.race = race;\n\n  return $Q;\n}\n\n/** @this */\nfunction $$RAFProvider() { //rAF\n  this.$get = ['$window', '$timeout', function($window, $timeout) {\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported\n      ? function(fn) {\n          var id = requestAnimationFrame(fn);\n          return function() {\n            cancelAnimationFrame(id);\n          };\n        }\n      : function(fn) {\n          var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n          return function() {\n            $timeout.cancel(timer);\n          };\n        };\n\n    raf.supported = rafSupported;\n\n    return raf;\n  }];\n}\n\n/**\n * DESIGN NOTES\n *\n * The design decisions behind the scope are heavily favored for speed and memory consumption.\n *\n * The typical use of scope is to watch the expressions, which most of the time return the same\n * value as last time so we optimize the operation.\n *\n * Closures construction is expensive in terms of speed as well as memory:\n *   - No closures, instead use prototypical inheritance for API\n *   - Internal state needs to be stored on scope directly, which means that private state is\n *     exposed as $$____ properties\n *\n * Loop operations are optimized by using while(count--) { ... }\n *   - This means that in order to keep the same order of execution as addition we have to add\n *     items to the array at the beginning (unshift) instead of at the end (push)\n *\n * Child scopes are created and removed often\n *   - Using an array would be slow since inserts in the middle are expensive; so we use linked lists\n *\n * There are fewer watches than observers. This is why you don't want the observer to be implemented\n * in the same way as watch. Watch requires return of the initialization function which is expensive\n * to construct.\n */\n\n\n/**\n * @ngdoc provider\n * @name $rootScopeProvider\n * @description\n *\n * Provider for the $rootScope service.\n */\n\n/**\n * @ngdoc method\n * @name $rootScopeProvider#digestTtl\n * @description\n *\n * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and\n * assuming that the model is unstable.\n *\n * The current default is 10 iterations.\n *\n * In complex applications it's possible that the dependencies between `$watch`s will result in\n * several digest iterations. However if an application needs more than the default 10 digest\n * iterations for its model to stabilize then you should investigate what is causing the model to\n * continuously change during the digest.\n *\n * Increasing the TTL could have performance implications, so you should not change it without\n * proper justification.\n *\n * @param {number} limit The number of digest iterations.\n */\n\n\n/**\n * @ngdoc service\n * @name $rootScope\n * @this\n *\n * @description\n *\n * Every application has a single root {@link ng.$rootScope.Scope scope}.\n * All other scopes are descendant scopes of the root scope. Scopes provide separation\n * between the model and the view, via a mechanism for watching the model for changes.\n * They also provide event emission/broadcast and subscription facility. See the\n * {@link guide/scope developer guide on scopes}.\n */\nfunction $RootScopeProvider() {\n  var TTL = 10;\n  var $rootScopeMinErr = minErr('$rootScope');\n  var lastDirtyWatch = null;\n  var applyAsyncId = null;\n\n  this.digestTtl = function(value) {\n    if (arguments.length) {\n      TTL = value;\n    }\n    return TTL;\n  };\n\n  function createChildScopeClass(parent) {\n    function ChildScope() {\n      this.$$watchers = this.$$nextSibling =\n          this.$$childHead = this.$$childTail = null;\n      this.$$listeners = {};\n      this.$$listenerCount = {};\n      this.$$watchersCount = 0;\n      this.$id = nextUid();\n      this.$$ChildScope = null;\n    }\n    ChildScope.prototype = parent;\n    return ChildScope;\n  }\n\n  this.$get = ['$exceptionHandler', '$parse', '$browser',\n      function($exceptionHandler, $parse, $browser) {\n\n    function destroyChildScope($event) {\n        $event.currentScope.$$destroyed = true;\n    }\n\n    function cleanUpScope($scope) {\n\n      // Support: IE 9 only\n      if (msie === 9) {\n        // There is a memory leak in IE9 if all child scopes are not disconnected\n        // completely when a scope is destroyed. So this code will recurse up through\n        // all this scopes children\n        //\n        // See issue https://github.com/angular/angular.js/issues/10706\n        if ($scope.$$childHead) {\n          cleanUpScope($scope.$$childHead);\n        }\n        if ($scope.$$nextSibling) {\n          cleanUpScope($scope.$$nextSibling);\n        }\n      }\n\n      // The code below works around IE9 and V8's memory leaks\n      //\n      // See:\n      // - https://code.google.com/p/v8/issues/detail?id=2073#c26\n      // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909\n      // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\n\n      $scope.$parent = $scope.$$nextSibling = $scope.$$prevSibling = $scope.$$childHead =\n          $scope.$$childTail = $scope.$root = $scope.$$watchers = null;\n    }\n\n    /**\n     * @ngdoc type\n     * @name $rootScope.Scope\n     *\n     * @description\n     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n     * {@link auto.$injector $injector}. Child scopes are created using the\n     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\n     * compiled HTML template is executed.) See also the {@link guide/scope Scopes guide} for\n     * an in-depth introduction and usage examples.\n     *\n     *\n     * # Inheritance\n     * A scope can inherit from a parent scope, as in this example:\n     * ```js\n         var parent = $rootScope;\n         var child = parent.$new();\n\n         parent.salutation = \"Hello\";\n         expect(child.salutation).toEqual('Hello');\n\n         child.salutation = \"Welcome\";\n         expect(child.salutation).toEqual('Welcome');\n         expect(parent.salutation).toEqual('Hello');\n     * ```\n     *\n     * When interacting with `Scope` in tests, additional helper methods are available on the\n     * instances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional\n     * details.\n     *\n     *\n     * @param {Object.<string, function()>=} providers Map of service factory which need to be\n     *                                       provided for the current scope. Defaults to {@link ng}.\n     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\n     *                              append/override services provided by `providers`. This is handy\n     *                              when unit-testing and having the need to override a default\n     *                              service.\n     * @returns {Object} Newly created scope.\n     *\n     */\n    function Scope() {\n      this.$id = nextUid();\n      this.$$phase = this.$parent = this.$$watchers =\n                     this.$$nextSibling = this.$$prevSibling =\n                     this.$$childHead = this.$$childTail = null;\n      this.$root = this;\n      this.$$destroyed = false;\n      this.$$listeners = {};\n      this.$$listenerCount = {};\n      this.$$watchersCount = 0;\n      this.$$isolateBindings = null;\n    }\n\n    /**\n     * @ngdoc property\n     * @name $rootScope.Scope#$id\n     *\n     * @description\n     * Unique scope ID (monotonically increasing) useful for debugging.\n     */\n\n     /**\n      * @ngdoc property\n      * @name $rootScope.Scope#$parent\n      *\n      * @description\n      * Reference to the parent scope.\n      */\n\n      /**\n       * @ngdoc property\n       * @name $rootScope.Scope#$root\n       *\n       * @description\n       * Reference to the root scope.\n       */\n\n    Scope.prototype = {\n      constructor: Scope,\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$new\n       * @kind function\n       *\n       * @description\n       * Creates a new child {@link ng.$rootScope.Scope scope}.\n       *\n       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\n       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n       *\n       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\n       * desired for the scope and its child scopes to be permanently detached from the parent and\n       * thus stop participating in model change detection and listener notification by invoking.\n       *\n       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the\n       *         parent scope. The scope is isolated, as it can not see parent scope properties.\n       *         When creating widgets, it is useful for the widget to not accidentally read parent\n       *         state.\n       *\n       * @param {Scope} [parent=this] The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`\n       *                              of the newly created scope. Defaults to `this` scope if not provided.\n       *                              This is used when creating a transclude scope to correctly place it\n       *                              in the scope hierarchy while maintaining the correct prototypical\n       *                              inheritance.\n       *\n       * @returns {Object} The newly created child scope.\n       *\n       */\n      $new: function(isolate, parent) {\n        var child;\n\n        parent = parent || this;\n\n        if (isolate) {\n          child = new Scope();\n          child.$root = this.$root;\n        } else {\n          // Only create a child scope class if somebody asks for one,\n          // but cache it to allow the VM to optimize lookups.\n          if (!this.$$ChildScope) {\n            this.$$ChildScope = createChildScopeClass(this);\n          }\n          child = new this.$$ChildScope();\n        }\n        child.$parent = parent;\n        child.$$prevSibling = parent.$$childTail;\n        if (parent.$$childHead) {\n          parent.$$childTail.$$nextSibling = child;\n          parent.$$childTail = child;\n        } else {\n          parent.$$childHead = parent.$$childTail = child;\n        }\n\n        // When the new scope is not isolated or we inherit from `this`, and\n        // the parent scope is destroyed, the property `$$destroyed` is inherited\n        // prototypically. In all other cases, this property needs to be set\n        // when the parent scope is destroyed.\n        // The listener needs to be added after the parent is set\n        if (isolate || parent !== this) child.$on('$destroy', destroyChildScope);\n\n        return child;\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watch\n       * @kind function\n       *\n       * @description\n       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n       *\n       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n       *   $digest()} and should return the value that will be watched. (`watchExpression` should not change\n       *   its value when executed multiple times with the same input because it may be executed multiple\n       *   times by {@link ng.$rootScope.Scope#$digest $digest()}. That is, `watchExpression` should be\n       *   [idempotent](http://en.wikipedia.org/wiki/Idempotence).)\n       * - The `listener` is called only when the value from the current `watchExpression` and the\n       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\n       *   see below). Inequality is determined according to reference inequality,\n       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n       *    via the `!==` Javascript operator, unless `objectEquality == true`\n       *   (see next point)\n       * - When `objectEquality == true`, inequality of the `watchExpression` is determined\n       *   according to the {@link angular.equals} function. To save the value of the object for\n       *   later comparison, the {@link angular.copy} function is used. This therefore means that\n       *   watching complex objects will have adverse memory and performance implications.\n       * - This should not be used to watch for changes in objects that are\n       *   or contain [File](https://developer.mozilla.org/docs/Web/API/File) objects due to limitations with {@link angular.copy `angular.copy`}.\n       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.\n       *   This is achieved by rerunning the watchers until no changes are detected. The rerun\n       *   iteration limit is 10 to prevent an infinite loop deadlock.\n       *\n       *\n       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\n       * you can register a `watchExpression` function with no `listener`. (Be prepared for\n       * multiple calls to your `watchExpression` because it will execute multiple times in a\n       * single {@link ng.$rootScope.Scope#$digest $digest} cycle if a change is detected.)\n       *\n       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\n       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\n       * watcher. In rare cases, this is undesirable because the listener is called when the result\n       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\n       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\n       * listener was called due to initialization.\n       *\n       *\n       *\n       * # Example\n       * ```js\n           // let's assume that scope was dependency injected as the $rootScope\n           var scope = $rootScope;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // the listener is always called during the first $digest loop after it was registered\n           expect(scope.counter).toEqual(1);\n\n           scope.$digest();\n           // but now it will not be called unless the value changes\n           expect(scope.counter).toEqual(1);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(2);\n\n\n\n           // Using a function as a watchExpression\n           var food;\n           scope.foodCounter = 0;\n           expect(scope.foodCounter).toEqual(0);\n           scope.$watch(\n             // This function returns the value being watched. It is called for each turn of the $digest loop\n             function() { return food; },\n             // This is the change listener, called when the value returned from the above function changes\n             function(newValue, oldValue) {\n               if ( newValue !== oldValue ) {\n                 // Only increment the counter if the value changed\n                 scope.foodCounter = scope.foodCounter + 1;\n               }\n             }\n           );\n           // No digest has been run so the counter will be zero\n           expect(scope.foodCounter).toEqual(0);\n\n           // Run the digest but since food has not changed count will still be zero\n           scope.$digest();\n           expect(scope.foodCounter).toEqual(0);\n\n           // Update food and run digest.  Now the counter will increment\n           food = 'cheeseburger';\n           scope.$digest();\n           expect(scope.foodCounter).toEqual(1);\n\n       * ```\n       *\n       *\n       *\n       * @param {(function()|string)} watchExpression Expression that is evaluated on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers\n       *    a call to the `listener`.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(scope)`: called with current `scope` as a parameter.\n       * @param {function(newVal, oldVal, scope)} listener Callback called whenever the value\n       *    of `watchExpression` changes.\n       *\n       *    - `newVal` contains the current value of the `watchExpression`\n       *    - `oldVal` contains the previous value of the `watchExpression`\n       *    - `scope` refers to the current scope\n       * @param {boolean=} [objectEquality=false] Compare for object equality using {@link angular.equals} instead of\n       *     comparing for reference equality.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $watch: function(watchExp, listener, objectEquality, prettyPrintExpression) {\n        var get = $parse(watchExp);\n\n        if (get.$$watchDelegate) {\n          return get.$$watchDelegate(this, listener, objectEquality, get, watchExp);\n        }\n        var scope = this,\n            array = scope.$$watchers,\n            watcher = {\n              fn: listener,\n              last: initWatchVal,\n              get: get,\n              exp: prettyPrintExpression || watchExp,\n              eq: !!objectEquality\n            };\n\n        lastDirtyWatch = null;\n\n        if (!isFunction(listener)) {\n          watcher.fn = noop;\n        }\n\n        if (!array) {\n          array = scope.$$watchers = [];\n          array.$$digestWatchIndex = -1;\n        }\n        // we use unshift since we use a while loop in $digest for speed.\n        // the while loop reads in reverse order.\n        array.unshift(watcher);\n        array.$$digestWatchIndex++;\n        incrementWatchersCount(this, 1);\n\n        return function deregisterWatch() {\n          var index = arrayRemove(array, watcher);\n          if (index >= 0) {\n            incrementWatchersCount(scope, -1);\n            if (index < array.$$digestWatchIndex) {\n              array.$$digestWatchIndex--;\n            }\n          }\n          lastDirtyWatch = null;\n        };\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watchGroup\n       * @kind function\n       *\n       * @description\n       * A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.\n       * If any one expression in the collection changes the `listener` is executed.\n       *\n       * - The items in the `watchExpressions` array are observed via the standard `$watch` operation. Their return\n       *   values are examined for changes on every call to `$digest`.\n       * - The `listener` is called whenever any expression in the `watchExpressions` array changes.\n       *\n       * @param {Array.<string|Function(scope)>} watchExpressions Array of expressions that will be individually\n       * watched using {@link ng.$rootScope.Scope#$watch $watch()}\n       *\n       * @param {function(newValues, oldValues, scope)} listener Callback called whenever the return value of any\n       *    expression in `watchExpressions` changes\n       *    The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching\n       *    those of `watchExpression`\n       *    and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching\n       *    those of `watchExpression`\n       *    The `scope` refers to the current scope.\n       * @returns {function()} Returns a de-registration function for all listeners.\n       */\n      $watchGroup: function(watchExpressions, listener) {\n        var oldValues = new Array(watchExpressions.length);\n        var newValues = new Array(watchExpressions.length);\n        var deregisterFns = [];\n        var self = this;\n        var changeReactionScheduled = false;\n        var firstRun = true;\n\n        if (!watchExpressions.length) {\n          // No expressions means we call the listener ASAP\n          var shouldCall = true;\n          self.$evalAsync(function() {\n            if (shouldCall) listener(newValues, newValues, self);\n          });\n          return function deregisterWatchGroup() {\n            shouldCall = false;\n          };\n        }\n\n        if (watchExpressions.length === 1) {\n          // Special case size of one\n          return this.$watch(watchExpressions[0], function watchGroupAction(value, oldValue, scope) {\n            newValues[0] = value;\n            oldValues[0] = oldValue;\n            listener(newValues, (value === oldValue) ? newValues : oldValues, scope);\n          });\n        }\n\n        forEach(watchExpressions, function(expr, i) {\n          var unwatchFn = self.$watch(expr, function watchGroupSubAction(value, oldValue) {\n            newValues[i] = value;\n            oldValues[i] = oldValue;\n            if (!changeReactionScheduled) {\n              changeReactionScheduled = true;\n              self.$evalAsync(watchGroupAction);\n            }\n          });\n          deregisterFns.push(unwatchFn);\n        });\n\n        function watchGroupAction() {\n          changeReactionScheduled = false;\n\n          if (firstRun) {\n            firstRun = false;\n            listener(newValues, newValues, self);\n          } else {\n            listener(newValues, oldValues, self);\n          }\n        }\n\n        return function deregisterWatchGroup() {\n          while (deregisterFns.length) {\n            deregisterFns.shift()();\n          }\n        };\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watchCollection\n       * @kind function\n       *\n       * @description\n       * Shallow watches the properties of an object and fires whenever any of the properties change\n       * (for arrays, this implies watching the array items; for object maps, this implies watching\n       * the properties). If a change is detected, the `listener` callback is fired.\n       *\n       * - The `obj` collection is observed via standard $watch operation and is examined on every\n       *   call to $digest() to see if any items have been added, removed, or moved.\n       * - The `listener` is called whenever anything within the `obj` has changed. Examples include\n       *   adding, removing, and moving items belonging to an object or array.\n       *\n       *\n       * # Example\n       * ```js\n          $scope.names = ['igor', 'matias', 'misko', 'james'];\n          $scope.dataCount = 4;\n\n          $scope.$watchCollection('names', function(newNames, oldNames) {\n            $scope.dataCount = newNames.length;\n          });\n\n          expect($scope.dataCount).toEqual(4);\n          $scope.$digest();\n\n          //still at 4 ... no changes\n          expect($scope.dataCount).toEqual(4);\n\n          $scope.names.pop();\n          $scope.$digest();\n\n          //now there's been a change\n          expect($scope.dataCount).toEqual(3);\n       * ```\n       *\n       *\n       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The\n       *    expression value should evaluate to an object or an array which is observed on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the\n       *    collection will trigger a call to the `listener`.\n       *\n       * @param {function(newCollection, oldCollection, scope)} listener a callback function called\n       *    when a change is detected.\n       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression\n       *    - The `oldCollection` object is a copy of the former collection data.\n       *      Due to performance considerations, the`oldCollection` value is computed only if the\n       *      `listener` function declares two or more arguments.\n       *    - The `scope` argument refers to the current scope.\n       *\n       * @returns {function()} Returns a de-registration function for this listener. When the\n       *    de-registration function is executed, the internal watch operation is terminated.\n       */\n      $watchCollection: function(obj, listener) {\n        $watchCollectionInterceptor.$stateful = true;\n\n        var self = this;\n        // the current value, updated on each dirty-check run\n        var newValue;\n        // a shallow copy of the newValue from the last dirty-check run,\n        // updated to match newValue during dirty-check run\n        var oldValue;\n        // a shallow copy of the newValue from when the last change happened\n        var veryOldValue;\n        // only track veryOldValue if the listener is asking for it\n        var trackVeryOldValue = (listener.length > 1);\n        var changeDetected = 0;\n        var changeDetector = $parse(obj, $watchCollectionInterceptor);\n        var internalArray = [];\n        var internalObject = {};\n        var initRun = true;\n        var oldLength = 0;\n\n        function $watchCollectionInterceptor(_value) {\n          newValue = _value;\n          var newLength, key, bothNaN, newItem, oldItem;\n\n          // If the new value is undefined, then return undefined as the watch may be a one-time watch\n          if (isUndefined(newValue)) return;\n\n          if (!isObject(newValue)) { // if primitive\n            if (oldValue !== newValue) {\n              oldValue = newValue;\n              changeDetected++;\n            }\n          } else if (isArrayLike(newValue)) {\n            if (oldValue !== internalArray) {\n              // we are transitioning from something which was not an array into array.\n              oldValue = internalArray;\n              oldLength = oldValue.length = 0;\n              changeDetected++;\n            }\n\n            newLength = newValue.length;\n\n            if (oldLength !== newLength) {\n              // if lengths do not match we need to trigger change notification\n              changeDetected++;\n              oldValue.length = oldLength = newLength;\n            }\n            // copy the items to oldValue and look for changes.\n            for (var i = 0; i < newLength; i++) {\n              oldItem = oldValue[i];\n              newItem = newValue[i];\n\n              // eslint-disable-next-line no-self-compare\n              bothNaN = (oldItem !== oldItem) && (newItem !== newItem);\n              if (!bothNaN && (oldItem !== newItem)) {\n                changeDetected++;\n                oldValue[i] = newItem;\n              }\n            }\n          } else {\n            if (oldValue !== internalObject) {\n              // we are transitioning from something which was not an object into object.\n              oldValue = internalObject = {};\n              oldLength = 0;\n              changeDetected++;\n            }\n            // copy the items to oldValue and look for changes.\n            newLength = 0;\n            for (key in newValue) {\n              if (hasOwnProperty.call(newValue, key)) {\n                newLength++;\n                newItem = newValue[key];\n                oldItem = oldValue[key];\n\n                if (key in oldValue) {\n                  // eslint-disable-next-line no-self-compare\n                  bothNaN = (oldItem !== oldItem) && (newItem !== newItem);\n                  if (!bothNaN && (oldItem !== newItem)) {\n                    changeDetected++;\n                    oldValue[key] = newItem;\n                  }\n                } else {\n                  oldLength++;\n                  oldValue[key] = newItem;\n                  changeDetected++;\n                }\n              }\n            }\n            if (oldLength > newLength) {\n              // we used to have more keys, need to find them and destroy them.\n              changeDetected++;\n              for (key in oldValue) {\n                if (!hasOwnProperty.call(newValue, key)) {\n                  oldLength--;\n                  delete oldValue[key];\n                }\n              }\n            }\n          }\n          return changeDetected;\n        }\n\n        function $watchCollectionAction() {\n          if (initRun) {\n            initRun = false;\n            listener(newValue, newValue, self);\n          } else {\n            listener(newValue, veryOldValue, self);\n          }\n\n          // make a copy for the next time a collection is changed\n          if (trackVeryOldValue) {\n            if (!isObject(newValue)) {\n              //primitive\n              veryOldValue = newValue;\n            } else if (isArrayLike(newValue)) {\n              veryOldValue = new Array(newValue.length);\n              for (var i = 0; i < newValue.length; i++) {\n                veryOldValue[i] = newValue[i];\n              }\n            } else { // if object\n              veryOldValue = {};\n              for (var key in newValue) {\n                if (hasOwnProperty.call(newValue, key)) {\n                  veryOldValue[key] = newValue[key];\n                }\n              }\n            }\n          }\n        }\n\n        return this.$watch(changeDetector, $watchCollectionAction);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$digest\n       * @kind function\n       *\n       * @description\n       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\n       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\n       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\n       * until no more listeners are firing. This means that it is possible to get into an infinite\n       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\n       * iterations exceeds 10.\n       *\n       * Usually, you don't call `$digest()` directly in\n       * {@link ng.directive:ngController controllers} or in\n       * {@link ng.$compileProvider#directive directives}.\n       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\n       * a {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.\n       *\n       * If you want to be notified whenever `$digest()` is called,\n       * you can register a `watchExpression` function with\n       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n       *\n       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n       *\n       * # Example\n       * ```js\n           var scope = ...;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // the listener is always called during the first $digest loop after it was registered\n           expect(scope.counter).toEqual(1);\n\n           scope.$digest();\n           // but now it will not be called unless the value changes\n           expect(scope.counter).toEqual(1);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(2);\n       * ```\n       *\n       */\n      $digest: function() {\n        var watch, value, last, fn, get,\n            watchers,\n            dirty, ttl = TTL,\n            next, current, target = this,\n            watchLog = [],\n            logIdx, asyncTask;\n\n        beginPhase('$digest');\n        // Check for changes to browser url that happened in sync before the call to $digest\n        $browser.$$checkUrlChange();\n\n        if (this === $rootScope && applyAsyncId !== null) {\n          // If this is the root scope, and $applyAsync has scheduled a deferred $apply(), then\n          // cancel the scheduled $apply and flush the queue of expressions to be evaluated.\n          $browser.defer.cancel(applyAsyncId);\n          flushApplyAsync();\n        }\n\n        lastDirtyWatch = null;\n\n        do { // \"while dirty\" loop\n          dirty = false;\n          current = target;\n\n          // It's safe for asyncQueuePosition to be a local variable here because this loop can't\n          // be reentered recursively. Calling $digest from a function passed to $applyAsync would\n          // lead to a '$digest already in progress' error.\n          for (var asyncQueuePosition = 0; asyncQueuePosition < asyncQueue.length; asyncQueuePosition++) {\n            try {\n              asyncTask = asyncQueue[asyncQueuePosition];\n              asyncTask.scope.$eval(asyncTask.expression, asyncTask.locals);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n            lastDirtyWatch = null;\n          }\n          asyncQueue.length = 0;\n\n          traverseScopesLoop:\n          do { // \"traverse the scopes\" loop\n            if ((watchers = current.$$watchers)) {\n              // process our watches\n              watchers.$$digestWatchIndex = watchers.length;\n              while (watchers.$$digestWatchIndex--) {\n                try {\n                  watch = watchers[watchers.$$digestWatchIndex];\n                  // Most common watches are on primitives, in which case we can short\n                  // circuit it with === operator, only when === fails do we use .equals\n                  if (watch) {\n                    get = watch.get;\n                    if ((value = get(current)) !== (last = watch.last) &&\n                        !(watch.eq\n                            ? equals(value, last)\n                            : (isNumberNaN(value) && isNumberNaN(last)))) {\n                      dirty = true;\n                      lastDirtyWatch = watch;\n                      watch.last = watch.eq ? copy(value, null) : value;\n                      fn = watch.fn;\n                      fn(value, ((last === initWatchVal) ? value : last), current);\n                      if (ttl < 5) {\n                        logIdx = 4 - ttl;\n                        if (!watchLog[logIdx]) watchLog[logIdx] = [];\n                        watchLog[logIdx].push({\n                          msg: isFunction(watch.exp) ? 'fn: ' + (watch.exp.name || watch.exp.toString()) : watch.exp,\n                          newVal: value,\n                          oldVal: last\n                        });\n                      }\n                    } else if (watch === lastDirtyWatch) {\n                      // If the most recently dirty watcher is now clean, short circuit since the remaining watchers\n                      // have already been tested.\n                      dirty = false;\n                      break traverseScopesLoop;\n                    }\n                  }\n                } catch (e) {\n                  $exceptionHandler(e);\n                }\n              }\n            }\n\n            // Insanity Warning: scope depth-first traversal\n            // yes, this code is a bit crazy, but it works and we have tests to prove it!\n            // this piece should be kept in sync with the traversal in $broadcast\n            if (!(next = ((current.$$watchersCount && current.$$childHead) ||\n                (current !== target && current.$$nextSibling)))) {\n              while (current !== target && !(next = current.$$nextSibling)) {\n                current = current.$parent;\n              }\n            }\n          } while ((current = next));\n\n          // `break traverseScopesLoop;` takes us to here\n\n          if ((dirty || asyncQueue.length) && !(ttl--)) {\n            clearPhase();\n            throw $rootScopeMinErr('infdig',\n                '{0} $digest() iterations reached. Aborting!\\n' +\n                'Watchers fired in the last 5 iterations: {1}',\n                TTL, watchLog);\n          }\n\n        } while (dirty || asyncQueue.length);\n\n        clearPhase();\n\n        // postDigestQueuePosition isn't local here because this loop can be reentered recursively.\n        while (postDigestQueuePosition < postDigestQueue.length) {\n          try {\n            postDigestQueue[postDigestQueuePosition++]();\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        }\n        postDigestQueue.length = postDigestQueuePosition = 0;\n\n        // Check for changes to browser url that happened during the $digest\n        // (for which no event is fired; e.g. via `history.pushState()`)\n        $browser.$$checkUrlChange();\n      },\n\n\n      /**\n       * @ngdoc event\n       * @name $rootScope.Scope#$destroy\n       * @eventType broadcast on scope being destroyed\n       *\n       * @description\n       * Broadcasted when a scope and its children are being destroyed.\n       *\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$destroy\n       * @kind function\n       *\n       * @description\n       * Removes the current scope (and all of its children) from the parent scope. Removal implies\n       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\n       * propagate to the current scope and its children. Removal also implies that the current\n       * scope is eligible for garbage collection.\n       *\n       * The `$destroy()` is usually used by directives such as\n       * {@link ng.directive:ngRepeat ngRepeat} for managing the\n       * unrolling of the loop.\n       *\n       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\n       * Application code can register a `$destroy` event handler that will give it a chance to\n       * perform any necessary cleanup.\n       *\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n      $destroy: function() {\n        // We can't destroy a scope that has been already destroyed.\n        if (this.$$destroyed) return;\n        var parent = this.$parent;\n\n        this.$broadcast('$destroy');\n        this.$$destroyed = true;\n\n        if (this === $rootScope) {\n          //Remove handlers attached to window when $rootScope is removed\n          $browser.$$applicationDestroyed();\n        }\n\n        incrementWatchersCount(this, -this.$$watchersCount);\n        for (var eventName in this.$$listenerCount) {\n          decrementListenerCount(this, this.$$listenerCount[eventName], eventName);\n        }\n\n        // sever all the references to parent scopes (after this cleanup, the current scope should\n        // not be retained by any of our references and should be eligible for garbage collection)\n        if (parent && parent.$$childHead === this) parent.$$childHead = this.$$nextSibling;\n        if (parent && parent.$$childTail === this) parent.$$childTail = this.$$prevSibling;\n        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\n        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\n\n        // Disable listeners, watchers and apply/digest methods\n        this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = noop;\n        this.$on = this.$watch = this.$watchGroup = function() { return noop; };\n        this.$$listeners = {};\n\n        // Disconnect the next sibling to prevent `cleanUpScope` destroying those too\n        this.$$nextSibling = null;\n        cleanUpScope(this);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$eval\n       * @kind function\n       *\n       * @description\n       * Executes the `expression` on the current scope and returns the result. Any exceptions in\n       * the expression are propagated (uncaught). This is useful when evaluating Angular\n       * expressions.\n       *\n       * # Example\n       * ```js\n           var scope = ng.$rootScope.Scope();\n           scope.a = 1;\n           scope.b = 2;\n\n           expect(scope.$eval('a+b')).toEqual(3);\n           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n       * ```\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\n       * @returns {*} The result of evaluating the expression.\n       */\n      $eval: function(expr, locals) {\n        return $parse(expr)(this, locals);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$evalAsync\n       * @kind function\n       *\n       * @description\n       * Executes the expression on the current scope at a later point in time.\n       *\n       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\n       * that:\n       *\n       *   - it will execute after the function that scheduled the evaluation (preferably before DOM\n       *     rendering).\n       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n       *     `expression` execution.\n       *\n       * Any exceptions from the execution of the expression are forwarded to the\n       * {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\n       * will be scheduled. However, it is encouraged to always call code that changes the model\n       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\n       */\n      $evalAsync: function(expr, locals) {\n        // if we are outside of an $digest loop and this is the first time we are scheduling async\n        // task also schedule async auto-flush\n        if (!$rootScope.$$phase && !asyncQueue.length) {\n          $browser.defer(function() {\n            if (asyncQueue.length) {\n              $rootScope.$digest();\n            }\n          });\n        }\n\n        asyncQueue.push({scope: this, expression: $parse(expr), locals: locals});\n      },\n\n      $$postDigest: function(fn) {\n        postDigestQueue.push(fn);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$apply\n       * @kind function\n       *\n       * @description\n       * `$apply()` is used to execute an expression in angular from outside of the angular\n       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\n       * Because we are calling into the angular framework we need to perform proper scope life\n       * cycle of {@link ng.$exceptionHandler exception handling},\n       * {@link ng.$rootScope.Scope#$digest executing watches}.\n       *\n       * ## Life cycle\n       *\n       * # Pseudo-Code of `$apply()`\n       * ```js\n           function $apply(expr) {\n             try {\n               return $eval(expr);\n             } catch (e) {\n               $exceptionHandler(e);\n             } finally {\n               $root.$digest();\n             }\n           }\n       * ```\n       *\n       *\n       * Scope's `$apply()` method transitions through the following stages:\n       *\n       * 1. The {@link guide/expression expression} is executed using the\n       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\n       * 2. Any exceptions from the execution of the expression are forwarded to the\n       *    {@link ng.$exceptionHandler $exceptionHandler} service.\n       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\n       *\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $apply: function(expr) {\n        try {\n          beginPhase('$apply');\n          try {\n            return this.$eval(expr);\n          } finally {\n            clearPhase();\n          }\n        } catch (e) {\n          $exceptionHandler(e);\n        } finally {\n          try {\n            $rootScope.$digest();\n          } catch (e) {\n            $exceptionHandler(e);\n            // eslint-disable-next-line no-unsafe-finally\n            throw e;\n          }\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$applyAsync\n       * @kind function\n       *\n       * @description\n       * Schedule the invocation of $apply to occur at a later time. The actual time difference\n       * varies across browsers, but is typically around ~10 milliseconds.\n       *\n       * This can be used to queue up multiple expressions which need to be evaluated in the same\n       * digest.\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       */\n      $applyAsync: function(expr) {\n        var scope = this;\n        if (expr) {\n          applyAsyncQueue.push($applyAsyncExpression);\n        }\n        expr = $parse(expr);\n        scheduleApplyAsync();\n\n        function $applyAsyncExpression() {\n          scope.$eval(expr);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$on\n       * @kind function\n       *\n       * @description\n       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\n       * discussion of event life cycle.\n       *\n       * The event listener function format is: `function(event, args...)`. The `event` object\n       * passed into the listener has the following attributes:\n       *\n       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n       *     `$broadcast`-ed.\n       *   - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the\n       *     event propagates through the scope hierarchy, this property is set to null.\n       *   - `name` - `{string}`: name of the event.\n       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n       *     further event propagation (available only for events that were `$emit`-ed).\n       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n       *     to true.\n       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\n       *\n       * @param {string} name Event name to listen on.\n       * @param {function(event, ...args)} listener Function to call when the event is emitted.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $on: function(name, listener) {\n        var namedListeners = this.$$listeners[name];\n        if (!namedListeners) {\n          this.$$listeners[name] = namedListeners = [];\n        }\n        namedListeners.push(listener);\n\n        var current = this;\n        do {\n          if (!current.$$listenerCount[name]) {\n            current.$$listenerCount[name] = 0;\n          }\n          current.$$listenerCount[name]++;\n        } while ((current = current.$parent));\n\n        var self = this;\n        return function() {\n          var indexOfListener = namedListeners.indexOf(listener);\n          if (indexOfListener !== -1) {\n            namedListeners[indexOfListener] = null;\n            decrementListenerCount(self, 1, name);\n          }\n        };\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$emit\n       * @kind function\n       *\n       * @description\n       * Dispatches an event `name` upwards through the scope hierarchy notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$emit` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n       * notified. Afterwards, the event traverses upwards toward the root scope and calls all\n       * registered listeners along the way. The event will stop propagating if one of the listeners\n       * cancels it.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to emit.\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).\n       */\n      $emit: function(name, args) {\n        var empty = [],\n            namedListeners,\n            scope = this,\n            stopPropagation = false,\n            event = {\n              name: name,\n              targetScope: scope,\n              stopPropagation: function() {stopPropagation = true;},\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            i, length;\n\n        do {\n          namedListeners = scope.$$listeners[name] || empty;\n          event.currentScope = scope;\n          for (i = 0, length = namedListeners.length; i < length; i++) {\n\n            // if listeners were deregistered, defragment the array\n            if (!namedListeners[i]) {\n              namedListeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n            try {\n              //allow all listeners attached to the current scope to run\n              namedListeners[i].apply(null, listenerArgs);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          //if any listener on the current scope stops propagation, prevent bubbling\n          if (stopPropagation) {\n            event.currentScope = null;\n            return event;\n          }\n          //traverse upwards\n          scope = scope.$parent;\n        } while (scope);\n\n        event.currentScope = null;\n\n        return event;\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$broadcast\n       * @kind function\n       *\n       * @description\n       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$broadcast` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current\n       * scope and calls all registered listeners along the way. The event cannot be canceled.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to broadcast.\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $broadcast: function(name, args) {\n        var target = this,\n            current = target,\n            next = target,\n            event = {\n              name: name,\n              targetScope: target,\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            };\n\n        if (!target.$$listenerCount[name]) return event;\n\n        var listenerArgs = concat([event], arguments, 1),\n            listeners, i, length;\n\n        //down while you can, then up and next sibling or up and next sibling until back at root\n        while ((current = next)) {\n          event.currentScope = current;\n          listeners = current.$$listeners[name] || [];\n          for (i = 0, length = listeners.length; i < length; i++) {\n            // if listeners were deregistered, defragment the array\n            if (!listeners[i]) {\n              listeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n\n            try {\n              listeners[i].apply(null, listenerArgs);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n\n          // Insanity Warning: scope depth-first traversal\n          // yes, this code is a bit crazy, but it works and we have tests to prove it!\n          // this piece should be kept in sync with the traversal in $digest\n          // (though it differs due to having the extra check for $$listenerCount)\n          if (!(next = ((current.$$listenerCount[name] && current.$$childHead) ||\n              (current !== target && current.$$nextSibling)))) {\n            while (current !== target && !(next = current.$$nextSibling)) {\n              current = current.$parent;\n            }\n          }\n        }\n\n        event.currentScope = null;\n        return event;\n      }\n    };\n\n    var $rootScope = new Scope();\n\n    //The internal queues. Expose them on the $rootScope for debugging/testing purposes.\n    var asyncQueue = $rootScope.$$asyncQueue = [];\n    var postDigestQueue = $rootScope.$$postDigestQueue = [];\n    var applyAsyncQueue = $rootScope.$$applyAsyncQueue = [];\n\n    var postDigestQueuePosition = 0;\n\n    return $rootScope;\n\n\n    function beginPhase(phase) {\n      if ($rootScope.$$phase) {\n        throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);\n      }\n\n      $rootScope.$$phase = phase;\n    }\n\n    function clearPhase() {\n      $rootScope.$$phase = null;\n    }\n\n    function incrementWatchersCount(current, count) {\n      do {\n        current.$$watchersCount += count;\n      } while ((current = current.$parent));\n    }\n\n    function decrementListenerCount(current, count, name) {\n      do {\n        current.$$listenerCount[name] -= count;\n\n        if (current.$$listenerCount[name] === 0) {\n          delete current.$$listenerCount[name];\n        }\n      } while ((current = current.$parent));\n    }\n\n    /**\n     * function used as an initial value for watchers.\n     * because it's unique we can easily tell it apart from other values\n     */\n    function initWatchVal() {}\n\n    function flushApplyAsync() {\n      while (applyAsyncQueue.length) {\n        try {\n          applyAsyncQueue.shift()();\n        } catch (e) {\n          $exceptionHandler(e);\n        }\n      }\n      applyAsyncId = null;\n    }\n\n    function scheduleApplyAsync() {\n      if (applyAsyncId === null) {\n        applyAsyncId = $browser.defer(function() {\n          $rootScope.$apply(flushApplyAsync);\n        });\n      }\n    }\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $rootElement\n *\n * @description\n * The root element of Angular application. This is either the element where {@link\n * ng.directive:ngApp ngApp} was declared or the element passed into\n * {@link angular.bootstrap}. The element represents the root element of application. It is also the\n * location where the application's {@link auto.$injector $injector} service gets\n * published, and can be retrieved using `$rootElement.injector()`.\n */\n\n\n// the implementation is in angular.bootstrap\n\n/**\n * @this\n * @description\n * Private service to sanitize uris for links and images. Used by $compile and $sanitize.\n */\nfunction $$SanitizeUriProvider() {\n  var aHrefSanitizationWhitelist = /^\\s*(https?|ftp|mailto|tel|file):/,\n    imgSrcSanitizationWhitelist = /^\\s*((https?|ftp|file|blob):|data:image\\/)/;\n\n  /**\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.aHrefSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      aHrefSanitizationWhitelist = regexp;\n      return this;\n    }\n    return aHrefSanitizationWhitelist;\n  };\n\n\n  /**\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during img[src] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.imgSrcSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      imgSrcSanitizationWhitelist = regexp;\n      return this;\n    }\n    return imgSrcSanitizationWhitelist;\n  };\n\n  this.$get = function() {\n    return function sanitizeUri(uri, isImage) {\n      var regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;\n      var normalizedVal;\n      normalizedVal = urlResolve(uri).href;\n      if (normalizedVal !== '' && !normalizedVal.match(regex)) {\n        return 'unsafe:' + normalizedVal;\n      }\n      return uri;\n    };\n  };\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/* exported $SceProvider, $SceDelegateProvider */\n\nvar $sceMinErr = minErr('$sce');\n\nvar SCE_CONTEXTS = {\n  HTML: 'html',\n  CSS: 'css',\n  URL: 'url',\n  // RESOURCE_URL is a subtype of URL used in contexts where a privileged resource is sourced from a\n  // url.  (e.g. ng-include, script src, templateUrl)\n  RESOURCE_URL: 'resourceUrl',\n  JS: 'js'\n};\n\n// Helper functions follow.\n\nvar UNDERSCORE_LOWERCASE_REGEXP = /_([a-z])/g;\n\nfunction snakeToCamel(name) {\n  return name\n    .replace(UNDERSCORE_LOWERCASE_REGEXP, fnCamelCaseReplace);\n}\n\nfunction adjustMatcher(matcher) {\n  if (matcher === 'self') {\n    return matcher;\n  } else if (isString(matcher)) {\n    // Strings match exactly except for 2 wildcards - '*' and '**'.\n    // '*' matches any character except those from the set ':/.?&'.\n    // '**' matches any character (like .* in a RegExp).\n    // More than 2 *'s raises an error as it's ill defined.\n    if (matcher.indexOf('***') > -1) {\n      throw $sceMinErr('iwcard',\n          'Illegal sequence *** in string matcher.  String: {0}', matcher);\n    }\n    matcher = escapeForRegexp(matcher).\n                  replace(/\\\\\\*\\\\\\*/g, '.*').\n                  replace(/\\\\\\*/g, '[^:/.?&;]*');\n    return new RegExp('^' + matcher + '$');\n  } else if (isRegExp(matcher)) {\n    // The only other type of matcher allowed is a Regexp.\n    // Match entire URL / disallow partial matches.\n    // Flags are reset (i.e. no global, ignoreCase or multiline)\n    return new RegExp('^' + matcher.source + '$');\n  } else {\n    throw $sceMinErr('imatcher',\n        'Matchers may only be \"self\", string patterns or RegExp objects');\n  }\n}\n\n\nfunction adjustMatchers(matchers) {\n  var adjustedMatchers = [];\n  if (isDefined(matchers)) {\n    forEach(matchers, function(matcher) {\n      adjustedMatchers.push(adjustMatcher(matcher));\n    });\n  }\n  return adjustedMatchers;\n}\n\n\n/**\n * @ngdoc service\n * @name $sceDelegate\n * @kind function\n *\n * @description\n *\n * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\n * Contextual Escaping (SCE)} services to AngularJS.\n *\n * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\n * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\n * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to\n * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\n * work because `$sce` delegates to `$sceDelegate` for these operations.\n *\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n *\n * The default instance of `$sceDelegate` should work out of the box with little pain.  While you\n * can override it completely to change the behavior of `$sce`, the common case would\n * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\n * your own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\n * templates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n * $sceDelegateProvider.resourceUrlWhitelist} and {@link\n * ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n */\n\n/**\n * @ngdoc provider\n * @name $sceDelegateProvider\n * @this\n *\n * @description\n *\n * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\n * that the URLs used for sourcing Angular templates are safe.  Refer {@link\n * ng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n * {@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n *\n * For the general details about this service in Angular, read the main page for {@link ng.$sce\n * Strict Contextual Escaping (SCE)}.\n *\n * **Example**:  Consider the following case. <a name=\"example\"></a>\n *\n * - your app is hosted at url `http://myapp.example.com/`\n * - but some of your templates are hosted on other domains you control such as\n *   `http://srv01.assets.example.com/`, `http://srv02.assets.example.com/`, etc.\n * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n *\n * Here is what a secure configuration for this scenario might look like:\n *\n * ```\n *  angular.module('myApp', []).config(function($sceDelegateProvider) {\n *    $sceDelegateProvider.resourceUrlWhitelist([\n *      // Allow same origin resource loads.\n *      'self',\n *      // Allow loading from our assets domain.  Notice the difference between * and **.\n *      'http://srv*.assets.example.com/**'\n *    ]);\n *\n *    // The blacklist overrides the whitelist so the open redirect here is blocked.\n *    $sceDelegateProvider.resourceUrlBlacklist([\n *      'http://myapp.example.com/clickThru**'\n *    ]);\n *  });\n * ```\n */\n\nfunction $SceDelegateProvider() {\n  this.SCE_CONTEXTS = SCE_CONTEXTS;\n\n  // Resource URLs can also be trusted by policy.\n  var resourceUrlWhitelist = ['self'],\n      resourceUrlBlacklist = [];\n\n  /**\n   * @ngdoc method\n   * @name $sceDelegateProvider#resourceUrlWhitelist\n   * @kind function\n   *\n   * @param {Array=} whitelist When provided, replaces the resourceUrlWhitelist with the value\n   *    provided.  This must be an array or null.  A snapshot of this array is used so further\n   *    changes to the array are ignored.\n   *\n   *    Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   *    allowed in this array.\n   *\n   *    <div class=\"alert alert-warning\">\n   *    **Note:** an empty whitelist array will block all URLs!\n   *    </div>\n   *\n   * @return {Array} the currently set whitelist array.\n   *\n   * The **default value** when no whitelist has been explicitly set is `['self']` allowing only\n   * same origin resource requests.\n   *\n   * @description\n   * Sets/Gets the whitelist of trusted resource URLs.\n   */\n  this.resourceUrlWhitelist = function(value) {\n    if (arguments.length) {\n      resourceUrlWhitelist = adjustMatchers(value);\n    }\n    return resourceUrlWhitelist;\n  };\n\n  /**\n   * @ngdoc method\n   * @name $sceDelegateProvider#resourceUrlBlacklist\n   * @kind function\n   *\n   * @param {Array=} blacklist When provided, replaces the resourceUrlBlacklist with the value\n   *    provided.  This must be an array or null.  A snapshot of this array is used so further\n   *    changes to the array are ignored.\n   *\n   *    Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   *    allowed in this array.\n   *\n   *    The typical usage for the blacklist is to **block\n   *    [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as\n   *    these would otherwise be trusted but actually return content from the redirected domain.\n   *\n   *    Finally, **the blacklist overrides the whitelist** and has the final say.\n   *\n   * @return {Array} the currently set blacklist array.\n   *\n   * The **default value** when no whitelist has been explicitly set is the empty array (i.e. there\n   * is no blacklist.)\n   *\n   * @description\n   * Sets/Gets the blacklist of trusted resource URLs.\n   */\n\n  this.resourceUrlBlacklist = function(value) {\n    if (arguments.length) {\n      resourceUrlBlacklist = adjustMatchers(value);\n    }\n    return resourceUrlBlacklist;\n  };\n\n  this.$get = ['$injector', function($injector) {\n\n    var htmlSanitizer = function htmlSanitizer(html) {\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n    };\n\n    if ($injector.has('$sanitize')) {\n      htmlSanitizer = $injector.get('$sanitize');\n    }\n\n\n    function matchUrl(matcher, parsedUrl) {\n      if (matcher === 'self') {\n        return urlIsSameOrigin(parsedUrl);\n      } else {\n        // definitely a regex.  See adjustMatchers()\n        return !!matcher.exec(parsedUrl.href);\n      }\n    }\n\n    function isResourceUrlAllowedByPolicy(url) {\n      var parsedUrl = urlResolve(url.toString());\n      var i, n, allowed = false;\n      // Ensure that at least one item from the whitelist allows this url.\n      for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) {\n        if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {\n          allowed = true;\n          break;\n        }\n      }\n      if (allowed) {\n        // Ensure that no item from the blacklist blocked this url.\n        for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) {\n          if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {\n            allowed = false;\n            break;\n          }\n        }\n      }\n      return allowed;\n    }\n\n    function generateHolderType(Base) {\n      var holderType = function TrustedValueHolderType(trustedValue) {\n        this.$$unwrapTrustedValue = function() {\n          return trustedValue;\n        };\n      };\n      if (Base) {\n        holderType.prototype = new Base();\n      }\n      holderType.prototype.valueOf = function sceValueOf() {\n        return this.$$unwrapTrustedValue();\n      };\n      holderType.prototype.toString = function sceToString() {\n        return this.$$unwrapTrustedValue().toString();\n      };\n      return holderType;\n    }\n\n    var trustedValueHolderBase = generateHolderType(),\n        byType = {};\n\n    byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#trustAs\n     *\n     * @description\n     * Returns an object that is trusted by angular for use in specified strict\n     * contextual escaping contexts (such as ng-bind-html, ng-include, any src\n     * attribute interpolation, any dom event binding attribute interpolation\n     * such as for onclick,  etc.) that uses the provided value.\n     * See {@link ng.$sce $sce} for enabling strict contextual escaping.\n     *\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n     *   resourceUrl, html, js and css.\n     * @param {*} value The value that that should be considered trusted/safe.\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\n     * where Angular expects a $sce.trustAs() return value.\n     */\n    function trustAs(type, trustedValue) {\n      var Constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n      if (!Constructor) {\n        throw $sceMinErr('icontext',\n            'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',\n            type, trustedValue);\n      }\n      if (trustedValue === null || isUndefined(trustedValue) || trustedValue === '') {\n        return trustedValue;\n      }\n      // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting\n      // mutable objects, we ensure here that the value passed in is actually a string.\n      if (typeof trustedValue !== 'string') {\n        throw $sceMinErr('itype',\n            'Attempted to trust a non-string value in a content requiring a string: Context: {0}',\n            type);\n      }\n      return new Constructor(trustedValue);\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#valueOf\n     *\n     * @description\n     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n     *\n     * If the passed parameter is not a value that had been returned by {@link\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.\n     *\n     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}\n     *      call or anything else.\n     * @returns {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns\n     *     `value` unchanged.\n     */\n    function valueOf(maybeTrusted) {\n      if (maybeTrusted instanceof trustedValueHolderBase) {\n        return maybeTrusted.$$unwrapTrustedValue();\n      } else {\n        return maybeTrusted;\n      }\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#getTrusted\n     *\n     * @description\n     * Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\n     * returns the originally supplied value if the queried context type is a supertype of the\n     * created type.  If this condition isn't satisfied, throws an exception.\n     *\n     * <div class=\"alert alert-danger\">\n     * Disabling auto-escaping is extremely dangerous, it usually creates a Cross Site Scripting\n     * (XSS) vulnerability in your application.\n     * </div>\n     *\n     * @param {string} type The kind of context in which this value is to be used.\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} call.\n     * @returns {*} The value the was originally provided to {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.\n     */\n    function getTrusted(type, maybeTrusted) {\n      if (maybeTrusted === null || isUndefined(maybeTrusted) || maybeTrusted === '') {\n        return maybeTrusted;\n      }\n      var constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n      if (constructor && maybeTrusted instanceof constructor) {\n        return maybeTrusted.$$unwrapTrustedValue();\n      }\n      // If we get here, then we may only take one of two actions.\n      // 1. sanitize the value for the requested type, or\n      // 2. throw an exception.\n      if (type === SCE_CONTEXTS.RESOURCE_URL) {\n        if (isResourceUrlAllowedByPolicy(maybeTrusted)) {\n          return maybeTrusted;\n        } else {\n          throw $sceMinErr('insecurl',\n              'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',\n              maybeTrusted.toString());\n        }\n      } else if (type === SCE_CONTEXTS.HTML) {\n        return htmlSanitizer(maybeTrusted);\n      }\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n    }\n\n    return { trustAs: trustAs,\n             getTrusted: getTrusted,\n             valueOf: valueOf };\n  }];\n}\n\n\n/**\n * @ngdoc provider\n * @name $sceProvider\n * @this\n *\n * @description\n *\n * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n * -   enable/disable Strict Contextual Escaping (SCE) in a module\n * -   override the default implementation with a custom delegate\n *\n * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.\n */\n\n/**\n * @ngdoc service\n * @name $sce\n * @kind function\n *\n * @description\n *\n * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n *\n * # Strict Contextual Escaping\n *\n * Strict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\n * contexts to result in a value that is marked as safe to use for that context.  One example of\n * such a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\n * to these contexts as privileged or SCE contexts.\n *\n * As of version 1.2, Angular ships with SCE enabled by default.\n *\n * Note:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow\n * one to execute arbitrary javascript by the use of the expression() syntax.  Refer\n * <http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\n * You can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\n * to the top of your HTML document.\n *\n * SCE assists in writing code in a way that (a) is secure by default and (b) makes auditing for\n * security vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n *\n * Here's an example of a binding in a privileged context:\n *\n * ```\n * <input ng-model=\"userHtml\" aria-label=\"User input\">\n * <div ng-bind-html=\"userHtml\"></div>\n * ```\n *\n * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\n * disabled, this application allows the user to render arbitrary HTML into the DIV.\n * In a more realistic example, one may be rendering user comments, blog articles, etc. via\n * bindings.  (HTML is just one example of a context where rendering user controlled input creates\n * security vulnerabilities.)\n *\n * For the case of HTML, you might use a library, either on the client side, or on the server side,\n * to sanitize unsafe HTML before binding to the value and rendering it in the document.\n *\n * How would you ensure that every place that used these types of bindings was bound to a value that\n * was sanitized by your library (or returned as safe for rendering by your server?)  How can you\n * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some\n * properties/fields and forgot to update the binding to the sanitized value?\n *\n * To be secure by default, you want to ensure that any such bindings are disallowed unless you can\n * determine that something explicitly says it's safe to use a value for binding in that\n * context.  You can then audit your code (a simple grep would do) to ensure that this is only done\n * for those values that you can easily tell are safe - because they were received from your server,\n * sanitized by your library, etc.  You can organize your codebase to help with this - perhaps\n * allowing only the files in a specific directory to do this.  Ensuring that the internal API\n * exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n *\n * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\n * obtain values that will be accepted by SCE / privileged contexts.\n *\n *\n * ## How does it work?\n *\n * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n * $sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\n * ng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n * {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n *\n * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\n * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\n * simplified):\n *\n * ```\n * var ngBindHtmlDirective = ['$sce', function($sce) {\n *   return function(scope, element, attr) {\n *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n *       element.html(value || '');\n *     });\n *   };\n * }];\n * ```\n *\n * ## Impact on loading templates\n *\n * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n * `templateUrl`'s specified by {@link guide/directive directives}.\n *\n * By default, Angular only loads templates from the same domain and protocol as the application\n * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\n * protocols, you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\n * them} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n *\n * *Please note*:\n * The browser's\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n * policy apply in addition to this and may further restrict whether the template is successfully\n * loaded.  This means that without the right CORS policy, loading templates from a different domain\n * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some\n * browsers.\n *\n * ## This feels like too much overhead\n *\n * It's important to remember that SCE only applies to interpolation expressions.\n *\n * If your expressions are constant literals, they're automatically trusted and you don't need to\n * call `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n * `<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n *\n * Additionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\n * through {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n *\n * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\n * templates in `ng-include` from your application's domain without having to even know about SCE.\n * It blocks loading templates from other domains or loading templates over http from an https\n * served document.  You can change these by setting your own custom {@link\n * ng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\n * ng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n *\n * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an\n * application that's secure and can be audited to verify that with much more ease than bolting\n * security onto an application later.\n *\n * <a name=\"contexts\"></a>\n * ## What trusted context types are supported?\n *\n * | Context             | Notes          |\n * |---------------------|----------------|\n * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n * | `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG`, `VIDEO`, `AUDIO`, `SOURCE`, and `TRACK` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n *\n * ## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n *\n *  Each element in these arrays must be one of the following:\n *\n *  - **'self'**\n *    - The special **string**, `'self'`, can be used to match against all URLs of the **same\n *      domain** as the application document using the **same protocol**.\n *  - **String** (except the special value `'self'`)\n *    - The string is matched against the full *normalized / absolute URL* of the resource\n *      being tested (substring matches are not good enough.)\n *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n *      match themselves.\n *    - `*`: matches zero or more occurrences of any character other than one of the following 6\n *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and '`;`'.  It's a useful wildcard for use\n *      in a whitelist.\n *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n *      appropriate for use in a scheme, domain, etc. as it would match too much.  (e.g.\n *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n *      http://foo.example.com/templates/**).\n *  - **RegExp** (*see caveat below*)\n *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n *      have good test coverage).  For instance, the use of `.` in the regex is correct only in a\n *      small number of cases.  A `.` character in the regex used when matching the scheme or a\n *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n *      is highly recommended to use the string patterns and only fall back to regular expressions\n *      as a last resort.\n *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n *      matched against the **entire** *normalized / absolute URL* of the resource being tested\n *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n *    - If you are generating your JavaScript from some other templating engine (not\n *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n *      remember to escape your regular expression (and be aware that you might need more than\n *      one level of escaping depending on your templating engine and the way you interpolated\n *      the value.)  Do make use of your platform's escaping mechanism as it might be good\n *      enough before coding your own.  E.g. Ruby has\n *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n *      Javascript lacks a similar built in function for escaping.  Take a look at Google\n *      Closure library's [goog.string.regExpEscape(s)](\n *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n *\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n *\n * ## Show me an example using SCE.\n *\n * <example module=\"mySceApp\" deps=\"angular-sanitize.js\" name=\"sce-service\">\n * <file name=\"index.html\">\n *   <div ng-controller=\"AppController as myCtrl\">\n *     <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n *     <b>User comments</b><br>\n *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n *     exploit.\n *     <div class=\"well\">\n *       <div ng-repeat=\"userComment in myCtrl.userComments\">\n *         <b>{{userComment.name}}</b>:\n *         <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n *         <br>\n *       </div>\n *     </div>\n *   </div>\n * </file>\n *\n * <file name=\"script.js\">\n *   angular.module('mySceApp', ['ngSanitize'])\n *     .controller('AppController', ['$http', '$templateCache', '$sce',\n *       function AppController($http, $templateCache, $sce) {\n *         var self = this;\n *         $http.get('test_data.json', {cache: $templateCache}).then(function(response) {\n *           self.userComments = response.data;\n *         });\n *         self.explicitlyTrustedHtml = $sce.trustAsHtml(\n *             '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n *             'sanitization.&quot;\">Hover over this text.</span>');\n *       }]);\n * </file>\n *\n * <file name=\"test_data.json\">\n * [\n *   { \"name\": \"Alice\",\n *     \"htmlComment\":\n *         \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n *   },\n *   { \"name\": \"Bob\",\n *     \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n *   }\n * ]\n * </file>\n *\n * <file name=\"protractor.js\" type=\"protractor\">\n *   describe('SCE doc demo', function() {\n *     it('should sanitize untrusted values', function() {\n *       expect(element.all(by.css('.htmlComment')).first().getAttribute('innerHTML'))\n *           .toBe('<span>Is <i>anyone</i> reading this?</span>');\n *     });\n *\n *     it('should NOT sanitize explicitly trusted values', function() {\n *       expect(element(by.id('explicitlyTrustedHtml')).getAttribute('innerHTML')).toBe(\n *           '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n *           'sanitization.&quot;\">Hover over this text.</span>');\n *     });\n *   });\n * </file>\n * </example>\n *\n *\n *\n * ## Can I disable SCE completely?\n *\n * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\n * for little coding overhead.  It will be much harder to take an SCE disabled application and\n * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\n * for cases where you have a lot of existing code that was written before SCE was introduced and\n * you're migrating them a module at a time.\n *\n * That said, here's how you can completely disable SCE:\n *\n * ```\n * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n *   // Completely disable SCE.  For demonstration purposes only!\n *   // Do not use in new projects.\n *   $sceProvider.enabled(false);\n * });\n * ```\n *\n */\n\nfunction $SceProvider() {\n  var enabled = true;\n\n  /**\n   * @ngdoc method\n   * @name $sceProvider#enabled\n   * @kind function\n   *\n   * @param {boolean=} value If provided, then enables/disables SCE.\n   * @return {boolean} true if SCE is enabled, false otherwise.\n   *\n   * @description\n   * Enables/disables SCE and returns the current value.\n   */\n  this.enabled = function(value) {\n    if (arguments.length) {\n      enabled = !!value;\n    }\n    return enabled;\n  };\n\n\n  /* Design notes on the default implementation for SCE.\n   *\n   * The API contract for the SCE delegate\n   * -------------------------------------\n   * The SCE delegate object must provide the following 3 methods:\n   *\n   * - trustAs(contextEnum, value)\n   *     This method is used to tell the SCE service that the provided value is OK to use in the\n   *     contexts specified by contextEnum.  It must return an object that will be accepted by\n   *     getTrusted() for a compatible contextEnum and return this value.\n   *\n   * - valueOf(value)\n   *     For values that were not produced by trustAs(), return them as is.  For values that were\n   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if\n   *     trustAs is wrapping the given values into some type, this operation unwraps it when given\n   *     such a value.\n   *\n   * - getTrusted(contextEnum, value)\n   *     This function should return the a value that is safe to use in the context specified by\n   *     contextEnum or throw and exception otherwise.\n   *\n   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be\n   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For\n   * instance, an implementation could maintain a registry of all trusted objects by context.  In\n   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would\n   * return the same object passed in if it was found in the registry under a compatible context or\n   * throw an exception otherwise.  An implementation might only wrap values some of the time based\n   * on some criteria.  getTrusted() might return a value and not throw an exception for special\n   * constants or objects even if not wrapped.  All such implementations fulfill this contract.\n   *\n   *\n   * A note on the inheritance model for SCE contexts\n   * ------------------------------------------------\n   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This\n   * is purely an implementation details.\n   *\n   * The contract is simply this:\n   *\n   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)\n   *     will also succeed.\n   *\n   * Inheritance happens to capture this in a natural way.  In some future, we\n   * may not use inheritance anymore.  That is OK because no code outside of\n   * sce.js and sceSpecs.js would need to be aware of this detail.\n   */\n\n  this.$get = ['$parse', '$sceDelegate', function(\n                $parse,   $sceDelegate) {\n    // Support: IE 9-11 only\n    // Prereq: Ensure that we're not running in IE<11 quirks mode.  In that mode, IE < 11 allow\n    // the \"expression(javascript expression)\" syntax which is insecure.\n    if (enabled && msie < 8) {\n      throw $sceMinErr('iequirks',\n        'Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks ' +\n        'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' +\n        'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');\n    }\n\n    var sce = shallowCopy(SCE_CONTEXTS);\n\n    /**\n     * @ngdoc method\n     * @name $sce#isEnabled\n     * @kind function\n     *\n     * @return {Boolean} true if SCE is enabled, false otherwise.  If you want to set the value, you\n     * have to do it at module config time on {@link ng.$sceProvider $sceProvider}.\n     *\n     * @description\n     * Returns a boolean indicating if SCE is enabled.\n     */\n    sce.isEnabled = function() {\n      return enabled;\n    };\n    sce.trustAs = $sceDelegate.trustAs;\n    sce.getTrusted = $sceDelegate.getTrusted;\n    sce.valueOf = $sceDelegate.valueOf;\n\n    if (!enabled) {\n      sce.trustAs = sce.getTrusted = function(type, value) { return value; };\n      sce.valueOf = identity;\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAs\n     *\n     * @description\n     * Converts Angular {@link guide/expression expression} into a function.  This is like {@link\n     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\n     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n     * *result*)}\n     *\n     * @param {string} type The kind of SCE context in which this result will be used.\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n    sce.parseAs = function sceParseAs(type, expr) {\n      var parsed = $parse(expr);\n      if (parsed.literal && parsed.constant) {\n        return parsed;\n      } else {\n        return $parse(expr, function(value) {\n          return sce.getTrusted(type, value);\n        });\n      }\n    };\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAs\n     *\n     * @description\n     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\n     * returns an object that is trusted by angular for use in specified strict contextual\n     * escaping contexts (such as ng-bind-html, ng-include, any src attribute\n     * interpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\n     * that uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\n     * escaping.\n     *\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n     *   resourceUrl, html, js and css.\n     * @param {*} value The value that that should be considered trusted/safe.\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\n     * where Angular expects a $sce.trustAs() return value.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsHtml(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedHtml\n     *     $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsUrl(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedUrl\n     *     $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedResourceUrl\n     *     $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the return\n     *     value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsJs\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsJs(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedJs\n     *     $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrusted\n     *\n     * @description\n     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\n     * takes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\n     * originally supplied value if the queried context type is a supertype of the created type.\n     * If this condition isn't satisfied, throws an exception.\n     *\n     * @param {string} type The kind of context in which this value is to be used.\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}\n     *                         call.\n     * @returns {*} The value the was originally provided to\n     *              {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.\n     *              Otherwise, throws an exception.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedHtml(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.HTML, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedCss\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedCss(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.CSS, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedUrl(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.URL, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}\n     *\n     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedJs\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedJs(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.JS, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsHtml(expression string)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsCss\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsCss(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsUrl(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsJs\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsJs(value)` →\n     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    // Shorthand delegations.\n    var parse = sce.parseAs,\n        getTrusted = sce.getTrusted,\n        trustAs = sce.trustAs;\n\n    forEach(SCE_CONTEXTS, function(enumValue, name) {\n      var lName = lowercase(name);\n      sce[snakeToCamel('parse_as_' + lName)] = function(expr) {\n        return parse(enumValue, expr);\n      };\n      sce[snakeToCamel('get_trusted_' + lName)] = function(value) {\n        return getTrusted(enumValue, value);\n      };\n      sce[snakeToCamel('trust_as_' + lName)] = function(value) {\n        return trustAs(enumValue, value);\n      };\n    });\n\n    return sce;\n  }];\n}\n\n/* exported $SnifferProvider */\n\n/**\n * !!! This is an undocumented \"private\" service !!!\n *\n * @name $sniffer\n * @requires $window\n * @requires $document\n * @this\n *\n * @property {boolean} history Does the browser support html5 history api ?\n * @property {boolean} transitions Does the browser support CSS transition events ?\n * @property {boolean} animations Does the browser support CSS animation events ?\n *\n * @description\n * This is very simple implementation of testing browser's features.\n */\nfunction $SnifferProvider() {\n  this.$get = ['$window', '$document', function($window, $document) {\n    var eventSupport = {},\n        // Chrome Packaged Apps are not allowed to access `history.pushState`.\n        // If not sandboxed, they can be detected by the presence of `chrome.app.runtime`\n        // (see https://developer.chrome.com/apps/api_index). If sandboxed, they can be detected by\n        // the presence of an extension runtime ID and the absence of other Chrome runtime APIs\n        // (see https://developer.chrome.com/apps/manifest/sandbox).\n        // (NW.js apps have access to Chrome APIs, but do support `history`.)\n        isNw = $window.nw && $window.nw.process,\n        isChromePackagedApp =\n            !isNw &&\n            $window.chrome &&\n            ($window.chrome.app && $window.chrome.app.runtime ||\n                !$window.chrome.app && $window.chrome.runtime && $window.chrome.runtime.id),\n        hasHistoryPushState = !isChromePackagedApp && $window.history && $window.history.pushState,\n        android =\n          toInt((/android (\\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),\n        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),\n        document = $document[0] || {},\n        bodyStyle = document.body && document.body.style,\n        transitions = false,\n        animations = false;\n\n    if (bodyStyle) {\n      // Support: Android <5, Blackberry Browser 10, default Chrome in Android 4.4.x\n      // Mentioned browsers need a -webkit- prefix for transitions & animations.\n      transitions = !!('transition' in bodyStyle || 'webkitTransition' in bodyStyle);\n      animations = !!('animation' in bodyStyle || 'webkitAnimation' in bodyStyle);\n    }\n\n\n    return {\n      // Android has history.pushState, but it does not update location correctly\n      // so let's not use the history API at all.\n      // http://code.google.com/p/android/issues/detail?id=17471\n      // https://github.com/angular/angular.js/issues/904\n\n      // older webkit browser (533.9) on Boxee box has exactly the same problem as Android has\n      // so let's not use the history API also\n      // We are purposefully using `!(android < 4)` to cover the case when `android` is undefined\n      history: !!(hasHistoryPushState && !(android < 4) && !boxee),\n      hasEvent: function(event) {\n        // Support: IE 9-11 only\n        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\n        // it. In particular the event is not fired when backspace or delete key are pressed or\n        // when cut operation is performed.\n        // IE10+ implements 'input' event but it erroneously fires under various situations,\n        // e.g. when placeholder changes, or a form is focused.\n        if (event === 'input' && msie) return false;\n\n        if (isUndefined(eventSupport[event])) {\n          var divElm = document.createElement('div');\n          eventSupport[event] = 'on' + event in divElm;\n        }\n\n        return eventSupport[event];\n      },\n      csp: csp(),\n      transitions: transitions,\n      animations: animations,\n      android: android\n    };\n  }];\n}\n\nvar $templateRequestMinErr = minErr('$compile');\n\n/**\n * @ngdoc provider\n * @name $templateRequestProvider\n * @this\n *\n * @description\n * Used to configure the options passed to the {@link $http} service when making a template request.\n *\n * For example, it can be used for specifying the \"Accept\" header that is sent to the server, when\n * requesting a template.\n */\nfunction $TemplateRequestProvider() {\n\n  var httpOptions;\n\n  /**\n   * @ngdoc method\n   * @name $templateRequestProvider#httpOptions\n   * @description\n   * The options to be passed to the {@link $http} service when making the request.\n   * You can use this to override options such as the \"Accept\" header for template requests.\n   *\n   * The {@link $templateRequest} will set the `cache` and the `transformResponse` properties of the\n   * options if not overridden here.\n   *\n   * @param {string=} value new value for the {@link $http} options.\n   * @returns {string|self} Returns the {@link $http} options when used as getter and self if used as setter.\n   */\n  this.httpOptions = function(val) {\n    if (val) {\n      httpOptions = val;\n      return this;\n    }\n    return httpOptions;\n  };\n\n  /**\n   * @ngdoc service\n   * @name $templateRequest\n   *\n   * @description\n   * The `$templateRequest` service runs security checks then downloads the provided template using\n   * `$http` and, upon success, stores the contents inside of `$templateCache`. If the HTTP request\n   * fails or the response data of the HTTP request is empty, a `$compile` error will be thrown (the\n   * exception can be thwarted by setting the 2nd parameter of the function to true). Note that the\n   * contents of `$templateCache` are trusted, so the call to `$sce.getTrustedUrl(tpl)` is omitted\n   * when `tpl` is of type string and `$templateCache` has the matching entry.\n   *\n   * If you want to pass custom options to the `$http` service, such as setting the Accept header you\n   * can configure this via {@link $templateRequestProvider#httpOptions}.\n   *\n   * @param {string|TrustedResourceUrl} tpl The HTTP request template URL\n   * @param {boolean=} ignoreRequestError Whether or not to ignore the exception when the request fails or the template is empty\n   *\n   * @return {Promise} a promise for the HTTP response data of the given URL.\n   *\n   * @property {number} totalPendingRequests total amount of pending template requests being downloaded.\n   */\n  this.$get = ['$exceptionHandler', '$templateCache', '$http', '$q', '$sce',\n    function($exceptionHandler, $templateCache, $http, $q, $sce) {\n\n      function handleRequestFn(tpl, ignoreRequestError) {\n        handleRequestFn.totalPendingRequests++;\n\n        // We consider the template cache holds only trusted templates, so\n        // there's no need to go through whitelisting again for keys that already\n        // are included in there. This also makes Angular accept any script\n        // directive, no matter its name. However, we still need to unwrap trusted\n        // types.\n        if (!isString(tpl) || isUndefined($templateCache.get(tpl))) {\n          tpl = $sce.getTrustedResourceUrl(tpl);\n        }\n\n        var transformResponse = $http.defaults && $http.defaults.transformResponse;\n\n        if (isArray(transformResponse)) {\n          transformResponse = transformResponse.filter(function(transformer) {\n            return transformer !== defaultHttpResponseTransform;\n          });\n        } else if (transformResponse === defaultHttpResponseTransform) {\n          transformResponse = null;\n        }\n\n        return $http.get(tpl, extend({\n            cache: $templateCache,\n            transformResponse: transformResponse\n          }, httpOptions))\n          .finally(function() {\n            handleRequestFn.totalPendingRequests--;\n          })\n          .then(function(response) {\n            $templateCache.put(tpl, response.data);\n            return response.data;\n          }, handleError);\n\n        function handleError(resp) {\n          if (!ignoreRequestError) {\n            resp = $templateRequestMinErr('tpload',\n                'Failed to load template: {0} (HTTP status: {1} {2})',\n                tpl, resp.status, resp.statusText);\n\n            $exceptionHandler(resp);\n          }\n\n          return $q.reject(resp);\n        }\n      }\n\n      handleRequestFn.totalPendingRequests = 0;\n\n      return handleRequestFn;\n    }\n  ];\n}\n\n/** @this */\nfunction $$TestabilityProvider() {\n  this.$get = ['$rootScope', '$browser', '$location',\n       function($rootScope,   $browser,   $location) {\n\n    /**\n     * @name $testability\n     *\n     * @description\n     * The private $$testability service provides a collection of methods for use when debugging\n     * or by automated test and debugging tools.\n     */\n    var testability = {};\n\n    /**\n     * @name $$testability#findBindings\n     *\n     * @description\n     * Returns an array of elements that are bound (via ng-bind or {{}})\n     * to expressions matching the input.\n     *\n     * @param {Element} element The element root to search from.\n     * @param {string} expression The binding expression to match.\n     * @param {boolean} opt_exactMatch If true, only returns exact matches\n     *     for the expression. Filters and whitespace are ignored.\n     */\n    testability.findBindings = function(element, expression, opt_exactMatch) {\n      var bindings = element.getElementsByClassName('ng-binding');\n      var matches = [];\n      forEach(bindings, function(binding) {\n        var dataBinding = angular.element(binding).data('$binding');\n        if (dataBinding) {\n          forEach(dataBinding, function(bindingName) {\n            if (opt_exactMatch) {\n              var matcher = new RegExp('(^|\\\\s)' + escapeForRegexp(expression) + '(\\\\s|\\\\||$)');\n              if (matcher.test(bindingName)) {\n                matches.push(binding);\n              }\n            } else {\n              if (bindingName.indexOf(expression) !== -1) {\n                matches.push(binding);\n              }\n            }\n          });\n        }\n      });\n      return matches;\n    };\n\n    /**\n     * @name $$testability#findModels\n     *\n     * @description\n     * Returns an array of elements that are two-way found via ng-model to\n     * expressions matching the input.\n     *\n     * @param {Element} element The element root to search from.\n     * @param {string} expression The model expression to match.\n     * @param {boolean} opt_exactMatch If true, only returns exact matches\n     *     for the expression.\n     */\n    testability.findModels = function(element, expression, opt_exactMatch) {\n      var prefixes = ['ng-', 'data-ng-', 'ng\\\\:'];\n      for (var p = 0; p < prefixes.length; ++p) {\n        var attributeEquals = opt_exactMatch ? '=' : '*=';\n        var selector = '[' + prefixes[p] + 'model' + attributeEquals + '\"' + expression + '\"]';\n        var elements = element.querySelectorAll(selector);\n        if (elements.length) {\n          return elements;\n        }\n      }\n    };\n\n    /**\n     * @name $$testability#getLocation\n     *\n     * @description\n     * Shortcut for getting the location in a browser agnostic way. Returns\n     *     the path, search, and hash. (e.g. /path?a=b#hash)\n     */\n    testability.getLocation = function() {\n      return $location.url();\n    };\n\n    /**\n     * @name $$testability#setLocation\n     *\n     * @description\n     * Shortcut for navigating to a location without doing a full page reload.\n     *\n     * @param {string} url The location url (path, search and hash,\n     *     e.g. /path?a=b#hash) to go to.\n     */\n    testability.setLocation = function(url) {\n      if (url !== $location.url()) {\n        $location.url(url);\n        $rootScope.$digest();\n      }\n    };\n\n    /**\n     * @name $$testability#whenStable\n     *\n     * @description\n     * Calls the callback when $timeout and $http requests are completed.\n     *\n     * @param {function} callback\n     */\n    testability.whenStable = function(callback) {\n      $browser.notifyWhenNoOutstandingRequests(callback);\n    };\n\n    return testability;\n  }];\n}\n\n/** @this */\nfunction $TimeoutProvider() {\n  this.$get = ['$rootScope', '$browser', '$q', '$$q', '$exceptionHandler',\n       function($rootScope,   $browser,   $q,   $$q,   $exceptionHandler) {\n\n    var deferreds = {};\n\n\n     /**\n      * @ngdoc service\n      * @name $timeout\n      *\n      * @description\n      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\n      * block and delegates any exceptions to\n      * {@link ng.$exceptionHandler $exceptionHandler} service.\n      *\n      * The return value of calling `$timeout` is a promise, which will be resolved when\n      * the delay has passed and the timeout function, if provided, is executed.\n      *\n      * To cancel a timeout request, call `$timeout.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\n      * synchronously flush the queue of deferred functions.\n      *\n      * If you only want a promise that will be resolved after some specified delay\n      * then you can call `$timeout` without the `fn` function.\n      *\n      * @param {function()=} fn A function, whose execution should be delayed.\n      * @param {number=} [delay=0] Delay in milliseconds.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @param {...*=} Pass additional parameters to the executed function.\n      * @returns {Promise} Promise that will be resolved when the timeout is reached. The promise\n      *   will be resolved with the return value of the `fn` function.\n      *\n      */\n    function timeout(fn, delay, invokeApply) {\n      if (!isFunction(fn)) {\n        invokeApply = delay;\n        delay = fn;\n        fn = noop;\n      }\n\n      var args = sliceArgs(arguments, 3),\n          skipApply = (isDefined(invokeApply) && !invokeApply),\n          deferred = (skipApply ? $$q : $q).defer(),\n          promise = deferred.promise,\n          timeoutId;\n\n      timeoutId = $browser.defer(function() {\n        try {\n          deferred.resolve(fn.apply(null, args));\n        } catch (e) {\n          deferred.reject(e);\n          $exceptionHandler(e);\n        } finally {\n          delete deferreds[promise.$$timeoutId];\n        }\n\n        if (!skipApply) $rootScope.$apply();\n      }, delay);\n\n      promise.$$timeoutId = timeoutId;\n      deferreds[timeoutId] = deferred;\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc method\n      * @name $timeout#cancel\n      *\n      * @description\n      * Cancels a task associated with the `promise`. As a result of this, the promise will be\n      * resolved with a rejection.\n      *\n      * @param {Promise=} promise Promise returned by the `$timeout` function.\n      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n      *   canceled.\n      */\n    timeout.cancel = function(promise) {\n      if (promise && promise.$$timeoutId in deferreds) {\n        // Timeout cancels should not report an unhandled promise.\n        deferreds[promise.$$timeoutId].promise.catch(noop);\n        deferreds[promise.$$timeoutId].reject('canceled');\n        delete deferreds[promise.$$timeoutId];\n        return $browser.defer.cancel(promise.$$timeoutId);\n      }\n      return false;\n    };\n\n    return timeout;\n  }];\n}\n\n// NOTE:  The usage of window and document instead of $window and $document here is\n// deliberate.  This service depends on the specific behavior of anchor nodes created by the\n// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and\n// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it\n// doesn't know about mocked locations and resolves URLs to the real document - which is\n// exactly the behavior needed here.  There is little value is mocking these out for this\n// service.\nvar urlParsingNode = window.document.createElement('a');\nvar originUrl = urlResolve(window.location.href);\n\n\n/**\n *\n * Implementation Notes for non-IE browsers\n * ----------------------------------------\n * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,\n * results both in the normalizing and parsing of the URL.  Normalizing means that a relative\n * URL will be resolved into an absolute URL in the context of the application document.\n * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related\n * properties are all populated to reflect the normalized URL.  This approach has wide\n * compatibility - Safari 1+, Mozilla 1+, Opera 7+,e etc.  See\n * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n *\n * Implementation Notes for IE\n * ---------------------------\n * IE <= 10 normalizes the URL when assigned to the anchor node similar to the other\n * browsers.  However, the parsed components will not be set if the URL assigned did not specify\n * them.  (e.g. if you assign a.href = \"foo\", then a.protocol, a.host, etc. will be empty.)  We\n * work around that by performing the parsing in a 2nd step by taking a previously normalized\n * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the\n * properties such as protocol, hostname, port, etc.\n *\n * References:\n *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n *   http://url.spec.whatwg.org/#urlutils\n *   https://github.com/angular/angular.js/pull/2902\n *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n *\n * @kind function\n * @param {string} url The URL to be parsed.\n * @description Normalizes and parses a URL.\n * @returns {object} Returns the normalized URL as a dictionary.\n *\n *   | member name   | Description    |\n *   |---------------|----------------|\n *   | href          | A normalized version of the provided URL if it was not an absolute URL |\n *   | protocol      | The protocol including the trailing colon                              |\n *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |\n *   | search        | The search params, minus the question mark                             |\n *   | hash          | The hash string, minus the hash symbol\n *   | hostname      | The hostname\n *   | port          | The port, without \":\"\n *   | pathname      | The pathname, beginning with \"/\"\n *\n */\nfunction urlResolve(url) {\n  var href = url;\n\n  // Support: IE 9-11 only\n  if (msie) {\n    // Normalize before parse.  Refer Implementation Notes on why this is\n    // done in two steps on IE.\n    urlParsingNode.setAttribute('href', href);\n    href = urlParsingNode.href;\n  }\n\n  urlParsingNode.setAttribute('href', href);\n\n  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n  return {\n    href: urlParsingNode.href,\n    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n    host: urlParsingNode.host,\n    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n    hostname: urlParsingNode.hostname,\n    port: urlParsingNode.port,\n    pathname: (urlParsingNode.pathname.charAt(0) === '/')\n      ? urlParsingNode.pathname\n      : '/' + urlParsingNode.pathname\n  };\n}\n\n/**\n * Parse a request URL and determine whether this is a same-origin request as the application document.\n *\n * @param {string|object} requestUrl The url of the request as a string that will be resolved\n * or a parsed URL object.\n * @returns {boolean} Whether the request is for the same origin as the application document.\n */\nfunction urlIsSameOrigin(requestUrl) {\n  var parsed = (isString(requestUrl)) ? urlResolve(requestUrl) : requestUrl;\n  return (parsed.protocol === originUrl.protocol &&\n          parsed.host === originUrl.host);\n}\n\n/**\n * @ngdoc service\n * @name $window\n * @this\n *\n * @description\n * A reference to the browser's `window` object. While `window`\n * is globally available in JavaScript, it causes testability problems, because\n * it is a global variable. In angular we always refer to it through the\n * `$window` service, so it may be overridden, removed or mocked for testing.\n *\n * Expressions, like the one defined for the `ngClick` directive in the example\n * below, are evaluated with respect to the current scope.  Therefore, there is\n * no risk of inadvertently coding in a dependency on a global value in such an\n * expression.\n *\n * @example\n   <example module=\"windowExample\" name=\"window-service\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('windowExample', [])\n           .controller('ExampleController', ['$scope', '$window', function($scope, $window) {\n             $scope.greeting = 'Hello, World!';\n             $scope.doGreeting = function(greeting) {\n               $window.alert(greeting);\n             };\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input type=\"text\" ng-model=\"greeting\" aria-label=\"greeting\" />\n         <button ng-click=\"doGreeting(greeting)\">ALERT</button>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n      it('should display the greeting in the input box', function() {\n       element(by.model('greeting')).sendKeys('Hello, E2E Tests');\n       // If we click the button it will block the test runner\n       // element(':button').click();\n      });\n     </file>\n   </example>\n */\nfunction $WindowProvider() {\n  this.$get = valueFn(window);\n}\n\n/**\n * @name $$cookieReader\n * @requires $document\n *\n * @description\n * This is a private service for reading cookies used by $http and ngCookies\n *\n * @return {Object} a key/value map of the current cookies\n */\nfunction $$CookieReader($document) {\n  var rawDocument = $document[0] || {};\n  var lastCookies = {};\n  var lastCookieString = '';\n\n  function safeGetCookie(rawDocument) {\n    try {\n      return rawDocument.cookie || '';\n    } catch (e) {\n      return '';\n    }\n  }\n\n  function safeDecodeURIComponent(str) {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  }\n\n  return function() {\n    var cookieArray, cookie, i, index, name;\n    var currentCookieString = safeGetCookie(rawDocument);\n\n    if (currentCookieString !== lastCookieString) {\n      lastCookieString = currentCookieString;\n      cookieArray = lastCookieString.split('; ');\n      lastCookies = {};\n\n      for (i = 0; i < cookieArray.length; i++) {\n        cookie = cookieArray[i];\n        index = cookie.indexOf('=');\n        if (index > 0) { //ignore nameless cookies\n          name = safeDecodeURIComponent(cookie.substring(0, index));\n          // the first value that is seen for a cookie is the most\n          // specific one.  values for the same cookie name that\n          // follow are for less specific paths.\n          if (isUndefined(lastCookies[name])) {\n            lastCookies[name] = safeDecodeURIComponent(cookie.substring(index + 1));\n          }\n        }\n      }\n    }\n    return lastCookies;\n  };\n}\n\n$$CookieReader.$inject = ['$document'];\n\n/** @this */\nfunction $$CookieReaderProvider() {\n  this.$get = $$CookieReader;\n}\n\n/* global currencyFilter: true,\n dateFilter: true,\n filterFilter: true,\n jsonFilter: true,\n limitToFilter: true,\n lowercaseFilter: true,\n numberFilter: true,\n orderByFilter: true,\n uppercaseFilter: true,\n */\n\n/**\n * @ngdoc provider\n * @name $filterProvider\n * @description\n *\n * Filters are just functions which transform input to an output. However filters need to be\n * Dependency Injected. To achieve this a filter definition consists of a factory function which is\n * annotated with dependencies and is responsible for creating a filter function.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.\n * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace\n * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores\n * (`myapp_subsection_filterx`).\n * </div>\n *\n * ```js\n *   // Filter registration\n *   function MyModule($provide, $filterProvider) {\n *     // create a service to demonstrate injection (not always needed)\n *     $provide.value('greet', function(name){\n *       return 'Hello ' + name + '!';\n *     });\n *\n *     // register a filter factory which uses the\n *     // greet service to demonstrate DI.\n *     $filterProvider.register('greet', function(greet){\n *       // return the filter function which uses the greet service\n *       // to generate salutation\n *       return function(text) {\n *         // filters need to be forgiving so check input validity\n *         return text && greet(text) || text;\n *       };\n *     });\n *   }\n * ```\n *\n * The filter function is registered with the `$injector` under the filter name suffix with\n * `Filter`.\n *\n * ```js\n *   it('should be the same instance', inject(\n *     function($filterProvider) {\n *       $filterProvider.register('reverse', function(){\n *         return ...;\n *       });\n *     },\n *     function($filter, reverseFilter) {\n *       expect($filter('reverse')).toBe(reverseFilter);\n *     });\n * ```\n *\n *\n * For more information about how angular filters work, and how to create your own filters, see\n * {@link guide/filter Filters} in the Angular Developer Guide.\n */\n\n/**\n * @ngdoc service\n * @name $filter\n * @kind function\n * @description\n * Filters are used for formatting data displayed to the user.\n *\n * They can be used in view templates, controllers or services.Angular comes\n * with a collection of [built-in filters](api/ng/filter), but it is easy to\n * define your own as well.\n *\n * The general syntax in templates is as follows:\n *\n * ```html\n * {{ expression [| filter_name[:parameter_value] ... ] }}\n * ```\n *\n * @param {String} name Name of the filter function to retrieve\n * @return {Function} the filter function\n * @example\n   <example name=\"$filter\" module=\"filterExample\">\n     <file name=\"index.html\">\n       <div ng-controller=\"MainCtrl\">\n        <h3>{{ originalText }}</h3>\n        <h3>{{ filteredText }}</h3>\n       </div>\n     </file>\n\n     <file name=\"script.js\">\n      angular.module('filterExample', [])\n      .controller('MainCtrl', function($scope, $filter) {\n        $scope.originalText = 'hello';\n        $scope.filteredText = $filter('uppercase')($scope.originalText);\n      });\n     </file>\n   </example>\n  */\n$FilterProvider.$inject = ['$provide'];\n/** @this */\nfunction $FilterProvider($provide) {\n  var suffix = 'Filter';\n\n  /**\n   * @ngdoc method\n   * @name $filterProvider#register\n   * @param {string|Object} name Name of the filter function, or an object map of filters where\n   *    the keys are the filter names and the values are the filter factories.\n   *\n   *    <div class=\"alert alert-warning\">\n   *    **Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.\n   *    Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace\n   *    your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores\n   *    (`myapp_subsection_filterx`).\n   *    </div>\n    * @param {Function} factory If the first argument was a string, a factory function for the filter to be registered.\n   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map\n   *    of the registered filter instances.\n   */\n  function register(name, factory) {\n    if (isObject(name)) {\n      var filters = {};\n      forEach(name, function(filter, key) {\n        filters[key] = register(key, filter);\n      });\n      return filters;\n    } else {\n      return $provide.factory(name + suffix, factory);\n    }\n  }\n  this.register = register;\n\n  this.$get = ['$injector', function($injector) {\n    return function(name) {\n      return $injector.get(name + suffix);\n    };\n  }];\n\n  ////////////////////////////////////////\n\n  /* global\n    currencyFilter: false,\n    dateFilter: false,\n    filterFilter: false,\n    jsonFilter: false,\n    limitToFilter: false,\n    lowercaseFilter: false,\n    numberFilter: false,\n    orderByFilter: false,\n    uppercaseFilter: false\n  */\n\n  register('currency', currencyFilter);\n  register('date', dateFilter);\n  register('filter', filterFilter);\n  register('json', jsonFilter);\n  register('limitTo', limitToFilter);\n  register('lowercase', lowercaseFilter);\n  register('number', numberFilter);\n  register('orderBy', orderByFilter);\n  register('uppercase', uppercaseFilter);\n}\n\n/**\n * @ngdoc filter\n * @name filter\n * @kind function\n *\n * @description\n * Selects a subset of items from `array` and returns it as a new array.\n *\n * @param {Array} array The source array.\n * @param {string|Object|function()} expression The predicate to be used for selecting items from\n *   `array`.\n *\n *   Can be one of:\n *\n *   - `string`: The string is used for matching against the contents of the `array`. All strings or\n *     objects with string properties in `array` that match this string will be returned. This also\n *     applies to nested object properties.\n *     The predicate can be negated by prefixing the string with `!`.\n *\n *   - `Object`: A pattern object can be used to filter specific properties on objects contained\n *     by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n *     which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n *     property name (`$` by default) can be used (e.g. as in `{$: \"text\"}`) to accept a match\n *     against any property of the object or its nested object properties. That's equivalent to the\n *     simple substring match with a `string` as described above. The special property name can be\n *     overwritten, using the `anyPropertyKey` parameter.\n *     The predicate can be negated by prefixing the string with `!`.\n *     For example `{name: \"!M\"}` predicate will return an array of items which have property `name`\n *     not containing \"M\".\n *\n *     Note that a named property will match properties on the same level only, while the special\n *     `$` property will match properties on the same level or deeper. E.g. an array item like\n *     `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but\n *     **will** be matched by `{$: 'John'}`.\n *\n *   - `function(value, index, array)`: A predicate function can be used to write arbitrary filters.\n *     The function is called for each element of the array, with the element, its index, and\n *     the entire array itself as arguments.\n *\n *     The final result is an array of those elements that the predicate returned true for.\n *\n * @param {function(actual, expected)|true|false} [comparator] Comparator which is used in\n *     determining if the expected value (from the filter expression) and actual value (from\n *     the object in the array) should be considered a match.\n *\n *   Can be one of:\n *\n *   - `function(actual, expected)`:\n *     The function will be given the object value and the predicate value to compare and\n *     should return true if both values should be considered equal.\n *\n *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.\n *     This is essentially strict comparison of expected and actual.\n *\n *   - `false`: A short hand for a function which will look for a substring match in a case\n *     insensitive way. Primitive values are converted to strings. Objects are not compared against\n *     primitives, unless they have a custom `toString` method (e.g. `Date` objects).\n *\n *\n *   Defaults to `false`.\n *\n * @param {string} [anyPropertyKey] The special property name that matches against any property.\n *     By default `$`.\n *\n * @example\n   <example name=\"filter-filter\">\n     <file name=\"index.html\">\n       <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                                {name:'Mary', phone:'800-BIG-MARY'},\n                                {name:'Mike', phone:'555-4321'},\n                                {name:'Adam', phone:'555-5678'},\n                                {name:'Julie', phone:'555-8765'},\n                                {name:'Juliette', phone:'555-5678'}]\"></div>\n\n       <label>Search: <input ng-model=\"searchText\"></label>\n       <table id=\"searchTextResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:searchText\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n       <hr>\n       <label>Any: <input ng-model=\"search.$\"></label> <br>\n       <label>Name only <input ng-model=\"search.name\"></label><br>\n       <label>Phone only <input ng-model=\"search.phone\"></label><br>\n       <label>Equality <input type=\"checkbox\" ng-model=\"strict\"></label><br>\n       <table id=\"searchObjResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friendObj in friends | filter:search:strict\">\n           <td>{{friendObj.name}}</td>\n           <td>{{friendObj.phone}}</td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var expectFriendNames = function(expectedNames, key) {\n         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {\n           arr.forEach(function(wd, i) {\n             expect(wd.getText()).toMatch(expectedNames[i]);\n           });\n         });\n       };\n\n       it('should search across all fields when filtering with a string', function() {\n         var searchText = element(by.model('searchText'));\n         searchText.clear();\n         searchText.sendKeys('m');\n         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');\n\n         searchText.clear();\n         searchText.sendKeys('76');\n         expectFriendNames(['John', 'Julie'], 'friend');\n       });\n\n       it('should search in specific fields when filtering with a predicate object', function() {\n         var searchAny = element(by.model('search.$'));\n         searchAny.clear();\n         searchAny.sendKeys('i');\n         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');\n       });\n       it('should use a equal comparison when comparator is true', function() {\n         var searchName = element(by.model('search.name'));\n         var strict = element(by.model('strict'));\n         searchName.clear();\n         searchName.sendKeys('Julie');\n         strict.click();\n         expectFriendNames(['Julie'], 'friendObj');\n       });\n     </file>\n   </example>\n */\n\nfunction filterFilter() {\n  return function(array, expression, comparator, anyPropertyKey) {\n    if (!isArrayLike(array)) {\n      if (array == null) {\n        return array;\n      } else {\n        throw minErr('filter')('notarray', 'Expected array but received: {0}', array);\n      }\n    }\n\n    anyPropertyKey = anyPropertyKey || '$';\n    var expressionType = getTypeForFilter(expression);\n    var predicateFn;\n    var matchAgainstAnyProp;\n\n    switch (expressionType) {\n      case 'function':\n        predicateFn = expression;\n        break;\n      case 'boolean':\n      case 'null':\n      case 'number':\n      case 'string':\n        matchAgainstAnyProp = true;\n        // falls through\n      case 'object':\n        predicateFn = createPredicateFn(expression, comparator, anyPropertyKey, matchAgainstAnyProp);\n        break;\n      default:\n        return array;\n    }\n\n    return Array.prototype.filter.call(array, predicateFn);\n  };\n}\n\n// Helper functions for `filterFilter`\nfunction createPredicateFn(expression, comparator, anyPropertyKey, matchAgainstAnyProp) {\n  var shouldMatchPrimitives = isObject(expression) && (anyPropertyKey in expression);\n  var predicateFn;\n\n  if (comparator === true) {\n    comparator = equals;\n  } else if (!isFunction(comparator)) {\n    comparator = function(actual, expected) {\n      if (isUndefined(actual)) {\n        // No substring matching against `undefined`\n        return false;\n      }\n      if ((actual === null) || (expected === null)) {\n        // No substring matching against `null`; only match against `null`\n        return actual === expected;\n      }\n      if (isObject(expected) || (isObject(actual) && !hasCustomToString(actual))) {\n        // Should not compare primitives against objects, unless they have custom `toString` method\n        return false;\n      }\n\n      actual = lowercase('' + actual);\n      expected = lowercase('' + expected);\n      return actual.indexOf(expected) !== -1;\n    };\n  }\n\n  predicateFn = function(item) {\n    if (shouldMatchPrimitives && !isObject(item)) {\n      return deepCompare(item, expression[anyPropertyKey], comparator, anyPropertyKey, false);\n    }\n    return deepCompare(item, expression, comparator, anyPropertyKey, matchAgainstAnyProp);\n  };\n\n  return predicateFn;\n}\n\nfunction deepCompare(actual, expected, comparator, anyPropertyKey, matchAgainstAnyProp, dontMatchWholeObject) {\n  var actualType = getTypeForFilter(actual);\n  var expectedType = getTypeForFilter(expected);\n\n  if ((expectedType === 'string') && (expected.charAt(0) === '!')) {\n    return !deepCompare(actual, expected.substring(1), comparator, anyPropertyKey, matchAgainstAnyProp);\n  } else if (isArray(actual)) {\n    // In case `actual` is an array, consider it a match\n    // if ANY of it's items matches `expected`\n    return actual.some(function(item) {\n      return deepCompare(item, expected, comparator, anyPropertyKey, matchAgainstAnyProp);\n    });\n  }\n\n  switch (actualType) {\n    case 'object':\n      var key;\n      if (matchAgainstAnyProp) {\n        for (key in actual) {\n          if ((key.charAt(0) !== '$') && deepCompare(actual[key], expected, comparator, anyPropertyKey, true)) {\n            return true;\n          }\n        }\n        return dontMatchWholeObject ? false : deepCompare(actual, expected, comparator, anyPropertyKey, false);\n      } else if (expectedType === 'object') {\n        for (key in expected) {\n          var expectedVal = expected[key];\n          if (isFunction(expectedVal) || isUndefined(expectedVal)) {\n            continue;\n          }\n\n          var matchAnyProperty = key === anyPropertyKey;\n          var actualVal = matchAnyProperty ? actual : actual[key];\n          if (!deepCompare(actualVal, expectedVal, comparator, anyPropertyKey, matchAnyProperty, matchAnyProperty)) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return comparator(actual, expected);\n      }\n    case 'function':\n      return false;\n    default:\n      return comparator(actual, expected);\n  }\n}\n\n// Used for easily differentiating between `null` and actual `object`\nfunction getTypeForFilter(val) {\n  return (val === null) ? 'null' : typeof val;\n}\n\nvar MAX_DIGITS = 22;\nvar DECIMAL_SEP = '.';\nvar ZERO_CHAR = '0';\n\n/**\n * @ngdoc filter\n * @name currency\n * @kind function\n *\n * @description\n * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\n * symbol for current locale is used.\n *\n * @param {number} amount Input to filter.\n * @param {string=} symbol Currency symbol or identifier to be displayed.\n * @param {number=} fractionSize Number of decimal places to round the amount to, defaults to default max fraction size for current locale\n * @returns {string} Formatted number.\n *\n *\n * @example\n   <example module=\"currencyExample\" name=\"currency-filter\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('currencyExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.amount = 1234.56;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input type=\"number\" ng-model=\"amount\" aria-label=\"amount\"> <br>\n         default currency symbol ($): <span id=\"currency-default\">{{amount | currency}}</span><br>\n         custom currency identifier (USD$): <span id=\"currency-custom\">{{amount | currency:\"USD$\"}}</span><br>\n         no fractions (0): <span id=\"currency-no-fractions\">{{amount | currency:\"USD$\":0}}</span>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should init with 1234.56', function() {\n         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');\n         expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');\n         expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');\n       });\n       it('should update', function() {\n         if (browser.params.browser === 'safari') {\n           // Safari does not understand the minus key. See\n           // https://github.com/angular/protractor/issues/481\n           return;\n         }\n         element(by.model('amount')).clear();\n         element(by.model('amount')).sendKeys('-1234');\n         expect(element(by.id('currency-default')).getText()).toBe('-$1,234.00');\n         expect(element(by.id('currency-custom')).getText()).toBe('-USD$1,234.00');\n         expect(element(by.id('currency-no-fractions')).getText()).toBe('-USD$1,234');\n       });\n     </file>\n   </example>\n */\ncurrencyFilter.$inject = ['$locale'];\nfunction currencyFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(amount, currencySymbol, fractionSize) {\n    if (isUndefined(currencySymbol)) {\n      currencySymbol = formats.CURRENCY_SYM;\n    }\n\n    if (isUndefined(fractionSize)) {\n      fractionSize = formats.PATTERNS[1].maxFrac;\n    }\n\n    // if null or undefined pass it through\n    return (amount == null)\n        ? amount\n        : formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize).\n            replace(/\\u00A4/g, currencySymbol);\n  };\n}\n\n/**\n * @ngdoc filter\n * @name number\n * @kind function\n *\n * @description\n * Formats a number as text.\n *\n * If the input is null or undefined, it will just be returned.\n * If the input is infinite (Infinity or -Infinity), the Infinity symbol '∞' or '-∞' is returned, respectively.\n * If the input is not a number an empty string is returned.\n *\n *\n * @param {number|string} number Number to format.\n * @param {(number|string)=} fractionSize Number of decimal places to round the number to.\n * If this is not provided then the fraction size is computed from the current locale's number\n * formatting pattern. In the case of the default locale, it will be 3.\n * @returns {string} Number rounded to `fractionSize` appropriately formatted based on the current\n *                   locale (e.g., in the en_US locale it will have \".\" as the decimal separator and\n *                   include \",\" group separators after each third digit).\n *\n * @example\n   <example module=\"numberFilterExample\" name=\"number-filter\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('numberFilterExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.val = 1234.56789;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <label>Enter number: <input ng-model='val'></label><br>\n         Default formatting: <span id='number-default'>{{val | number}}</span><br>\n         No fractions: <span>{{val | number:0}}</span><br>\n         Negative number: <span>{{-val | number:4}}</span>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should format numbers', function() {\n         expect(element(by.id('number-default')).getText()).toBe('1,234.568');\n         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');\n       });\n\n       it('should update', function() {\n         element(by.model('val')).clear();\n         element(by.model('val')).sendKeys('3374.333');\n         expect(element(by.id('number-default')).getText()).toBe('3,374.333');\n         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');\n      });\n     </file>\n   </example>\n */\nnumberFilter.$inject = ['$locale'];\nfunction numberFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(number, fractionSize) {\n\n    // if null or undefined pass it through\n    return (number == null)\n        ? number\n        : formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\n                       fractionSize);\n  };\n}\n\n/**\n * Parse a number (as a string) into three components that can be used\n * for formatting the number.\n *\n * (Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/)\n *\n * @param  {string} numStr The number to parse\n * @return {object} An object describing this number, containing the following keys:\n *  - d : an array of digits containing leading zeros as necessary\n *  - i : the number of the digits in `d` that are to the left of the decimal point\n *  - e : the exponent for numbers that would need more than `MAX_DIGITS` digits in `d`\n *\n */\nfunction parse(numStr) {\n  var exponent = 0, digits, numberOfIntegerDigits;\n  var i, j, zeros;\n\n  // Decimal point?\n  if ((numberOfIntegerDigits = numStr.indexOf(DECIMAL_SEP)) > -1) {\n    numStr = numStr.replace(DECIMAL_SEP, '');\n  }\n\n  // Exponential form?\n  if ((i = numStr.search(/e/i)) > 0) {\n    // Work out the exponent.\n    if (numberOfIntegerDigits < 0) numberOfIntegerDigits = i;\n    numberOfIntegerDigits += +numStr.slice(i + 1);\n    numStr = numStr.substring(0, i);\n  } else if (numberOfIntegerDigits < 0) {\n    // There was no decimal point or exponent so it is an integer.\n    numberOfIntegerDigits = numStr.length;\n  }\n\n  // Count the number of leading zeros.\n  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */ }\n\n  if (i === (zeros = numStr.length)) {\n    // The digits are all zero.\n    digits = [0];\n    numberOfIntegerDigits = 1;\n  } else {\n    // Count the number of trailing zeros\n    zeros--;\n    while (numStr.charAt(zeros) === ZERO_CHAR) zeros--;\n\n    // Trailing zeros are insignificant so ignore them\n    numberOfIntegerDigits -= i;\n    digits = [];\n    // Convert string to array of digits without leading/trailing zeros.\n    for (j = 0; i <= zeros; i++, j++) {\n      digits[j] = +numStr.charAt(i);\n    }\n  }\n\n  // If the number overflows the maximum allowed digits then use an exponent.\n  if (numberOfIntegerDigits > MAX_DIGITS) {\n    digits = digits.splice(0, MAX_DIGITS - 1);\n    exponent = numberOfIntegerDigits - 1;\n    numberOfIntegerDigits = 1;\n  }\n\n  return { d: digits, e: exponent, i: numberOfIntegerDigits };\n}\n\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changed the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, fractionSize, minFrac, maxFrac) {\n    var digits = parsedNumber.d;\n    var fractionLen = digits.length - parsedNumber.i;\n\n    // determine fractionSize if it is not specified; `+fractionSize` converts it to a number\n    fractionSize = (isUndefined(fractionSize)) ? Math.min(Math.max(minFrac, fractionLen), maxFrac) : +fractionSize;\n\n    // The index of the digit to where rounding is to occur\n    var roundAt = fractionSize + parsedNumber.i;\n    var digit = digits[roundAt];\n\n    if (roundAt > 0) {\n      // Drop fractional digits beyond `roundAt`\n      digits.splice(Math.max(parsedNumber.i, roundAt));\n\n      // Set non-fractional digits beyond `roundAt` to 0\n      for (var j = roundAt; j < digits.length; j++) {\n        digits[j] = 0;\n      }\n    } else {\n      // We rounded to zero so reset the parsedNumber\n      fractionLen = Math.max(0, fractionLen);\n      parsedNumber.i = 1;\n      digits.length = Math.max(1, roundAt = fractionSize + 1);\n      digits[0] = 0;\n      for (var i = 1; i < roundAt; i++) digits[i] = 0;\n    }\n\n    if (digit >= 5) {\n      if (roundAt - 1 < 0) {\n        for (var k = 0; k > roundAt; k--) {\n          digits.unshift(0);\n          parsedNumber.i++;\n        }\n        digits.unshift(1);\n        parsedNumber.i++;\n      } else {\n        digits[roundAt - 1]++;\n      }\n    }\n\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);\n\n\n    // Do any carrying, e.g. a digit was rounded up to 10\n    var carry = digits.reduceRight(function(carry, d, i, digits) {\n      d = d + carry;\n      digits[i] = d % 10;\n      return Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n      digits.unshift(carry);\n      parsedNumber.i++;\n    }\n}\n\n/**\n * Format a number into a string\n * @param  {number} number       The number to format\n * @param  {{\n *           minFrac, // the minimum number of digits required in the fraction part of the number\n *           maxFrac, // the maximum number of digits required in the fraction part of the number\n *           gSize,   // number of digits in each group of separated digits\n *           lgSize,  // number of digits in the last group of digits before the decimal separator\n *           negPre,  // the string to go in front of a negative number (e.g. `-` or `(`))\n *           posPre,  // the string to go in front of a positive number\n *           negSuf,  // the string to go after a negative number (e.g. `)`)\n *           posSuf   // the string to go after a positive number\n *         }} pattern\n * @param  {string} groupSep     The string to separate groups of number (e.g. `,`)\n * @param  {string} decimalSep   The string to act as the decimal separator (e.g. `.`)\n * @param  {[type]} fractionSize The size of the fractional part of the number\n * @return {string}              The number formatted as a string\n */\nfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\n\n  if (!(isString(number) || isNumber(number)) || isNaN(number)) return '';\n\n  var isInfinity = !isFinite(number);\n  var isZero = false;\n  var numStr = Math.abs(number) + '',\n      formattedText = '',\n      parsedNumber;\n\n  if (isInfinity) {\n    formattedText = '\\u221e';\n  } else {\n    parsedNumber = parse(numStr);\n\n    roundNumber(parsedNumber, fractionSize, pattern.minFrac, pattern.maxFrac);\n\n    var digits = parsedNumber.d;\n    var integerLen = parsedNumber.i;\n    var exponent = parsedNumber.e;\n    var decimals = [];\n    isZero = digits.reduce(function(isZero, d) { return isZero && !d; }, true);\n\n    // pad zeros for small numbers\n    while (integerLen < 0) {\n      digits.unshift(0);\n      integerLen++;\n    }\n\n    // extract decimals digits\n    if (integerLen > 0) {\n      decimals = digits.splice(integerLen, digits.length);\n    } else {\n      decimals = digits;\n      digits = [0];\n    }\n\n    // format the integer digits with grouping separators\n    var groups = [];\n    if (digits.length >= pattern.lgSize) {\n      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n    }\n    while (digits.length > pattern.gSize) {\n      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n    }\n    if (digits.length) {\n      groups.unshift(digits.join(''));\n    }\n    formattedText = groups.join(groupSep);\n\n    // append the decimal digits\n    if (decimals.length) {\n      formattedText += decimalSep + decimals.join('');\n    }\n\n    if (exponent) {\n      formattedText += 'e+' + exponent;\n    }\n  }\n  if (number < 0 && !isZero) {\n    return pattern.negPre + formattedText + pattern.negSuf;\n  } else {\n    return pattern.posPre + formattedText + pattern.posSuf;\n  }\n}\n\nfunction padNumber(num, digits, trim, negWrap) {\n  var neg = '';\n  if (num < 0 || (negWrap && num <= 0)) {\n    if (negWrap) {\n      num = -num + 1;\n    } else {\n      num = -num;\n      neg = '-';\n    }\n  }\n  num = '' + num;\n  while (num.length < digits) num = ZERO_CHAR + num;\n  if (trim) {\n    num = num.substr(num.length - digits);\n  }\n  return neg + num;\n}\n\n\nfunction dateGetter(name, size, offset, trim, negWrap) {\n  offset = offset || 0;\n  return function(date) {\n    var value = date['get' + name]();\n    if (offset > 0 || value > -offset) {\n      value += offset;\n    }\n    if (value === 0 && offset === -12) value = 12;\n    return padNumber(value, size, trim, negWrap);\n  };\n}\n\nfunction dateStrGetter(name, shortForm, standAlone) {\n  return function(date, formats) {\n    var value = date['get' + name]();\n    var propPrefix = (standAlone ? 'STANDALONE' : '') + (shortForm ? 'SHORT' : '');\n    var get = uppercase(propPrefix + name);\n\n    return formats[get][value];\n  };\n}\n\nfunction timeZoneGetter(date, formats, offset) {\n  var zone = -1 * offset;\n  var paddedZone = (zone >= 0) ? '+' : '';\n\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n                padNumber(Math.abs(zone % 60), 2);\n\n  return paddedZone;\n}\n\nfunction getFirstThursdayOfYear(year) {\n    // 0 = index of January\n    var dayOfWeekOnFirst = (new Date(year, 0, 1)).getDay();\n    // 4 = index of Thursday (+1 to account for 1st = 5)\n    // 11 = index of *next* Thursday (+1 account for 1st = 12)\n    return new Date(year, 0, ((dayOfWeekOnFirst <= 4) ? 5 : 12) - dayOfWeekOnFirst);\n}\n\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(),\n      // 4 = index of Thursday\n      datetime.getDate() + (4 - datetime.getDay()));\n}\n\nfunction weekGetter(size) {\n   return function(date) {\n      var firstThurs = getFirstThursdayOfYear(date.getFullYear()),\n         thisThurs = getThursdayThisWeek(date);\n\n      var diff = +thisThurs - +firstThurs,\n         result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n\n      return padNumber(result, size);\n   };\n}\n\nfunction ampmGetter(date, formats) {\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n}\n\nfunction eraGetter(date, formats) {\n  return date.getFullYear() <= 0 ? formats.ERAS[0] : formats.ERAS[1];\n}\n\nfunction longEraGetter(date, formats) {\n  return date.getFullYear() <= 0 ? formats.ERANAMES[0] : formats.ERANAMES[1];\n}\n\nvar DATE_FORMATS = {\n  yyyy: dateGetter('FullYear', 4, 0, false, true),\n    yy: dateGetter('FullYear', 2, 0, true, true),\n     y: dateGetter('FullYear', 1, 0, false, true),\n  MMMM: dateStrGetter('Month'),\n   MMM: dateStrGetter('Month', true),\n    MM: dateGetter('Month', 2, 1),\n     M: dateGetter('Month', 1, 1),\n  LLLL: dateStrGetter('Month', false, true),\n    dd: dateGetter('Date', 2),\n     d: dateGetter('Date', 1),\n    HH: dateGetter('Hours', 2),\n     H: dateGetter('Hours', 1),\n    hh: dateGetter('Hours', 2, -12),\n     h: dateGetter('Hours', 1, -12),\n    mm: dateGetter('Minutes', 2),\n     m: dateGetter('Minutes', 1),\n    ss: dateGetter('Seconds', 2),\n     s: dateGetter('Seconds', 1),\n     // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n   sss: dateGetter('Milliseconds', 3),\n  EEEE: dateStrGetter('Day'),\n   EEE: dateStrGetter('Day', true),\n     a: ampmGetter,\n     Z: timeZoneGetter,\n    ww: weekGetter(2),\n     w: weekGetter(1),\n     G: eraGetter,\n     GG: eraGetter,\n     GGG: eraGetter,\n     GGGG: longEraGetter\n};\n\nvar DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,\n    NUMBER_STRING = /^-?\\d+$/;\n\n/**\n * @ngdoc filter\n * @name date\n * @kind function\n *\n * @description\n *   Formats `date` to a string based on the requested `format`.\n *\n *   `format` string can be composed of the following elements:\n *\n *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n *   * `'MMMM'`: Month in year (January-December)\n *   * `'MMM'`: Month in year (Jan-Dec)\n *   * `'MM'`: Month in year, padded (01-12)\n *   * `'M'`: Month in year (1-12)\n *   * `'LLLL'`: Stand-alone month in year (January-December)\n *   * `'dd'`: Day in month, padded (01-31)\n *   * `'d'`: Day in month (1-31)\n *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n *   * `'EEE'`: Day in Week, (Sun-Sat)\n *   * `'HH'`: Hour in day, padded (00-23)\n *   * `'H'`: Hour in day (0-23)\n *   * `'hh'`: Hour in AM/PM, padded (01-12)\n *   * `'h'`: Hour in AM/PM, (1-12)\n *   * `'mm'`: Minute in hour, padded (00-59)\n *   * `'m'`: Minute in hour (0-59)\n *   * `'ss'`: Second in minute, padded (00-59)\n *   * `'s'`: Second in minute (0-59)\n *   * `'sss'`: Millisecond in second, padded (000-999)\n *   * `'a'`: AM/PM marker\n *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n *   * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year\n *   * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year\n *   * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')\n *   * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')\n *\n *   `format` string can also be one of the following predefined\n *   {@link guide/i18n localizable formats}:\n *\n *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n *     (e.g. Sep 3, 2010 12:05:08 PM)\n *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)\n *   * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale\n *     (e.g. Friday, September 3, 2010)\n *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)\n *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)\n *\n *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n *   `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n *   (e.g. `\"h 'o''clock'\"`).\n *\n * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\n *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n *    specified in the string input, the time is considered to be in the local timezone.\n * @param {string=} format Formatting rules (see Description). If not specified,\n *    `mediumDate` is used.\n * @param {string=} timezone Timezone to be used for formatting. It understands UTC/GMT and the\n *    continental US time zone abbreviations, but for general use, use a time zone offset, for\n *    example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)\n *    If not specified, the timezone of the browser will be used.\n * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n *\n * @example\n   <example name=\"filter-date\">\n     <file name=\"index.html\">\n       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n           <span>{{1288323623006 | date:'medium'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:\"MM/dd/yyyy 'at' h:mma\"}}</span>:\n          <span>{{'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"}}</span><br>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should format date', function() {\n         expect(element(by.binding(\"1288323623006 | date:'medium'\")).getText()).\n            toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n         expect(element(by.binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).getText()).\n            toMatch(/2010-10-2\\d \\d{2}:\\d{2}:\\d{2} (-|\\+)?\\d{4}/);\n         expect(element(by.binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).getText()).\n            toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n         expect(element(by.binding(\"'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"\")).getText()).\n            toMatch(/10\\/2\\d\\/2010 at \\d{1,2}:\\d{2}(AM|PM)/);\n       });\n     </file>\n   </example>\n */\ndateFilter.$inject = ['$locale'];\nfunction dateFilter($locale) {\n\n\n  var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n                     // 1        2       3         4          5          6          7          8  9     10      11\n  function jsonStringToDate(string) {\n    var match;\n    if ((match = string.match(R_ISO8601_STR))) {\n      var date = new Date(0),\n          tzHour = 0,\n          tzMin  = 0,\n          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,\n          timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n      if (match[9]) {\n        tzHour = toInt(match[9] + match[10]);\n        tzMin = toInt(match[9] + match[11]);\n      }\n      dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n      var h = toInt(match[4] || 0) - tzHour;\n      var m = toInt(match[5] || 0) - tzMin;\n      var s = toInt(match[6] || 0);\n      var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n      timeSetter.call(date, h, m, s, ms);\n      return date;\n    }\n    return string;\n  }\n\n\n  return function(date, format, timezone) {\n    var text = '',\n        parts = [],\n        fn, match;\n\n    format = format || 'mediumDate';\n    format = $locale.DATETIME_FORMATS[format] || format;\n    if (isString(date)) {\n      date = NUMBER_STRING.test(date) ? toInt(date) : jsonStringToDate(date);\n    }\n\n    if (isNumber(date)) {\n      date = new Date(date);\n    }\n\n    if (!isDate(date) || !isFinite(date.getTime())) {\n      return date;\n    }\n\n    while (format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = concat(parts, match, 1);\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n      dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n      date = convertTimezoneToLocal(date, timezone, true);\n    }\n    forEach(parts, function(value) {\n      fn = DATE_FORMATS[value];\n      text += fn ? fn(date, $locale.DATETIME_FORMATS, dateTimezoneOffset)\n                 : value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n\n    return text;\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name json\n * @kind function\n *\n * @description\n *   Allows you to convert a JavaScript object into JSON string.\n *\n *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\n *   the binding is automatically converted to JSON.\n *\n * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\n * @param {number=} spacing The number of spaces to use per indentation, defaults to 2.\n * @returns {string} JSON string.\n *\n *\n * @example\n   <example name=\"filter-json\">\n     <file name=\"index.html\">\n       <pre id=\"default-spacing\">{{ {'name':'value'} | json }}</pre>\n       <pre id=\"custom-spacing\">{{ {'name':'value'} | json:4 }}</pre>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should jsonify filtered objects', function() {\n         expect(element(by.id('default-spacing')).getText()).toMatch(/\\{\\n {2}\"name\": ?\"value\"\\n}/);\n         expect(element(by.id('custom-spacing')).getText()).toMatch(/\\{\\n {4}\"name\": ?\"value\"\\n}/);\n       });\n     </file>\n   </example>\n *\n */\nfunction jsonFilter() {\n  return function(object, spacing) {\n    if (isUndefined(spacing)) {\n        spacing = 2;\n    }\n    return toJson(object, spacing);\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name lowercase\n * @kind function\n * @description\n * Converts string to lowercase.\n * @see angular.lowercase\n */\nvar lowercaseFilter = valueFn(lowercase);\n\n\n/**\n * @ngdoc filter\n * @name uppercase\n * @kind function\n * @description\n * Converts string to uppercase.\n * @see angular.uppercase\n */\nvar uppercaseFilter = valueFn(uppercase);\n\n/**\n * @ngdoc filter\n * @name limitTo\n * @kind function\n *\n * @description\n * Creates a new array or string containing only a specified number of elements. The elements are\n * taken from either the beginning or the end of the source array, string or number, as specified by\n * the value and sign (positive or negative) of `limit`. Other array-like objects are also supported\n * (e.g. array subclasses, NodeLists, jqLite/jQuery collections etc). If a number is used as input,\n * it is converted to a string.\n *\n * @param {Array|ArrayLike|string|number} input - Array/array-like, string or number to be limited.\n * @param {string|number} limit - The length of the returned array or string. If the `limit` number\n *     is positive, `limit` number of items from the beginning of the source array/string are copied.\n *     If the number is negative, `limit` number  of items from the end of the source array/string\n *     are copied. The `limit` will be trimmed if it exceeds `array.length`. If `limit` is undefined,\n *     the input will be returned unchanged.\n * @param {(string|number)=} begin - Index at which to begin limitation. As a negative index,\n *     `begin` indicates an offset from the end of `input`. Defaults to `0`.\n * @returns {Array|string} A new sub-array or substring of length `limit` or less if the input had\n *     less than `limit` elements.\n *\n * @example\n   <example module=\"limitToExample\" name=\"limit-to-filter\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('limitToExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.numbers = [1,2,3,4,5,6,7,8,9];\n             $scope.letters = \"abcdefghi\";\n             $scope.longNumber = 2345432342;\n             $scope.numLimit = 3;\n             $scope.letterLimit = 3;\n             $scope.longNumberLimit = 3;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <label>\n            Limit {{numbers}} to:\n            <input type=\"number\" step=\"1\" ng-model=\"numLimit\">\n         </label>\n         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\n         <label>\n            Limit {{letters}} to:\n            <input type=\"number\" step=\"1\" ng-model=\"letterLimit\">\n         </label>\n         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\n         <label>\n            Limit {{longNumber}} to:\n            <input type=\"number\" step=\"1\" ng-model=\"longNumberLimit\">\n         </label>\n         <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var numLimitInput = element(by.model('numLimit'));\n       var letterLimitInput = element(by.model('letterLimit'));\n       var longNumberLimitInput = element(by.model('longNumberLimit'));\n       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));\n       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));\n       var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));\n\n       it('should limit the number array to first three items', function() {\n         expect(numLimitInput.getAttribute('value')).toBe('3');\n         expect(letterLimitInput.getAttribute('value')).toBe('3');\n         expect(longNumberLimitInput.getAttribute('value')).toBe('3');\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');\n         expect(limitedLetters.getText()).toEqual('Output letters: abc');\n         expect(limitedLongNumber.getText()).toEqual('Output long number: 234');\n       });\n\n       // There is a bug in safari and protractor that doesn't like the minus key\n       // it('should update the output when -3 is entered', function() {\n       //   numLimitInput.clear();\n       //   numLimitInput.sendKeys('-3');\n       //   letterLimitInput.clear();\n       //   letterLimitInput.sendKeys('-3');\n       //   longNumberLimitInput.clear();\n       //   longNumberLimitInput.sendKeys('-3');\n       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');\n       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');\n       //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');\n       // });\n\n       it('should not exceed the maximum size of input array', function() {\n         numLimitInput.clear();\n         numLimitInput.sendKeys('100');\n         letterLimitInput.clear();\n         letterLimitInput.sendKeys('100');\n         longNumberLimitInput.clear();\n         longNumberLimitInput.sendKeys('100');\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');\n         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');\n         expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');\n       });\n     </file>\n   </example>\n*/\nfunction limitToFilter() {\n  return function(input, limit, begin) {\n    if (Math.abs(Number(limit)) === Infinity) {\n      limit = Number(limit);\n    } else {\n      limit = toInt(limit);\n    }\n    if (isNumberNaN(limit)) return input;\n\n    if (isNumber(input)) input = input.toString();\n    if (!isArrayLike(input)) return input;\n\n    begin = (!begin || isNaN(begin)) ? 0 : toInt(begin);\n    begin = (begin < 0) ? Math.max(0, input.length + begin) : begin;\n\n    if (limit >= 0) {\n      return sliceFn(input, begin, begin + limit);\n    } else {\n      if (begin === 0) {\n        return sliceFn(input, limit, input.length);\n      } else {\n        return sliceFn(input, Math.max(0, begin + limit), begin);\n      }\n    }\n  };\n}\n\nfunction sliceFn(input, begin, end) {\n  if (isString(input)) return input.slice(begin, end);\n\n  return slice.call(input, begin, end);\n}\n\n/**\n * @ngdoc filter\n * @name orderBy\n * @kind function\n *\n * @description\n * Returns an array containing the items from the specified `collection`, ordered by a `comparator`\n * function based on the values computed using the `expression` predicate.\n *\n * For example, `[{id: 'foo'}, {id: 'bar'}] | orderBy:'id'` would result in\n * `[{id: 'bar'}, {id: 'foo'}]`.\n *\n * The `collection` can be an Array or array-like object (e.g. NodeList, jQuery object, TypedArray,\n * String, etc).\n *\n * The `expression` can be a single predicate, or a list of predicates each serving as a tie-breaker\n * for the preceding one. The `expression` is evaluated against each item and the output is used\n * for comparing with other items.\n *\n * You can change the sorting order by setting `reverse` to `true`. By default, items are sorted in\n * ascending order.\n *\n * The comparison is done using the `comparator` function. If none is specified, a default, built-in\n * comparator is used (see below for details - in a nutshell, it compares numbers numerically and\n * strings alphabetically).\n *\n * ### Under the hood\n *\n * Ordering the specified `collection` happens in two phases:\n *\n * 1. All items are passed through the predicate (or predicates), and the returned values are saved\n *    along with their type (`string`, `number` etc). For example, an item `{label: 'foo'}`, passed\n *    through a predicate that extracts the value of the `label` property, would be transformed to:\n *    ```\n *    {\n *      value: 'foo',\n *      type: 'string',\n *      index: ...\n *    }\n *    ```\n * 2. The comparator function is used to sort the items, based on the derived values, types and\n *    indices.\n *\n * If you use a custom comparator, it will be called with pairs of objects of the form\n * `{value: ..., type: '...', index: ...}` and is expected to return `0` if the objects are equal\n * (as far as the comparator is concerned), `-1` if the 1st one should be ranked higher than the\n * second, or `1` otherwise.\n *\n * In order to ensure that the sorting will be deterministic across platforms, if none of the\n * specified predicates can distinguish between two items, `orderBy` will automatically introduce a\n * dummy predicate that returns the item's index as `value`.\n * (If you are using a custom comparator, make sure it can handle this predicate as well.)\n *\n * Finally, in an attempt to simplify things, if a predicate returns an object as the extracted\n * value for an item, `orderBy` will try to convert that object to a primitive value, before passing\n * it to the comparator. The following rules govern the conversion:\n *\n * 1. If the object has a `valueOf()` method that returns a primitive, its return value will be\n *    used instead.<br />\n *    (If the object has a `valueOf()` method that returns another object, then the returned object\n *    will be used in subsequent steps.)\n * 2. If the object has a custom `toString()` method (i.e. not the one inherited from `Object`) that\n *    returns a primitive, its return value will be used instead.<br />\n *    (If the object has a `toString()` method that returns another object, then the returned object\n *    will be used in subsequent steps.)\n * 3. No conversion; the object itself is used.\n *\n * ### The default comparator\n *\n * The default, built-in comparator should be sufficient for most usecases. In short, it compares\n * numbers numerically, strings alphabetically (and case-insensitively), for objects falls back to\n * using their index in the original collection, and sorts values of different types by type.\n *\n * More specifically, it follows these steps to determine the relative order of items:\n *\n * 1. If the compared values are of different types, compare the types themselves alphabetically.\n * 2. If both values are of type `string`, compare them alphabetically in a case- and\n *    locale-insensitive way.\n * 3. If both values are objects, compare their indices instead.\n * 4. Otherwise, return:\n *    -  `0`, if the values are equal (by strict equality comparison, i.e. using `===`).\n *    - `-1`, if the 1st value is \"less than\" the 2nd value (compared using the `<` operator).\n *    -  `1`, otherwise.\n *\n * **Note:** If you notice numbers not being sorted as expected, make sure they are actually being\n *           saved as numbers and not strings.\n * **Note:** For the purpose of sorting, `null` values are treated as the string `'null'` (i.e.\n *           `type: 'string'`, `value: 'null'`). This may cause unexpected sort order relative to\n *           other values.\n *\n * @param {Array|ArrayLike} collection - The collection (array or array-like object) to sort.\n * @param {(Function|string|Array.<Function|string>)=} expression - A predicate (or list of\n *    predicates) to be used by the comparator to determine the order of elements.\n *\n *    Can be one of:\n *\n *    - `Function`: A getter function. This function will be called with each item as argument and\n *      the return value will be used for sorting.\n *    - `string`: An Angular expression. This expression will be evaluated against each item and the\n *      result will be used for sorting. For example, use `'label'` to sort by a property called\n *      `label` or `'label.substring(0, 3)'` to sort by the first 3 characters of the `label`\n *      property.<br />\n *      (The result of a constant expression is interpreted as a property name to be used for\n *      comparison. For example, use `'\"special name\"'` (note the extra pair of quotes) to sort by a\n *      property called `special name`.)<br />\n *      An expression can be optionally prefixed with `+` or `-` to control the sorting direction,\n *      ascending or descending. For example, `'+label'` or `'-label'`. If no property is provided,\n *      (e.g. `'+'` or `'-'`), the collection element itself is used in comparisons.\n *    - `Array`: An array of function and/or string predicates. If a predicate cannot determine the\n *      relative order of two items, the next predicate is used as a tie-breaker.\n *\n * **Note:** If the predicate is missing or empty then it defaults to `'+'`.\n *\n * @param {boolean=} reverse - If `true`, reverse the sorting order.\n * @param {(Function)=} comparator - The comparator function used to determine the relative order of\n *    value pairs. If omitted, the built-in comparator will be used.\n *\n * @returns {Array} - The sorted array.\n *\n *\n * @example\n * ### Ordering a table with `ngRepeat`\n *\n * The example below demonstrates a simple {@link ngRepeat ngRepeat}, where the data is sorted by\n * age in descending order (expression is set to `'-age'`). The `comparator` is not set, which means\n * it defaults to the built-in comparator.\n *\n   <example name=\"orderBy-static\" module=\"orderByExample1\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <table class=\"friends\">\n           <tr>\n             <th>Name</th>\n             <th>Phone Number</th>\n             <th>Age</th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:'-age'\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('orderByExample1', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.friends = [\n             {name: 'John',   phone: '555-1212',  age: 10},\n             {name: 'Mary',   phone: '555-9876',  age: 19},\n             {name: 'Mike',   phone: '555-4321',  age: 21},\n             {name: 'Adam',   phone: '555-5678',  age: 35},\n             {name: 'Julie',  phone: '555-8765',  age: 29}\n           ];\n         }]);\n     </file>\n     <file name=\"style.css\">\n       .friends {\n         border-collapse: collapse;\n       }\n\n       .friends th {\n         border-bottom: 1px solid;\n       }\n       .friends td, .friends th {\n         border-left: 1px solid;\n         padding: 5px 10px;\n       }\n       .friends td:first-child, .friends th:first-child {\n         border-left: none;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       // Element locators\n       var names = element.all(by.repeater('friends').column('friend.name'));\n\n       it('should sort friends by age in reverse order', function() {\n         expect(names.get(0).getText()).toBe('Adam');\n         expect(names.get(1).getText()).toBe('Julie');\n         expect(names.get(2).getText()).toBe('Mike');\n         expect(names.get(3).getText()).toBe('Mary');\n         expect(names.get(4).getText()).toBe('John');\n       });\n     </file>\n   </example>\n * <hr />\n *\n * @example\n * ### Changing parameters dynamically\n *\n * All parameters can be changed dynamically. The next example shows how you can make the columns of\n * a table sortable, by binding the `expression` and `reverse` parameters to scope properties.\n *\n   <example name=\"orderBy-dynamic\" module=\"orderByExample2\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>\n         <hr/>\n         <button ng-click=\"propertyName = null; reverse = false\">Set to unsorted</button>\n         <hr/>\n         <table class=\"friends\">\n           <tr>\n             <th>\n               <button ng-click=\"sortBy('name')\">Name</button>\n               <span class=\"sortorder\" ng-show=\"propertyName === 'name'\" ng-class=\"{reverse: reverse}\"></span>\n             </th>\n             <th>\n               <button ng-click=\"sortBy('phone')\">Phone Number</button>\n               <span class=\"sortorder\" ng-show=\"propertyName === 'phone'\" ng-class=\"{reverse: reverse}\"></span>\n             </th>\n             <th>\n               <button ng-click=\"sortBy('age')\">Age</button>\n               <span class=\"sortorder\" ng-show=\"propertyName === 'age'\" ng-class=\"{reverse: reverse}\"></span>\n             </th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:propertyName:reverse\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('orderByExample2', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           var friends = [\n             {name: 'John',   phone: '555-1212',  age: 10},\n             {name: 'Mary',   phone: '555-9876',  age: 19},\n             {name: 'Mike',   phone: '555-4321',  age: 21},\n             {name: 'Adam',   phone: '555-5678',  age: 35},\n             {name: 'Julie',  phone: '555-8765',  age: 29}\n           ];\n\n           $scope.propertyName = 'age';\n           $scope.reverse = true;\n           $scope.friends = friends;\n\n           $scope.sortBy = function(propertyName) {\n             $scope.reverse = ($scope.propertyName === propertyName) ? !$scope.reverse : false;\n             $scope.propertyName = propertyName;\n           };\n         }]);\n     </file>\n     <file name=\"style.css\">\n       .friends {\n         border-collapse: collapse;\n       }\n\n       .friends th {\n         border-bottom: 1px solid;\n       }\n       .friends td, .friends th {\n         border-left: 1px solid;\n         padding: 5px 10px;\n       }\n       .friends td:first-child, .friends th:first-child {\n         border-left: none;\n       }\n\n       .sortorder:after {\n         content: '\\25b2';   // BLACK UP-POINTING TRIANGLE\n       }\n       .sortorder.reverse:after {\n         content: '\\25bc';   // BLACK DOWN-POINTING TRIANGLE\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       // Element locators\n       var unsortButton = element(by.partialButtonText('unsorted'));\n       var nameHeader = element(by.partialButtonText('Name'));\n       var phoneHeader = element(by.partialButtonText('Phone'));\n       var ageHeader = element(by.partialButtonText('Age'));\n       var firstName = element(by.repeater('friends').column('friend.name').row(0));\n       var lastName = element(by.repeater('friends').column('friend.name').row(4));\n\n       it('should sort friends by some property, when clicking on the column header', function() {\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n\n         phoneHeader.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Mary');\n\n         nameHeader.click();\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('Mike');\n\n         ageHeader.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Adam');\n       });\n\n       it('should sort friends in reverse order, when clicking on the same column', function() {\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n\n         ageHeader.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Adam');\n\n         ageHeader.click();\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n       });\n\n       it('should restore the original order, when clicking \"Set to unsorted\"', function() {\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n\n         unsortButton.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Julie');\n       });\n     </file>\n   </example>\n * <hr />\n *\n * @example\n * ### Using `orderBy` inside a controller\n *\n * It is also possible to call the `orderBy` filter manually, by injecting `orderByFilter`, and\n * calling it with the desired parameters. (Alternatively, you could inject the `$filter` factory\n * and retrieve the `orderBy` filter with `$filter('orderBy')`.)\n *\n   <example name=\"orderBy-call-manually\" module=\"orderByExample3\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>\n         <hr/>\n         <button ng-click=\"sortBy(null)\">Set to unsorted</button>\n         <hr/>\n         <table class=\"friends\">\n           <tr>\n             <th>\n               <button ng-click=\"sortBy('name')\">Name</button>\n               <span class=\"sortorder\" ng-show=\"propertyName === 'name'\" ng-class=\"{reverse: reverse}\"></span>\n             </th>\n             <th>\n               <button ng-click=\"sortBy('phone')\">Phone Number</button>\n               <span class=\"sortorder\" ng-show=\"propertyName === 'phone'\" ng-class=\"{reverse: reverse}\"></span>\n             </th>\n             <th>\n               <button ng-click=\"sortBy('age')\">Age</button>\n               <span class=\"sortorder\" ng-show=\"propertyName === 'age'\" ng-class=\"{reverse: reverse}\"></span>\n             </th>\n           </tr>\n           <tr ng-repeat=\"friend in friends\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('orderByExample3', [])\n         .controller('ExampleController', ['$scope', 'orderByFilter', function($scope, orderBy) {\n           var friends = [\n             {name: 'John',   phone: '555-1212',  age: 10},\n             {name: 'Mary',   phone: '555-9876',  age: 19},\n             {name: 'Mike',   phone: '555-4321',  age: 21},\n             {name: 'Adam',   phone: '555-5678',  age: 35},\n             {name: 'Julie',  phone: '555-8765',  age: 29}\n           ];\n\n           $scope.propertyName = 'age';\n           $scope.reverse = true;\n           $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);\n\n           $scope.sortBy = function(propertyName) {\n             $scope.reverse = (propertyName !== null && $scope.propertyName === propertyName)\n                 ? !$scope.reverse : false;\n             $scope.propertyName = propertyName;\n             $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);\n           };\n         }]);\n     </file>\n     <file name=\"style.css\">\n       .friends {\n         border-collapse: collapse;\n       }\n\n       .friends th {\n         border-bottom: 1px solid;\n       }\n       .friends td, .friends th {\n         border-left: 1px solid;\n         padding: 5px 10px;\n       }\n       .friends td:first-child, .friends th:first-child {\n         border-left: none;\n       }\n\n       .sortorder:after {\n         content: '\\25b2';   // BLACK UP-POINTING TRIANGLE\n       }\n       .sortorder.reverse:after {\n         content: '\\25bc';   // BLACK DOWN-POINTING TRIANGLE\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       // Element locators\n       var unsortButton = element(by.partialButtonText('unsorted'));\n       var nameHeader = element(by.partialButtonText('Name'));\n       var phoneHeader = element(by.partialButtonText('Phone'));\n       var ageHeader = element(by.partialButtonText('Age'));\n       var firstName = element(by.repeater('friends').column('friend.name').row(0));\n       var lastName = element(by.repeater('friends').column('friend.name').row(4));\n\n       it('should sort friends by some property, when clicking on the column header', function() {\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n\n         phoneHeader.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Mary');\n\n         nameHeader.click();\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('Mike');\n\n         ageHeader.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Adam');\n       });\n\n       it('should sort friends in reverse order, when clicking on the same column', function() {\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n\n         ageHeader.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Adam');\n\n         ageHeader.click();\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n       });\n\n       it('should restore the original order, when clicking \"Set to unsorted\"', function() {\n         expect(firstName.getText()).toBe('Adam');\n         expect(lastName.getText()).toBe('John');\n\n         unsortButton.click();\n         expect(firstName.getText()).toBe('John');\n         expect(lastName.getText()).toBe('Julie');\n       });\n     </file>\n   </example>\n * <hr />\n *\n * @example\n * ### Using a custom comparator\n *\n * If you have very specific requirements about the way items are sorted, you can pass your own\n * comparator function. For example, you might need to compare some strings in a locale-sensitive\n * way. (When specifying a custom comparator, you also need to pass a value for the `reverse`\n * argument - passing `false` retains the default sorting order, i.e. ascending.)\n *\n   <example name=\"orderBy-custom-comparator\" module=\"orderByExample4\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <div class=\"friends-container custom-comparator\">\n           <h3>Locale-sensitive Comparator</h3>\n           <table class=\"friends\">\n             <tr>\n               <th>Name</th>\n               <th>Favorite Letter</th>\n             </tr>\n             <tr ng-repeat=\"friend in friends | orderBy:'favoriteLetter':false:localeSensitiveComparator\">\n               <td>{{friend.name}}</td>\n               <td>{{friend.favoriteLetter}}</td>\n             </tr>\n           </table>\n         </div>\n         <div class=\"friends-container default-comparator\">\n           <h3>Default Comparator</h3>\n           <table class=\"friends\">\n             <tr>\n               <th>Name</th>\n               <th>Favorite Letter</th>\n             </tr>\n             <tr ng-repeat=\"friend in friends | orderBy:'favoriteLetter'\">\n               <td>{{friend.name}}</td>\n               <td>{{friend.favoriteLetter}}</td>\n             </tr>\n           </table>\n         </div>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('orderByExample4', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.friends = [\n             {name: 'John',   favoriteLetter: 'Ä'},\n             {name: 'Mary',   favoriteLetter: 'Ü'},\n             {name: 'Mike',   favoriteLetter: 'Ö'},\n             {name: 'Adam',   favoriteLetter: 'H'},\n             {name: 'Julie',  favoriteLetter: 'Z'}\n           ];\n\n           $scope.localeSensitiveComparator = function(v1, v2) {\n             // If we don't get strings, just compare by index\n             if (v1.type !== 'string' || v2.type !== 'string') {\n               return (v1.index < v2.index) ? -1 : 1;\n             }\n\n             // Compare strings alphabetically, taking locale into account\n             return v1.value.localeCompare(v2.value);\n           };\n         }]);\n     </file>\n     <file name=\"style.css\">\n       .friends-container {\n         display: inline-block;\n         margin: 0 30px;\n       }\n\n       .friends {\n         border-collapse: collapse;\n       }\n\n       .friends th {\n         border-bottom: 1px solid;\n       }\n       .friends td, .friends th {\n         border-left: 1px solid;\n         padding: 5px 10px;\n       }\n       .friends td:first-child, .friends th:first-child {\n         border-left: none;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       // Element locators\n       var container = element(by.css('.custom-comparator'));\n       var names = container.all(by.repeater('friends').column('friend.name'));\n\n       it('should sort friends by favorite letter (in correct alphabetical order)', function() {\n         expect(names.get(0).getText()).toBe('John');\n         expect(names.get(1).getText()).toBe('Adam');\n         expect(names.get(2).getText()).toBe('Mike');\n         expect(names.get(3).getText()).toBe('Mary');\n         expect(names.get(4).getText()).toBe('Julie');\n       });\n     </file>\n   </example>\n *\n */\norderByFilter.$inject = ['$parse'];\nfunction orderByFilter($parse) {\n  return function(array, sortPredicate, reverseOrder, compareFn) {\n\n    if (array == null) return array;\n    if (!isArrayLike(array)) {\n      throw minErr('orderBy')('notarray', 'Expected array but received: {0}', array);\n    }\n\n    if (!isArray(sortPredicate)) { sortPredicate = [sortPredicate]; }\n    if (sortPredicate.length === 0) { sortPredicate = ['+']; }\n\n    var predicates = processPredicates(sortPredicate);\n\n    var descending = reverseOrder ? -1 : 1;\n\n    // Define the `compare()` function. Use a default comparator if none is specified.\n    var compare = isFunction(compareFn) ? compareFn : defaultCompare;\n\n    // The next three lines are a version of a Swartzian Transform idiom from Perl\n    // (sometimes called the Decorate-Sort-Undecorate idiom)\n    // See https://en.wikipedia.org/wiki/Schwartzian_transform\n    var compareValues = Array.prototype.map.call(array, getComparisonObject);\n    compareValues.sort(doComparison);\n    array = compareValues.map(function(item) { return item.value; });\n\n    return array;\n\n    function getComparisonObject(value, index) {\n      // NOTE: We are adding an extra `tieBreaker` value based on the element's index.\n      // This will be used to keep the sort stable when none of the input predicates can\n      // distinguish between two elements.\n      return {\n        value: value,\n        tieBreaker: {value: index, type: 'number', index: index},\n        predicateValues: predicates.map(function(predicate) {\n          return getPredicateValue(predicate.get(value), index);\n        })\n      };\n    }\n\n    function doComparison(v1, v2) {\n      for (var i = 0, ii = predicates.length; i < ii; i++) {\n        var result = compare(v1.predicateValues[i], v2.predicateValues[i]);\n        if (result) {\n          return result * predicates[i].descending * descending;\n        }\n      }\n\n      return compare(v1.tieBreaker, v2.tieBreaker) * descending;\n    }\n  };\n\n  function processPredicates(sortPredicates) {\n    return sortPredicates.map(function(predicate) {\n      var descending = 1, get = identity;\n\n      if (isFunction(predicate)) {\n        get = predicate;\n      } else if (isString(predicate)) {\n        if ((predicate.charAt(0) === '+' || predicate.charAt(0) === '-')) {\n          descending = predicate.charAt(0) === '-' ? -1 : 1;\n          predicate = predicate.substring(1);\n        }\n        if (predicate !== '') {\n          get = $parse(predicate);\n          if (get.constant) {\n            var key = get();\n            get = function(value) { return value[key]; };\n          }\n        }\n      }\n      return {get: get, descending: descending};\n    });\n  }\n\n  function isPrimitive(value) {\n    switch (typeof value) {\n      case 'number': /* falls through */\n      case 'boolean': /* falls through */\n      case 'string':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function objectValue(value) {\n    // If `valueOf` is a valid function use that\n    if (isFunction(value.valueOf)) {\n      value = value.valueOf();\n      if (isPrimitive(value)) return value;\n    }\n    // If `toString` is a valid function and not the one from `Object.prototype` use that\n    if (hasCustomToString(value)) {\n      value = value.toString();\n      if (isPrimitive(value)) return value;\n    }\n\n    return value;\n  }\n\n  function getPredicateValue(value, index) {\n    var type = typeof value;\n    if (value === null) {\n      type = 'string';\n      value = 'null';\n    } else if (type === 'object') {\n      value = objectValue(value);\n    }\n    return {value: value, type: type, index: index};\n  }\n\n  function defaultCompare(v1, v2) {\n    var result = 0;\n    var type1 = v1.type;\n    var type2 = v2.type;\n\n    if (type1 === type2) {\n      var value1 = v1.value;\n      var value2 = v2.value;\n\n      if (type1 === 'string') {\n        // Compare strings case-insensitively\n        value1 = value1.toLowerCase();\n        value2 = value2.toLowerCase();\n      } else if (type1 === 'object') {\n        // For basic objects, use the position of the object\n        // in the collection instead of the value\n        if (isObject(value1)) value1 = v1.index;\n        if (isObject(value2)) value2 = v2.index;\n      }\n\n      if (value1 !== value2) {\n        result = value1 < value2 ? -1 : 1;\n      }\n    } else {\n      result = type1 < type2 ? -1 : 1;\n    }\n\n    return result;\n  }\n}\n\nfunction ngDirective(directive) {\n  if (isFunction(directive)) {\n    directive = {\n      link: directive\n    };\n  }\n  directive.restrict = directive.restrict || 'AC';\n  return valueFn(directive);\n}\n\n/**\n * @ngdoc directive\n * @name a\n * @restrict E\n *\n * @description\n * Modifies the default behavior of the html a tag so that the default action is prevented when\n * the href attribute is empty.\n *\n * For dynamically creating `href` attributes for a tags, see the {@link ng.ngHref `ngHref`} directive.\n */\nvar htmlAnchorDirective = valueFn({\n  restrict: 'E',\n  compile: function(element, attr) {\n    if (!attr.href && !attr.xlinkHref) {\n      return function(scope, element) {\n        // If the linked element is not an anchor tag anymore, do nothing\n        if (element[0].nodeName.toLowerCase() !== 'a') return;\n\n        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n        var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?\n                   'xlink:href' : 'href';\n        element.on('click', function(event) {\n          // if we have no href url, then don't navigate anywhere.\n          if (!element.attr(href)) {\n            event.preventDefault();\n          }\n        });\n      };\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngHref\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in an href attribute will\n * make the link go to the wrong URL if the user clicks it before\n * Angular has a chance to replace the `{{hash}}` markup with its\n * value. Until Angular replaces the markup the link will be broken\n * and will most likely return a 404 error. The `ngHref` directive\n * solves this problem.\n *\n * The wrong way to write it:\n * ```html\n * <a href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n * ```\n *\n * @element A\n * @param {template} ngHref any string which can contain `{{}}` markup.\n *\n * @example\n * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes\n * in links and their different behaviors:\n    <example name=\"ng-href\">\n      <file name=\"index.html\">\n        <input ng-model=\"value\" /><br />\n        <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n        <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n        <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n        <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n        <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n        <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should execute ng-click but not reload when href without value', function() {\n          element(by.id('link-1')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('1');\n          expect(element(by.id('link-1')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when href empty string', function() {\n          element(by.id('link-2')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('2');\n          expect(element(by.id('link-2')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click and change url when ng-href specified', function() {\n          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\\/123$/);\n\n          element(by.id('link-3')).click();\n\n          // At this point, we navigate away from an Angular page, so we need\n          // to use browser.driver to get the base webdriver.\n\n          browser.wait(function() {\n            return browser.driver.getCurrentUrl().then(function(url) {\n              return url.match(/\\/123$/);\n            });\n          }, 5000, 'page should navigate to /123');\n        });\n\n        it('should execute ng-click but not reload when href empty string and name specified', function() {\n          element(by.id('link-4')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('4');\n          expect(element(by.id('link-4')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when no href but name specified', function() {\n          element(by.id('link-5')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('5');\n          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);\n        });\n\n        it('should only change url when only ng-href', function() {\n          element(by.model('value')).clear();\n          element(by.model('value')).sendKeys('6');\n          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\\/6$/);\n\n          element(by.id('link-6')).click();\n\n          // At this point, we navigate away from an Angular page, so we need\n          // to use browser.driver to get the base webdriver.\n          browser.wait(function() {\n            return browser.driver.getCurrentUrl().then(function(url) {\n              return url.match(/\\/6$/);\n            });\n          }, 5000, 'page should navigate to /6');\n        });\n      </file>\n    </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngSrc\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrc` directive solves this problem.\n *\n * The buggy way to write it:\n * ```html\n * <img src=\"http://www.gravatar.com/avatar/{{hash}}\" alt=\"Description\"/>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\" alt=\"Description\" />\n * ```\n *\n * @element IMG\n * @param {template} ngSrc any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ngSrcset\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrcset` directive solves this problem.\n *\n * The buggy way to write it:\n * ```html\n * <img srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\" alt=\"Description\"/>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <img ng-srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\" alt=\"Description\" />\n * ```\n *\n * @element IMG\n * @param {template} ngSrcset any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ngDisabled\n * @restrict A\n * @priority 100\n *\n * @description\n *\n * This directive sets the `disabled` attribute on the element (typically a form control,\n * e.g. `input`, `button`, `select` etc.) if the\n * {@link guide/expression expression} inside `ngDisabled` evaluates to truthy.\n *\n * A special directive is necessary because we cannot use interpolation inside the `disabled`\n * attribute. See the {@link guide/interpolation interpolation guide} for more info.\n *\n * @example\n    <example name=\"ng-disabled\">\n      <file name=\"index.html\">\n        <label>Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"></label><br/>\n        <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle button', function() {\n          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();\n          element(by.model('checked')).click();\n          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,\n *     then the `disabled` attribute will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngChecked\n * @restrict A\n * @priority 100\n *\n * @description\n * Sets the `checked` attribute on the element, if the expression inside `ngChecked` is truthy.\n *\n * Note that this directive should not be used together with {@link ngModel `ngModel`},\n * as this can lead to unexpected behavior.\n *\n * A special directive is necessary because we cannot use interpolation inside the `checked`\n * attribute. See the {@link guide/interpolation interpolation guide} for more info.\n *\n * @example\n    <example name=\"ng-checked\">\n      <file name=\"index.html\">\n        <label>Check me to check both: <input type=\"checkbox\" ng-model=\"master\"></label><br/>\n        <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\" aria-label=\"Slave input\">\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should check both checkBoxes', function() {\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();\n          element(by.model('master')).click();\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,\n *     then the `checked` attribute will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngReadonly\n * @restrict A\n * @priority 100\n *\n * @description\n *\n * Sets the `readonly` attribute on the element, if the expression inside `ngReadonly` is truthy.\n * Note that `readonly` applies only to `input` elements with specific types. [See the input docs on\n * MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly) for more information.\n *\n * A special directive is necessary because we cannot use interpolation inside the `readonly`\n * attribute. See the {@link guide/interpolation interpolation guide} for more info.\n *\n * @example\n    <example name=\"ng-readonly\">\n      <file name=\"index.html\">\n        <label>Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"></label><br/>\n        <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\" aria-label=\"Readonly field\" />\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle readonly attr', function() {\n          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeFalsy();\n          element(by.model('checked')).click();\n          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,\n *     then special attribute \"readonly\" will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngSelected\n * @restrict A\n * @priority 100\n *\n * @description\n *\n * Sets the `selected` attribute on the element, if the expression inside `ngSelected` is truthy.\n *\n * A special directive is necessary because we cannot use interpolation inside the `selected`\n * attribute. See the {@link guide/interpolation interpolation guide} for more info.\n *\n * <div class=\"alert alert-warning\">\n *   **Note:** `ngSelected` does not interact with the `select` and `ngModel` directives, it only\n *   sets the `selected` attribute on the element. If you are using `ngModel` on the select, you\n *   should not use `ngSelected` on the options, as `ngModel` will set the select value and\n *   selected options.\n * </div>\n *\n * @example\n    <example name=\"ng-selected\">\n      <file name=\"index.html\">\n        <label>Check me to select: <input type=\"checkbox\" ng-model=\"selected\"></label><br/>\n        <select aria-label=\"ngSelected demo\">\n          <option>Hello!</option>\n          <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n        </select>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should select Greetings!', function() {\n          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();\n          element(by.model('selected')).click();\n          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element OPTION\n * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,\n *     then special attribute \"selected\" will be set on the element\n */\n\n/**\n * @ngdoc directive\n * @name ngOpen\n * @restrict A\n * @priority 100\n *\n * @description\n *\n * Sets the `open` attribute on the element, if the expression inside `ngOpen` is truthy.\n *\n * A special directive is necessary because we cannot use interpolation inside the `open`\n * attribute. See the {@link guide/interpolation interpolation guide} for more info.\n *\n * ## A note about browser compatibility\n *\n * Edge, Firefox, and Internet Explorer do not support the `details` element, it is\n * recommended to use {@link ng.ngShow} and {@link ng.ngHide} instead.\n *\n * @example\n     <example name=\"ng-open\">\n       <file name=\"index.html\">\n         <label>Check me check multiple: <input type=\"checkbox\" ng-model=\"open\"></label><br/>\n         <details id=\"details\" ng-open=\"open\">\n            <summary>Show/Hide me</summary>\n         </details>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should toggle open', function() {\n           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();\n           element(by.model('open')).click();\n           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();\n         });\n       </file>\n     </example>\n *\n * @element DETAILS\n * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,\n *     then special attribute \"open\" will be set on the element\n */\n\nvar ngAttributeAliasDirectives = {};\n\n// boolean attrs are evaluated\nforEach(BOOLEAN_ATTR, function(propName, attrName) {\n  // binding to multiple is not supported\n  if (propName === 'multiple') return;\n\n  function defaultLinkFn(scope, element, attr) {\n    scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\n      attr.$set(attrName, !!value);\n    });\n  }\n\n  var normalized = directiveNormalize('ng-' + attrName);\n  var linkFn = defaultLinkFn;\n\n  if (propName === 'checked') {\n    linkFn = function(scope, element, attr) {\n      // ensuring ngChecked doesn't interfere with ngModel when both are set on the same input\n      if (attr.ngModel !== attr[normalized]) {\n        defaultLinkFn(scope, element, attr);\n      }\n    };\n  }\n\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      restrict: 'A',\n      priority: 100,\n      link: linkFn\n    };\n  };\n});\n\n// aliased input attrs are evaluated\nforEach(ALIASED_ATTR, function(htmlAttr, ngAttr) {\n  ngAttributeAliasDirectives[ngAttr] = function() {\n    return {\n      priority: 100,\n      link: function(scope, element, attr) {\n        //special case ngPattern when a literal regular expression value\n        //is used as the expression (this way we don't have to watch anything).\n        if (ngAttr === 'ngPattern' && attr.ngPattern.charAt(0) === '/') {\n          var match = attr.ngPattern.match(REGEX_STRING_REGEXP);\n          if (match) {\n            attr.$set('ngPattern', new RegExp(match[1], match[2]));\n            return;\n          }\n        }\n\n        scope.$watch(attr[ngAttr], function ngAttrAliasWatchAction(value) {\n          attr.$set(ngAttr, value);\n        });\n      }\n    };\n  };\n});\n\n// ng-src, ng-srcset, ng-href are interpolated\nforEach(['src', 'srcset', 'href'], function(attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 99, // it needs to run after the attributes are interpolated\n      link: function(scope, element, attr) {\n        var propName = attrName,\n            name = attrName;\n\n        if (attrName === 'href' &&\n            toString.call(element.prop('href')) === '[object SVGAnimatedString]') {\n          name = 'xlinkHref';\n          attr.$attr[name] = 'xlink:href';\n          propName = null;\n        }\n\n        attr.$observe(normalized, function(value) {\n          if (!value) {\n            if (attrName === 'href') {\n              attr.$set(name, null);\n            }\n            return;\n          }\n\n          attr.$set(name, value);\n\n          // Support: IE 9-11 only\n          // On IE, if \"ng:src\" directive declaration is used and \"src\" attribute doesn't exist\n          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n          // to set the property as well to achieve the desired effect.\n          // We use attr[attrName] value since $set can sanitize the url.\n          if (msie && propName) element.prop(propName, attr[name]);\n        });\n      }\n    };\n  };\n});\n\n/* global -nullFormCtrl, -PENDING_CLASS, -SUBMITTED_CLASS\n */\nvar nullFormCtrl = {\n  $addControl: noop,\n  $$renameControl: nullFormRenameControl,\n  $removeControl: noop,\n  $setValidity: noop,\n  $setDirty: noop,\n  $setPristine: noop,\n  $setSubmitted: noop\n},\nPENDING_CLASS = 'ng-pending',\nSUBMITTED_CLASS = 'ng-submitted';\n\nfunction nullFormRenameControl(control, name) {\n  control.$name = name;\n}\n\n/**\n * @ngdoc type\n * @name form.FormController\n *\n * @property {boolean} $pristine True if user has not interacted with the form yet.\n * @property {boolean} $dirty True if user has already interacted with the form.\n * @property {boolean} $valid True if all of the containing forms and controls are valid.\n * @property {boolean} $invalid True if at least one containing control or form is invalid.\n * @property {boolean} $pending True if at least one containing control or form is pending.\n * @property {boolean} $submitted True if user has submitted the form even if its invalid.\n *\n * @property {Object} $error Is an object hash, containing references to controls or\n *  forms with failing validators, where:\n *\n *  - keys are validation tokens (error names),\n *  - values are arrays of controls or forms that have a failing validator for given error name.\n *\n *  Built-in validation tokens:\n *\n *  - `email`\n *  - `max`\n *  - `maxlength`\n *  - `min`\n *  - `minlength`\n *  - `number`\n *  - `pattern`\n *  - `required`\n *  - `url`\n *  - `date`\n *  - `datetimelocal`\n *  - `time`\n *  - `week`\n *  - `month`\n *\n * @description\n * `FormController` keeps track of all its controls and nested forms as well as the state of them,\n * such as being valid/invalid or dirty/pristine.\n *\n * Each {@link ng.directive:form form} directive creates an instance\n * of `FormController`.\n *\n */\n//asks for $scope to fool the BC controller module\nFormController.$inject = ['$element', '$attrs', '$scope', '$animate', '$interpolate'];\nfunction FormController($element, $attrs, $scope, $animate, $interpolate) {\n  this.$$controls = [];\n\n  // init state\n  this.$error = {};\n  this.$$success = {};\n  this.$pending = undefined;\n  this.$name = $interpolate($attrs.name || $attrs.ngForm || '')($scope);\n  this.$dirty = false;\n  this.$pristine = true;\n  this.$valid = true;\n  this.$invalid = false;\n  this.$submitted = false;\n  this.$$parentForm = nullFormCtrl;\n\n  this.$$element = $element;\n  this.$$animate = $animate;\n\n  setupValidity(this);\n}\n\nFormController.prototype = {\n  /**\n   * @ngdoc method\n   * @name form.FormController#$rollbackViewValue\n   *\n   * @description\n   * Rollback all form controls pending updates to the `$modelValue`.\n   *\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\n   * event defined in `ng-model-options`. This method is typically needed by the reset button of\n   * a form that uses `ng-model-options` to pend updates.\n   */\n  $rollbackViewValue: function() {\n    forEach(this.$$controls, function(control) {\n      control.$rollbackViewValue();\n    });\n  },\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$commitViewValue\n   *\n   * @description\n   * Commit all form controls pending updates to the `$modelValue`.\n   *\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\n   * event defined in `ng-model-options`. This method is rarely needed as `NgModelController`\n   * usually handles calling this in response to input events.\n   */\n  $commitViewValue: function() {\n    forEach(this.$$controls, function(control) {\n      control.$commitViewValue();\n    });\n  },\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$addControl\n   * @param {object} control control object, either a {@link form.FormController} or an\n   * {@link ngModel.NgModelController}\n   *\n   * @description\n   * Register a control with the form. Input elements using ngModelController do this automatically\n   * when they are linked.\n   *\n   * Note that the current state of the control will not be reflected on the new parent form. This\n   * is not an issue with normal use, as freshly compiled and linked controls are in a `$pristine`\n   * state.\n   *\n   * However, if the method is used programmatically, for example by adding dynamically created controls,\n   * or controls that have been previously removed without destroying their corresponding DOM element,\n   * it's the developers responsibility to make sure the current state propagates to the parent form.\n   *\n   * For example, if an input control is added that is already `$dirty` and has `$error` properties,\n   * calling `$setDirty()` and `$validate()` afterwards will propagate the state to the parent form.\n   */\n  $addControl: function(control) {\n    // Breaking change - before, inputs whose name was \"hasOwnProperty\" were quietly ignored\n    // and not added to the scope.  Now we throw an error.\n    assertNotHasOwnProperty(control.$name, 'input');\n    this.$$controls.push(control);\n\n    if (control.$name) {\n      this[control.$name] = control;\n    }\n\n    control.$$parentForm = this;\n  },\n\n  // Private API: rename a form control\n  $$renameControl: function(control, newName) {\n    var oldName = control.$name;\n\n    if (this[oldName] === control) {\n      delete this[oldName];\n    }\n    this[newName] = control;\n    control.$name = newName;\n  },\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$removeControl\n   * @param {object} control control object, either a {@link form.FormController} or an\n   * {@link ngModel.NgModelController}\n   *\n   * @description\n   * Deregister a control from the form.\n   *\n   * Input elements using ngModelController do this automatically when they are destroyed.\n   *\n   * Note that only the removed control's validation state (`$errors`etc.) will be removed from the\n   * form. `$dirty`, `$submitted` states will not be changed, because the expected behavior can be\n   * different from case to case. For example, removing the only `$dirty` control from a form may or\n   * may not mean that the form is still `$dirty`.\n   */\n  $removeControl: function(control) {\n    if (control.$name && this[control.$name] === control) {\n      delete this[control.$name];\n    }\n    forEach(this.$pending, function(value, name) {\n      // eslint-disable-next-line no-invalid-this\n      this.$setValidity(name, null, control);\n    }, this);\n    forEach(this.$error, function(value, name) {\n      // eslint-disable-next-line no-invalid-this\n      this.$setValidity(name, null, control);\n    }, this);\n    forEach(this.$$success, function(value, name) {\n      // eslint-disable-next-line no-invalid-this\n      this.$setValidity(name, null, control);\n    }, this);\n\n    arrayRemove(this.$$controls, control);\n    control.$$parentForm = nullFormCtrl;\n  },\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setDirty\n   *\n   * @description\n   * Sets the form to a dirty state.\n   *\n   * This method can be called to add the 'ng-dirty' class and set the form to a dirty\n   * state (ng-dirty class). This method will also propagate to parent forms.\n   */\n  $setDirty: function() {\n    this.$$animate.removeClass(this.$$element, PRISTINE_CLASS);\n    this.$$animate.addClass(this.$$element, DIRTY_CLASS);\n    this.$dirty = true;\n    this.$pristine = false;\n    this.$$parentForm.$setDirty();\n  },\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setPristine\n   *\n   * @description\n   * Sets the form to its pristine state.\n   *\n   * This method sets the form's `$pristine` state to true, the `$dirty` state to false, removes\n   * the `ng-dirty` class and adds the `ng-pristine` class. Additionally, it sets the `$submitted`\n   * state to false.\n   *\n   * This method will also propagate to all the controls contained in this form.\n   *\n   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after\n   * saving or resetting it.\n   */\n  $setPristine: function() {\n    this.$$animate.setClass(this.$$element, PRISTINE_CLASS, DIRTY_CLASS + ' ' + SUBMITTED_CLASS);\n    this.$dirty = false;\n    this.$pristine = true;\n    this.$submitted = false;\n    forEach(this.$$controls, function(control) {\n      control.$setPristine();\n    });\n  },\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setUntouched\n   *\n   * @description\n   * Sets the form to its untouched state.\n   *\n   * This method can be called to remove the 'ng-touched' class and set the form controls to their\n   * untouched state (ng-untouched class).\n   *\n   * Setting a form controls back to their untouched state is often useful when setting the form\n   * back to its pristine state.\n   */\n  $setUntouched: function() {\n    forEach(this.$$controls, function(control) {\n      control.$setUntouched();\n    });\n  },\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setSubmitted\n   *\n   * @description\n   * Sets the form to its submitted state.\n   */\n  $setSubmitted: function() {\n    this.$$animate.addClass(this.$$element, SUBMITTED_CLASS);\n    this.$submitted = true;\n    this.$$parentForm.$setSubmitted();\n  }\n};\n\n/**\n * @ngdoc method\n * @name form.FormController#$setValidity\n *\n * @description\n * Sets the validity of a form control.\n *\n * This method will also propagate to parent forms.\n */\naddSetValidityMethod({\n  clazz: FormController,\n  set: function(object, property, controller) {\n    var list = object[property];\n    if (!list) {\n      object[property] = [controller];\n    } else {\n      var index = list.indexOf(controller);\n      if (index === -1) {\n        list.push(controller);\n      }\n    }\n  },\n  unset: function(object, property, controller) {\n    var list = object[property];\n    if (!list) {\n      return;\n    }\n    arrayRemove(list, controller);\n    if (list.length === 0) {\n      delete object[property];\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngForm\n * @restrict EAC\n *\n * @description\n * Nestable alias of {@link ng.directive:form `form`} directive. HTML\n * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\n * sub-group of controls needs to be determined.\n *\n * Note: the purpose of `ngForm` is to group controls,\n * but not to be a replacement for the `<form>` tag with all of its capabilities\n * (e.g. posting to the server, ...).\n *\n * @param {string=} ngForm|name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n */\n\n /**\n * @ngdoc directive\n * @name form\n * @restrict E\n *\n * @description\n * Directive that instantiates\n * {@link form.FormController FormController}.\n *\n * If the `name` attribute is specified, the form controller is published onto the current scope under\n * this name.\n *\n * # Alias: {@link ng.directive:ngForm `ngForm`}\n *\n * In Angular, forms can be nested. This means that the outer form is valid when all of the child\n * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\n * Angular provides the {@link ng.directive:ngForm `ngForm`} directive, which behaves identically to\n * `form` but can be nested. Nested forms can be useful, for example, if the validity of a sub-group\n * of controls needs to be determined.\n *\n * # CSS classes\n *  - `ng-valid` is set if the form is valid.\n *  - `ng-invalid` is set if the form is invalid.\n *  - `ng-pending` is set if the form is pending.\n *  - `ng-pristine` is set if the form is pristine.\n *  - `ng-dirty` is set if the form is dirty.\n *  - `ng-submitted` is set if the form was submitted.\n *\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n *\n *\n * # Submitting a form and preventing the default action\n *\n * Since the role of forms in client-side Angular applications is different than in classical\n * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\n * page reload that sends the data to the server. Instead some javascript logic should be triggered\n * to handle the form submission in an application-specific way.\n *\n * For this reason, Angular prevents the default action (form submission to the server) unless the\n * `<form>` element has an `action` attribute specified.\n *\n * You can use one of the following two ways to specify what javascript method should be called when\n * a form is submitted:\n *\n * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n * - {@link ng.directive:ngClick ngClick} directive on the first\n  *  button or input field of type submit (input[type=submit])\n *\n * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\n * or {@link ng.directive:ngClick ngClick} directives.\n * This is because of the following form submission rules in the HTML specification:\n *\n * - If a form has only one input field then hitting enter in this field triggers form submit\n * (`ngSubmit`)\n * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\n * doesn't trigger submit\n * - if a form has one or more input fields and one or more buttons or input[type=submit] then\n * hitting enter in any of the input fields will trigger the click handler on the *first* button or\n * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n *\n * Any pending `ngModelOptions` changes will take place immediately when an enclosing form is\n * submitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\n * to have access to the updated model.\n *\n * ## Animation Hooks\n *\n * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.\n * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\n * other validations that are performed within the form. Animations in ngForm are similar to how\n * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\n * as JS animations.\n *\n * The following example shows a simple way to utilize CSS transitions to style a form element\n * that has been rendered as invalid after it has been validated:\n *\n * <pre>\n * //be sure to include ngAnimate as a module to hook into more\n * //advanced animations\n * .my-form {\n *   transition:0.5s linear all;\n *   background: white;\n * }\n * .my-form.ng-invalid {\n *   background: red;\n *   color:white;\n * }\n * </pre>\n *\n * @example\n    <example name=\"ng-form\" deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"formExample\">\n      <file name=\"index.html\">\n       <script>\n         angular.module('formExample', [])\n           .controller('FormController', ['$scope', function($scope) {\n             $scope.userType = 'guest';\n           }]);\n       </script>\n       <style>\n        .my-form {\n          transition:all linear 0.5s;\n          background: transparent;\n        }\n        .my-form.ng-invalid {\n          background: red;\n        }\n       </style>\n       <form name=\"myForm\" ng-controller=\"FormController\" class=\"my-form\">\n         userType: <input name=\"input\" ng-model=\"userType\" required>\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n         <code>userType = {{userType}}</code><br>\n         <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br>\n         <code>myForm.input.$error = {{myForm.input.$error}}</code><br>\n         <code>myForm.$valid = {{myForm.$valid}}</code><br>\n         <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br>\n        </form>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should initialize to model', function() {\n          var userType = element(by.binding('userType'));\n          var valid = element(by.binding('myForm.input.$valid'));\n\n          expect(userType.getText()).toContain('guest');\n          expect(valid.getText()).toContain('true');\n        });\n\n        it('should be invalid if empty', function() {\n          var userType = element(by.binding('userType'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var userInput = element(by.model('userType'));\n\n          userInput.clear();\n          userInput.sendKeys('');\n\n          expect(userType.getText()).toEqual('userType =');\n          expect(valid.getText()).toContain('false');\n        });\n      </file>\n    </example>\n *\n * @param {string=} name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n */\nvar formDirectiveFactory = function(isNgForm) {\n  return ['$timeout', '$parse', function($timeout, $parse) {\n    var formDirective = {\n      name: 'form',\n      restrict: isNgForm ? 'EAC' : 'E',\n      require: ['form', '^^?form'], //first is the form's own ctrl, second is an optional parent form\n      controller: FormController,\n      compile: function ngFormCompile(formElement, attr) {\n        // Setup initial state of the control\n        formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);\n\n        var nameAttr = attr.name ? 'name' : (isNgForm && attr.ngForm ? 'ngForm' : false);\n\n        return {\n          pre: function ngFormPreLink(scope, formElement, attr, ctrls) {\n            var controller = ctrls[0];\n\n            // if `action` attr is not present on the form, prevent the default action (submission)\n            if (!('action' in attr)) {\n              // we can't use jq events because if a form is destroyed during submission the default\n              // action is not prevented. see #1238\n              //\n              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\n              // page reload if the form was destroyed by submission of the form via a click handler\n              // on a button in the form. Looks like an IE9 specific bug.\n              var handleFormSubmission = function(event) {\n                scope.$apply(function() {\n                  controller.$commitViewValue();\n                  controller.$setSubmitted();\n                });\n\n                event.preventDefault();\n              };\n\n              formElement[0].addEventListener('submit', handleFormSubmission);\n\n              // unregister the preventDefault listener so that we don't not leak memory but in a\n              // way that will achieve the prevention of the default action.\n              formElement.on('$destroy', function() {\n                $timeout(function() {\n                  formElement[0].removeEventListener('submit', handleFormSubmission);\n                }, 0, false);\n              });\n            }\n\n            var parentFormCtrl = ctrls[1] || controller.$$parentForm;\n            parentFormCtrl.$addControl(controller);\n\n            var setter = nameAttr ? getSetter(controller.$name) : noop;\n\n            if (nameAttr) {\n              setter(scope, controller);\n              attr.$observe(nameAttr, function(newValue) {\n                if (controller.$name === newValue) return;\n                setter(scope, undefined);\n                controller.$$parentForm.$$renameControl(controller, newValue);\n                setter = getSetter(controller.$name);\n                setter(scope, controller);\n              });\n            }\n            formElement.on('$destroy', function() {\n              controller.$$parentForm.$removeControl(controller);\n              setter(scope, undefined);\n              extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\n            });\n          }\n        };\n      }\n    };\n\n    return formDirective;\n\n    function getSetter(expression) {\n      if (expression === '') {\n        //create an assignable expression, so forms with an empty name can be renamed later\n        return $parse('this[\"\"]').assign;\n      }\n      return $parse(expression).assign || noop;\n    }\n  }];\n};\n\nvar formDirective = formDirectiveFactory();\nvar ngFormDirective = formDirectiveFactory(true);\n\n\n\n// helper methods\nfunction setupValidity(instance) {\n  instance.$$classCache = {};\n  instance.$$classCache[INVALID_CLASS] = !(instance.$$classCache[VALID_CLASS] = instance.$$element.hasClass(VALID_CLASS));\n}\nfunction addSetValidityMethod(context) {\n  var clazz = context.clazz,\n      set = context.set,\n      unset = context.unset;\n\n  clazz.prototype.$setValidity = function(validationErrorKey, state, controller) {\n    if (isUndefined(state)) {\n      createAndSet(this, '$pending', validationErrorKey, controller);\n    } else {\n      unsetAndCleanup(this, '$pending', validationErrorKey, controller);\n    }\n    if (!isBoolean(state)) {\n      unset(this.$error, validationErrorKey, controller);\n      unset(this.$$success, validationErrorKey, controller);\n    } else {\n      if (state) {\n        unset(this.$error, validationErrorKey, controller);\n        set(this.$$success, validationErrorKey, controller);\n      } else {\n        set(this.$error, validationErrorKey, controller);\n        unset(this.$$success, validationErrorKey, controller);\n      }\n    }\n    if (this.$pending) {\n      cachedToggleClass(this, PENDING_CLASS, true);\n      this.$valid = this.$invalid = undefined;\n      toggleValidationCss(this, '', null);\n    } else {\n      cachedToggleClass(this, PENDING_CLASS, false);\n      this.$valid = isObjectEmpty(this.$error);\n      this.$invalid = !this.$valid;\n      toggleValidationCss(this, '', this.$valid);\n    }\n\n    // re-read the state as the set/unset methods could have\n    // combined state in this.$error[validationError] (used for forms),\n    // where setting/unsetting only increments/decrements the value,\n    // and does not replace it.\n    var combinedState;\n    if (this.$pending && this.$pending[validationErrorKey]) {\n      combinedState = undefined;\n    } else if (this.$error[validationErrorKey]) {\n      combinedState = false;\n    } else if (this.$$success[validationErrorKey]) {\n      combinedState = true;\n    } else {\n      combinedState = null;\n    }\n\n    toggleValidationCss(this, validationErrorKey, combinedState);\n    this.$$parentForm.$setValidity(validationErrorKey, combinedState, this);\n  };\n\n  function createAndSet(ctrl, name, value, controller) {\n    if (!ctrl[name]) {\n      ctrl[name] = {};\n    }\n    set(ctrl[name], value, controller);\n  }\n\n  function unsetAndCleanup(ctrl, name, value, controller) {\n    if (ctrl[name]) {\n      unset(ctrl[name], value, controller);\n    }\n    if (isObjectEmpty(ctrl[name])) {\n      ctrl[name] = undefined;\n    }\n  }\n\n  function cachedToggleClass(ctrl, className, switchValue) {\n    if (switchValue && !ctrl.$$classCache[className]) {\n      ctrl.$$animate.addClass(ctrl.$$element, className);\n      ctrl.$$classCache[className] = true;\n    } else if (!switchValue && ctrl.$$classCache[className]) {\n      ctrl.$$animate.removeClass(ctrl.$$element, className);\n      ctrl.$$classCache[className] = false;\n    }\n  }\n\n  function toggleValidationCss(ctrl, validationErrorKey, isValid) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n\n    cachedToggleClass(ctrl, VALID_CLASS + validationErrorKey, isValid === true);\n    cachedToggleClass(ctrl, INVALID_CLASS + validationErrorKey, isValid === false);\n  }\n}\n\nfunction isObjectEmpty(obj) {\n  if (obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/* global\n  VALID_CLASS: false,\n  INVALID_CLASS: false,\n  PRISTINE_CLASS: false,\n  DIRTY_CLASS: false,\n  ngModelMinErr: false\n*/\n\n// Regex code was initially obtained from SO prior to modification: https://stackoverflow.com/questions/3143070/javascript-regex-iso-datetime#answer-3143231\nvar ISO_DATE_REGEXP = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/;\n// See valid URLs in RFC3987 (http://tools.ietf.org/html/rfc3987)\n// Note: We are being more lenient, because browsers are too.\n//   1. Scheme\n//   2. Slashes\n//   3. Username\n//   4. Password\n//   5. Hostname\n//   6. Port\n//   7. Path\n//   8. Query\n//   9. Fragment\n//                 1111111111111111 222   333333    44444        55555555555555555555555     666     77777777     8888888     999\nvar URL_REGEXP = /^[a-z][a-z\\d.+-]*:\\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\\s:/?#]+|\\[[a-f\\d:]+])(?::\\d+)?(?:\\/[^?#]*)?(?:\\?[^#]*)?(?:#.*)?$/i;\n// eslint-disable-next-line max-len\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\nvar NUMBER_REGEXP = /^\\s*(-|\\+)?(\\d+|(\\d*(\\.\\d*)))([eE][+-]?\\d+)?\\s*$/;\nvar DATE_REGEXP = /^(\\d{4,})-(\\d{2})-(\\d{2})$/;\nvar DATETIMELOCAL_REGEXP = /^(\\d{4,})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/;\nvar WEEK_REGEXP = /^(\\d{4,})-W(\\d\\d)$/;\nvar MONTH_REGEXP = /^(\\d{4,})-(\\d\\d)$/;\nvar TIME_REGEXP = /^(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/;\n\nvar PARTIAL_VALIDATION_EVENTS = 'keydown wheel mousedown';\nvar PARTIAL_VALIDATION_TYPES = createMap();\nforEach('date,datetime-local,month,time,week'.split(','), function(type) {\n  PARTIAL_VALIDATION_TYPES[type] = true;\n});\n\nvar inputType = {\n\n  /**\n   * @ngdoc input\n   * @name input[text]\n   *\n   * @description\n   * Standard HTML text input with angular data binding, inherited by most of the `input` elements.\n   *\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Adds `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object, then this is used directly.\n   *    If the expression evaluates to a string, then it will be converted to a RegExp\n   *    after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   *    `new RegExp('^abc$')`.<br />\n   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   *    start at the index of the last search's match, thus not taking the whole input value into\n   *    account.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n   *    This parameter is ignored for input[type=password] controls, which will never trim the\n   *    input.\n   *\n   * @example\n      <example name=\"text-input-directive\" module=\"textInputExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('textInputExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.example = {\n                 text: 'guest',\n                 word: /^\\s*\\w*\\s*$/\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           <label>Single word:\n             <input type=\"text\" name=\"input\" ng-model=\"example.text\"\n                    ng-pattern=\"example.word\" required ng-trim=\"false\">\n           </label>\n           <div role=\"alert\">\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n               Single word only!</span>\n           </div>\n           <code>text = {{example.text}}</code><br/>\n           <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br/>\n           <code>myForm.input.$error = {{myForm.input.$error}}</code><br/>\n           <code>myForm.$valid = {{myForm.$valid}}</code><br/>\n           <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('example.text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('example.text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('guest');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if multi word', function() {\n            input.clear();\n            input.sendKeys('hello world');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'text': textInputType,\n\n    /**\n     * @ngdoc input\n     * @name input[date]\n     *\n     * @description\n     * Input with date validation and transformation. In browsers that do not yet support\n     * the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601\n     * date format (yyyy-MM-dd), for example: `2009-01-06`. Since many\n     * modern browsers do not yet support this input type, it is important to provide cues to users on the\n     * expected input format via a placeholder or label.\n     *\n     * The model must always be a Date object, otherwise Angular will throw an error.\n     * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n     *\n     * The timezone to be used to read/write the `Date` instance in the model can be defined using\n     * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n     *\n     * @param {string} ngModel Assignable angular expression to data-bind to.\n     * @param {string=} name Property name of the form under which the control is published.\n     * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a\n     *   valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute\n     *   (e.g. `min=\"{{minDate | date:'yyyy-MM-dd'}}\"`). Note that `min` will also add native HTML5\n     *   constraint validation.\n     * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be\n     *   a valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute\n     *   (e.g. `max=\"{{maxDate | date:'yyyy-MM-dd'}}\"`). Note that `max` will also add native HTML5\n     *   constraint validation.\n     * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO date string\n     *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.\n     * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO date string\n     *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.\n     * @param {string=} required Sets `required` validation error key if the value is not entered.\n     * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n     *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n     *    `required` when you want to data-bind to the `required` attribute.\n     * @param {string=} ngChange Angular expression to be executed when input changes due to user\n     *    interaction with the input element.\n     *\n     * @example\n     <example name=\"date-input-directive\" module=\"dateInputExample\">\n     <file name=\"index.html\">\n       <script>\n          angular.module('dateInputExample', [])\n            .controller('DateController', ['$scope', function($scope) {\n              $scope.example = {\n                value: new Date(2013, 9, 22)\n              };\n            }]);\n       </script>\n       <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n          <label for=\"exampleInput\">Pick a date in 2013:</label>\n          <input type=\"date\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n              placeholder=\"yyyy-MM-dd\" min=\"2013-01-01\" max=\"2013-12-31\" required />\n          <div role=\"alert\">\n            <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n                Required!</span>\n            <span class=\"error\" ng-show=\"myForm.input.$error.date\">\n                Not a valid date!</span>\n           </div>\n           <tt>value = {{example.value | date: \"yyyy-MM-dd\"}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n       </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n        var value = element(by.binding('example.value | date: \"yyyy-MM-dd\"'));\n        var valid = element(by.binding('myForm.input.$valid'));\n\n        // currently protractor/webdriver does not support\n        // sending keys to all known HTML5 input controls\n        // for various browsers (see https://github.com/angular/protractor/issues/562).\n        function setInput(val) {\n          // set the value of the element and force validation.\n          var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n          \"ipt.value = '\" + val + \"';\" +\n          \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n          browser.executeScript(scr);\n        }\n\n        it('should initialize to model', function() {\n          expect(value.getText()).toContain('2013-10-22');\n          expect(valid.getText()).toContain('myForm.input.$valid = true');\n        });\n\n        it('should be invalid if empty', function() {\n          setInput('');\n          expect(value.getText()).toEqual('value =');\n          expect(valid.getText()).toContain('myForm.input.$valid = false');\n        });\n\n        it('should be invalid if over max', function() {\n          setInput('2015-01-01');\n          expect(value.getText()).toContain('');\n          expect(valid.getText()).toContain('myForm.input.$valid = false');\n        });\n     </file>\n     </example>\n     */\n  'date': createDateInputType('date', DATE_REGEXP,\n         createDateParser(DATE_REGEXP, ['yyyy', 'MM', 'dd']),\n         'yyyy-MM-dd'),\n\n   /**\n    * @ngdoc input\n    * @name input[datetime-local]\n    *\n    * @description\n    * Input with datetime validation and transformation. In browsers that do not yet support\n    * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n    * local datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.\n    *\n    * The model must always be a Date object, otherwise Angular will throw an error.\n    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n    *\n    * The timezone to be used to read/write the `Date` instance in the model can be defined using\n    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n    *\n    * @param {string} ngModel Assignable angular expression to data-bind to.\n    * @param {string=} name Property name of the form under which the control is published.\n    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation\n    *   inside this attribute (e.g. `min=\"{{minDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}\"`).\n    *   Note that `min` will also add native HTML5 constraint validation.\n    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation\n    *   inside this attribute (e.g. `max=\"{{maxDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}\"`).\n    *   Note that `max` will also add native HTML5 constraint validation.\n    * @param {(date|string)=} ngMin Sets the `min` validation error key to the Date / ISO datetime string\n    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.\n    * @param {(date|string)=} ngMax Sets the `max` validation error key to the Date / ISO datetime string\n    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.\n    * @param {string=} required Sets `required` validation error key if the value is not entered.\n    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n    *    `required` when you want to data-bind to the `required` attribute.\n    * @param {string=} ngChange Angular expression to be executed when input changes due to user\n    *    interaction with the input element.\n    *\n    * @example\n    <example name=\"datetimelocal-input-directive\" module=\"dateExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('dateExample', [])\n          .controller('DateController', ['$scope', function($scope) {\n            $scope.example = {\n              value: new Date(2010, 11, 28, 14, 57)\n            };\n          }]);\n      </script>\n      <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n        <label for=\"exampleInput\">Pick a date between in 2013:</label>\n        <input type=\"datetime-local\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n            placeholder=\"yyyy-MM-ddTHH:mm:ss\" min=\"2001-01-01T00:00:00\" max=\"2013-12-31T00:00:00\" required />\n        <div role=\"alert\">\n          <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n          <span class=\"error\" ng-show=\"myForm.input.$error.datetimelocal\">\n              Not a valid date!</span>\n        </div>\n        <tt>value = {{example.value | date: \"yyyy-MM-ddTHH:mm:ss\"}}</tt><br/>\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"yyyy-MM-ddTHH:mm:ss\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('2010-12-28T14:57:00');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('2015-01-01T23:59:00');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n    </file>\n    </example>\n    */\n  'datetime-local': createDateInputType('datetimelocal', DATETIMELOCAL_REGEXP,\n      createDateParser(DATETIMELOCAL_REGEXP, ['yyyy', 'MM', 'dd', 'HH', 'mm', 'ss', 'sss']),\n      'yyyy-MM-ddTHH:mm:ss.sss'),\n\n  /**\n   * @ngdoc input\n   * @name input[time]\n   *\n   * @description\n   * Input with time validation and transformation. In browsers that do not yet support\n   * the HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n   * local time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a\n   * Date object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.\n   *\n   * The model must always be a Date object, otherwise Angular will throw an error.\n   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n   *\n   * The timezone to be used to read/write the `Date` instance in the model can be defined using\n   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this\n   *   attribute (e.g. `min=\"{{minTime | date:'HH:mm:ss'}}\"`). Note that `min` will also add\n   *   native HTML5 constraint validation.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this\n   *   attribute (e.g. `max=\"{{maxTime | date:'HH:mm:ss'}}\"`). Note that `max` will also add\n   *   native HTML5 constraint validation.\n   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO time string the\n   *   `ngMin` expression evaluates to. Note that it does not set the `min` attribute.\n   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO time string the\n   *   `ngMax` expression evaluates to. Note that it does not set the `max` attribute.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n   <example name=\"time-input-directive\" module=\"timeExample\">\n   <file name=\"index.html\">\n     <script>\n      angular.module('timeExample', [])\n        .controller('DateController', ['$scope', function($scope) {\n          $scope.example = {\n            value: new Date(1970, 0, 1, 14, 57, 0)\n          };\n        }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n        <label for=\"exampleInput\">Pick a time between 8am and 5pm:</label>\n        <input type=\"time\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n            placeholder=\"HH:mm:ss\" min=\"08:00:00\" max=\"17:00:00\" required />\n        <div role=\"alert\">\n          <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n          <span class=\"error\" ng-show=\"myForm.input.$error.time\">\n              Not a valid date!</span>\n        </div>\n        <tt>value = {{example.value | date: \"HH:mm:ss\"}}</tt><br/>\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"HH:mm:ss\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('14:57:00');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('23:59:00');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n   </file>\n   </example>\n   */\n  'time': createDateInputType('time', TIME_REGEXP,\n      createDateParser(TIME_REGEXP, ['HH', 'mm', 'ss', 'sss']),\n     'HH:mm:ss.sss'),\n\n   /**\n    * @ngdoc input\n    * @name input[week]\n    *\n    * @description\n    * Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support\n    * the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n    * week format (yyyy-W##), for example: `2013-W02`.\n    *\n    * The model must always be a Date object, otherwise Angular will throw an error.\n    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n    *\n    * The timezone to be used to read/write the `Date` instance in the model can be defined using\n    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n    *\n    * @param {string} ngModel Assignable angular expression to data-bind to.\n    * @param {string=} name Property name of the form under which the control is published.\n    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this\n    *   attribute (e.g. `min=\"{{minWeek | date:'yyyy-Www'}}\"`). Note that `min` will also add\n    *   native HTML5 constraint validation.\n    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this\n    *   attribute (e.g. `max=\"{{maxWeek | date:'yyyy-Www'}}\"`). Note that `max` will also add\n    *   native HTML5 constraint validation.\n    * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string\n    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.\n    * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string\n    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.\n    * @param {string=} required Sets `required` validation error key if the value is not entered.\n    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n    *    `required` when you want to data-bind to the `required` attribute.\n    * @param {string=} ngChange Angular expression to be executed when input changes due to user\n    *    interaction with the input element.\n    *\n    * @example\n    <example name=\"week-input-directive\" module=\"weekExample\">\n    <file name=\"index.html\">\n      <script>\n      angular.module('weekExample', [])\n        .controller('DateController', ['$scope', function($scope) {\n          $scope.example = {\n            value: new Date(2013, 0, 3)\n          };\n        }]);\n      </script>\n      <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n        <label>Pick a date between in 2013:\n          <input id=\"exampleInput\" type=\"week\" name=\"input\" ng-model=\"example.value\"\n                 placeholder=\"YYYY-W##\" min=\"2012-W32\"\n                 max=\"2013-W52\" required />\n        </label>\n        <div role=\"alert\">\n          <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n          <span class=\"error\" ng-show=\"myForm.input.$error.week\">\n              Not a valid date!</span>\n        </div>\n        <tt>value = {{example.value | date: \"yyyy-Www\"}}</tt><br/>\n        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"yyyy-Www\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('2013-W01');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('2015-W01');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n    </file>\n    </example>\n    */\n  'week': createDateInputType('week', WEEK_REGEXP, weekParser, 'yyyy-Www'),\n\n  /**\n   * @ngdoc input\n   * @name input[month]\n   *\n   * @description\n   * Input with month validation and transformation. In browsers that do not yet support\n   * the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\n   * month format (yyyy-MM), for example: `2009-01`.\n   *\n   * The model must always be a Date object, otherwise Angular will throw an error.\n   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n   * If the model is not set to the first of the month, the next view to model update will set it\n   * to the first of the month.\n   *\n   * The timezone to be used to read/write the `Date` instance in the model can be defined using\n   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this\n   *   attribute (e.g. `min=\"{{minMonth | date:'yyyy-MM'}}\"`). Note that `min` will also add\n   *   native HTML5 constraint validation.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this\n   *   attribute (e.g. `max=\"{{maxMonth | date:'yyyy-MM'}}\"`). Note that `max` will also add\n   *   native HTML5 constraint validation.\n   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string\n   *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.\n   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string\n   *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.\n\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n   <example name=\"month-input-directive\" module=\"monthExample\">\n   <file name=\"index.html\">\n     <script>\n      angular.module('monthExample', [])\n        .controller('DateController', ['$scope', function($scope) {\n          $scope.example = {\n            value: new Date(2013, 9, 1)\n          };\n        }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       <label for=\"exampleInput\">Pick a month in 2013:</label>\n       <input id=\"exampleInput\" type=\"month\" name=\"input\" ng-model=\"example.value\"\n          placeholder=\"yyyy-MM\" min=\"2013-01\" max=\"2013-12\" required />\n       <div role=\"alert\">\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n            Required!</span>\n         <span class=\"error\" ng-show=\"myForm.input.$error.month\">\n            Not a valid month!</span>\n       </div>\n       <tt>value = {{example.value | date: \"yyyy-MM\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n      var value = element(by.binding('example.value | date: \"yyyy-MM\"'));\n      var valid = element(by.binding('myForm.input.$valid'));\n\n      // currently protractor/webdriver does not support\n      // sending keys to all known HTML5 input controls\n      // for various browsers (https://github.com/angular/protractor/issues/562).\n      function setInput(val) {\n        // set the value of the element and force validation.\n        var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n        \"ipt.value = '\" + val + \"';\" +\n        \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n        browser.executeScript(scr);\n      }\n\n      it('should initialize to model', function() {\n        expect(value.getText()).toContain('2013-10');\n        expect(valid.getText()).toContain('myForm.input.$valid = true');\n      });\n\n      it('should be invalid if empty', function() {\n        setInput('');\n        expect(value.getText()).toEqual('value =');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n\n      it('should be invalid if over max', function() {\n        setInput('2015-01');\n        expect(value.getText()).toContain('');\n        expect(valid.getText()).toContain('myForm.input.$valid = false');\n      });\n   </file>\n   </example>\n   */\n  'month': createDateInputType('month', MONTH_REGEXP,\n     createDateParser(MONTH_REGEXP, ['yyyy', 'MM']),\n     'yyyy-MM'),\n\n  /**\n   * @ngdoc input\n   * @name input[number]\n   *\n   * @description\n   * Text input with number validation and transformation. Sets the `number` validation\n   * error if not a valid number.\n   *\n   * <div class=\"alert alert-warning\">\n   * The model must always be of type `number` otherwise Angular will throw an error.\n   * Be aware that a string containing a number is not enough. See the {@link ngModel:numfmt}\n   * error docs for more information and an example of how to convert your model if necessary.\n   * </div>\n   *\n   * ## Issues with HTML5 constraint validation\n   *\n   * In browsers that follow the\n   * [HTML5 specification](https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29),\n   * `input[number]` does not work as expected with {@link ngModelOptions `ngModelOptions.allowInvalid`}.\n   * If a non-number is entered in the input, the browser will report the value as an empty string,\n   * which means the view / model values in `ngModel` and subsequently the scope value\n   * will also be an empty string.\n   *\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   *    Can be interpolated.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   *    Can be interpolated.\n   * @param {string=} ngMin Like `min`, sets the `min` validation error key if the value entered is less than `ngMin`,\n   *    but does not trigger HTML5 native validation. Takes an expression.\n   * @param {string=} ngMax Like `max`, sets the `max` validation error key if the value entered is greater than `ngMax`,\n   *    but does not trigger HTML5 native validation. Takes an expression.\n   * @param {string=} step Sets the `step` validation error key if the value entered does not fit the `step` constraint.\n   *    Can be interpolated.\n   * @param {string=} ngStep Like `step`, sets the `step` validation error key if the value entered does not fit the `ngStep` constraint,\n   *    but does not trigger HTML5 native validation. Takes an expression.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object, then this is used directly.\n   *    If the expression evaluates to a string, then it will be converted to a RegExp\n   *    after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   *    `new RegExp('^abc$')`.<br />\n   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   *    start at the index of the last search's match, thus not taking the whole input value into\n   *    account.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"number-input-directive\" module=\"numberExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('numberExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.example = {\n                 value: 12\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           <label>Number:\n             <input type=\"number\" name=\"input\" ng-model=\"example.value\"\n                    min=\"0\" max=\"99\" required>\n          </label>\n           <div role=\"alert\">\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.number\">\n               Not valid number!</span>\n           </div>\n           <tt>value = {{example.value}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var value = element(by.binding('example.value'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('example.value'));\n\n          it('should initialize to model', function() {\n            expect(value.getText()).toContain('12');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n            expect(value.getText()).toEqual('value =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if over max', function() {\n            input.clear();\n            input.sendKeys('123');\n            expect(value.getText()).toEqual('value =');\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'number': numberInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[url]\n   *\n   * @description\n   * Text input with URL validation. Sets the `url` validation error key if the content is not a\n   * valid URL.\n   *\n   * <div class=\"alert alert-warning\">\n   * **Note:** `input[url]` uses a regex to validate urls that is derived from the regex\n   * used in Chromium. If you need stricter validation, you can use `ng-pattern` or modify\n   * the built-in validators (see the {@link guide/forms Forms guide})\n   * </div>\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object, then this is used directly.\n   *    If the expression evaluates to a string, then it will be converted to a RegExp\n   *    after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   *    `new RegExp('^abc$')`.<br />\n   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   *    start at the index of the last search's match, thus not taking the whole input value into\n   *    account.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"url-input-directive\" module=\"urlExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('urlExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.url = {\n                 text: 'http://google.com'\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           <label>URL:\n             <input type=\"url\" name=\"input\" ng-model=\"url.text\" required>\n           <label>\n           <div role=\"alert\">\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n               Not valid url!</span>\n           </div>\n           <tt>text = {{url.text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('url.text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('url.text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('http://google.com');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if not url', function() {\n            input.clear();\n            input.sendKeys('box');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'url': urlInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[email]\n   *\n   * @description\n   * Text input with email validation. Sets the `email` validation error key if not a valid email\n   * address.\n   *\n   * <div class=\"alert alert-warning\">\n   * **Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex\n   * used in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can\n   * use `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})\n   * </div>\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   *    any length.\n   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string\n   *    that contains the regular expression body that will be converted to a regular expression\n   *    as in the ngPattern directive.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   *    If the expression evaluates to a RegExp object, then this is used directly.\n   *    If the expression evaluates to a string, then it will be converted to a RegExp\n   *    after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   *    `new RegExp('^abc$')`.<br />\n   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   *    start at the index of the last search's match, thus not taking the whole input value into\n   *    account.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"email-input-directive\" module=\"emailExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('emailExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.email = {\n                 text: 'me@example.com'\n               };\n             }]);\n         </script>\n           <form name=\"myForm\" ng-controller=\"ExampleController\">\n             <label>Email:\n               <input type=\"email\" name=\"input\" ng-model=\"email.text\" required>\n             </label>\n             <div role=\"alert\">\n               <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n                 Required!</span>\n               <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n                 Not valid email!</span>\n             </div>\n             <tt>text = {{email.text}}</tt><br/>\n             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n           </form>\n         </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('email.text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('email.text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('me@example.com');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if not email', function() {\n            input.clear();\n            input.sendKeys('xxx');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'email': emailInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[radio]\n   *\n   * @description\n   * HTML radio button.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string} value The value to which the `ngModel` expression should be set when selected.\n   *    Note that `value` only supports `string` values, i.e. the scope model needs to be a string,\n   *    too. Use `ngValue` if you need complex models (`number`, `object`, ...).\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   * @param {string} ngValue Angular expression to which `ngModel` will be be set when the radio\n   *    is selected. Should be used instead of the `value` attribute if you need\n   *    a non-string `ngModel` (`boolean`, `array`, ...).\n   *\n   * @example\n      <example name=\"radio-input-directive\" module=\"radioExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('radioExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.color = {\n                 name: 'blue'\n               };\n               $scope.specialValue = {\n                 \"id\": \"12345\",\n                 \"value\": \"green\"\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           <label>\n             <input type=\"radio\" ng-model=\"color.name\" value=\"red\">\n             Red\n           </label><br/>\n           <label>\n             <input type=\"radio\" ng-model=\"color.name\" ng-value=\"specialValue\">\n             Green\n           </label><br/>\n           <label>\n             <input type=\"radio\" ng-model=\"color.name\" value=\"blue\">\n             Blue\n           </label><br/>\n           <tt>color = {{color.name | json}}</tt><br/>\n          </form>\n          Note that `ng-value=\"specialValue\"` sets radio item's value to be the value of `$scope.specialValue`.\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          it('should change state', function() {\n            var inputs = element.all(by.model('color.name'));\n            var color = element(by.binding('color.name'));\n\n            expect(color.getText()).toContain('blue');\n\n            inputs.get(0).click();\n            expect(color.getText()).toContain('red');\n\n            inputs.get(1).click();\n            expect(color.getText()).toContain('green');\n          });\n        </file>\n      </example>\n   */\n  'radio': radioInputType,\n\n  /**\n   * @ngdoc input\n   * @name input[range]\n   *\n   * @description\n   * Native range input with validation and transformation.\n   *\n   * The model for the range input must always be a `Number`.\n   *\n   * IE9 and other browsers that do not support the `range` type fall back\n   * to a text input without any default values for `min`, `max` and `step`. Model binding,\n   * validation and number parsing are nevertheless supported.\n   *\n   * Browsers that support range (latest Chrome, Safari, Firefox, Edge) treat `input[range]`\n   * in a way that never allows the input to hold an invalid value. That means:\n   * - any non-numerical value is set to `(max + min) / 2`.\n   * - any numerical value that is less than the current min val, or greater than the current max val\n   * is set to the min / max val respectively.\n   * - additionally, the current `step` is respected, so the nearest value that satisfies a step\n   * is used.\n   *\n   * See the [HTML Spec on input[type=range]](https://www.w3.org/TR/html5/forms.html#range-state-(type=range))\n   * for more info.\n   *\n   * This has the following consequences for Angular:\n   *\n   * Since the element value should always reflect the current model value, a range input\n   * will set the bound ngModel expression to the value that the browser has set for the\n   * input element. For example, in the following input `<input type=\"range\" ng-model=\"model.value\">`,\n   * if the application sets `model.value = null`, the browser will set the input to `'50'`.\n   * Angular will then set the model to `50`, to prevent input and model value being out of sync.\n   *\n   * That means the model for range will immediately be set to `50` after `ngModel` has been\n   * initialized. It also means a range input can never have the required error.\n   *\n   * This does not only affect changes to the model value, but also to the values of the `min`,\n   * `max`, and `step` attributes. When these change in a way that will cause the browser to modify\n   * the input value, Angular will also update the model value.\n   *\n   * Automatic value adjustment also means that a range input element can never have the `required`,\n   * `min`, or `max` errors.\n   *\n   * However, `step` is currently only fully implemented by Firefox. Other browsers have problems\n   * when the step value changes dynamically - they do not adjust the element value correctly, but\n   * instead may set the `stepMismatch` error. If that's the case, the Angular will set the `step`\n   * error on the input, and set the model to `undefined`.\n   *\n   * Note that `input[range]` is not compatible with`ngMax`, `ngMin`, and `ngStep`, because they do\n   * not set the `min` and `max` attributes, which means that the browser won't automatically adjust\n   * the input value based on their values, and will always assume min = 0, max = 100, and step = 1.\n   *\n   * @param {string}  ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation to ensure that the value entered is greater\n   *                  than `min`. Can be interpolated.\n   * @param {string=} max Sets the `max` validation to ensure that the value entered is less than `max`.\n   *                  Can be interpolated.\n   * @param {string=} step Sets the `step` validation to ensure that the value entered matches the `step`\n   *                  Can be interpolated.\n   * @param {string=} ngChange Angular expression to be executed when the ngModel value changes due\n   *                  to user interaction with the input element.\n   * @param {expression=} ngChecked If the expression is truthy, then the `checked` attribute will be set on the\n   *                      element. **Note** : `ngChecked` should not be used alongside `ngModel`.\n   *                      Checkout {@link ng.directive:ngChecked ngChecked} for usage.\n   *\n   * @example\n      <example name=\"range-input-directive\" module=\"rangeExample\">\n        <file name=\"index.html\">\n          <script>\n            angular.module('rangeExample', [])\n              .controller('ExampleController', ['$scope', function($scope) {\n                $scope.value = 75;\n                $scope.min = 10;\n                $scope.max = 90;\n              }]);\n          </script>\n          <form name=\"myForm\" ng-controller=\"ExampleController\">\n\n            Model as range: <input type=\"range\" name=\"range\" ng-model=\"value\" min=\"{{min}}\"  max=\"{{max}}\">\n            <hr>\n            Model as number: <input type=\"number\" ng-model=\"value\"><br>\n            Min: <input type=\"number\" ng-model=\"min\"><br>\n            Max: <input type=\"number\" ng-model=\"max\"><br>\n            value = <code>{{value}}</code><br/>\n            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>\n            myForm.range.$error = <code>{{myForm.range.$error}}</code>\n          </form>\n        </file>\n      </example>\n\n   * ## Range Input with ngMin & ngMax attributes\n\n   * @example\n      <example name=\"range-input-directive-ng\" module=\"rangeExample\">\n        <file name=\"index.html\">\n          <script>\n            angular.module('rangeExample', [])\n              .controller('ExampleController', ['$scope', function($scope) {\n                $scope.value = 75;\n                $scope.min = 10;\n                $scope.max = 90;\n              }]);\n          </script>\n          <form name=\"myForm\" ng-controller=\"ExampleController\">\n            Model as range: <input type=\"range\" name=\"range\" ng-model=\"value\" ng-min=\"min\" ng-max=\"max\">\n            <hr>\n            Model as number: <input type=\"number\" ng-model=\"value\"><br>\n            Min: <input type=\"number\" ng-model=\"min\"><br>\n            Max: <input type=\"number\" ng-model=\"max\"><br>\n            value = <code>{{value}}</code><br/>\n            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>\n            myForm.range.$error = <code>{{myForm.range.$error}}</code>\n          </form>\n        </file>\n      </example>\n\n   */\n  'range': rangeInputType,\n\n  /**\n   * @ngdoc input\n   * @name input[checkbox]\n   *\n   * @description\n   * HTML checkbox.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {expression=} ngTrueValue The value to which the expression should be set when selected.\n   * @param {expression=} ngFalseValue The value to which the expression should be set when not selected.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"checkbox-input-directive\" module=\"checkboxExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('checkboxExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.checkboxModel = {\n                value1 : true,\n                value2 : 'YES'\n              };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           <label>Value1:\n             <input type=\"checkbox\" ng-model=\"checkboxModel.value1\">\n           </label><br/>\n           <label>Value2:\n             <input type=\"checkbox\" ng-model=\"checkboxModel.value2\"\n                    ng-true-value=\"'YES'\" ng-false-value=\"'NO'\">\n            </label><br/>\n           <tt>value1 = {{checkboxModel.value1}}</tt><br/>\n           <tt>value2 = {{checkboxModel.value2}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          it('should change state', function() {\n            var value1 = element(by.binding('checkboxModel.value1'));\n            var value2 = element(by.binding('checkboxModel.value2'));\n\n            expect(value1.getText()).toContain('true');\n            expect(value2.getText()).toContain('YES');\n\n            element(by.model('checkboxModel.value1')).click();\n            element(by.model('checkboxModel.value2')).click();\n\n            expect(value1.getText()).toContain('false');\n            expect(value2.getText()).toContain('NO');\n          });\n        </file>\n      </example>\n   */\n  'checkbox': checkboxInputType,\n\n  'hidden': noop,\n  'button': noop,\n  'submit': noop,\n  'reset': noop,\n  'file': noop\n};\n\nfunction stringBasedInputType(ctrl) {\n  ctrl.$formatters.push(function(value) {\n    return ctrl.$isEmpty(value) ? value : value.toString();\n  });\n}\n\nfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n  stringBasedInputType(ctrl);\n}\n\nfunction baseInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  var type = lowercase(element[0].type);\n\n  // In composition mode, users are still inputting intermediate text buffer,\n  // hold the listener until composition is done.\n  // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent\n  if (!$sniffer.android) {\n    var composing = false;\n\n    element.on('compositionstart', function() {\n      composing = true;\n    });\n\n    element.on('compositionend', function() {\n      composing = false;\n      listener();\n    });\n  }\n\n  var timeout;\n\n  var listener = function(ev) {\n    if (timeout) {\n      $browser.defer.cancel(timeout);\n      timeout = null;\n    }\n    if (composing) return;\n    var value = element.val(),\n        event = ev && ev.type;\n\n    // By default we will trim the value\n    // If the attribute ng-trim exists we will avoid trimming\n    // If input type is 'password', the value is never trimmed\n    if (type !== 'password' && (!attr.ngTrim || attr.ngTrim !== 'false')) {\n      value = trim(value);\n    }\n\n    // If a control is suffering from bad input (due to native validators), browsers discard its\n    // value, so it may be necessary to revalidate (by calling $setViewValue again) even if the\n    // control's value is the same empty value twice in a row.\n    if (ctrl.$viewValue !== value || (value === '' && ctrl.$$hasNativeValidators)) {\n      ctrl.$setViewValue(value, event);\n    }\n  };\n\n  // if the browser does support \"input\" event, we are fine - except on IE9 which doesn't fire the\n  // input event on backspace, delete or cut\n  if ($sniffer.hasEvent('input')) {\n    element.on('input', listener);\n  } else {\n    var deferListener = function(ev, input, origValue) {\n      if (!timeout) {\n        timeout = $browser.defer(function() {\n          timeout = null;\n          if (!input || input.value !== origValue) {\n            listener(ev);\n          }\n        });\n      }\n    };\n\n    element.on('keydown', /** @this */ function(event) {\n      var key = event.keyCode;\n\n      // ignore\n      //    command            modifiers                   arrows\n      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\n\n      deferListener(event, this, this.value);\n    });\n\n    // if user modifies input value using context menu in IE, we need \"paste\" and \"cut\" events to catch it\n    if ($sniffer.hasEvent('paste')) {\n      element.on('paste cut', deferListener);\n    }\n  }\n\n  // if user paste into input using mouse on older browser\n  // or form autocomplete on newer browser, we need \"change\" event to catch it\n  element.on('change', listener);\n\n  // Some native input types (date-family) have the ability to change validity without\n  // firing any input/change events.\n  // For these event types, when native validators are present and the browser supports the type,\n  // check for validity changes on various DOM events.\n  if (PARTIAL_VALIDATION_TYPES[type] && ctrl.$$hasNativeValidators && type === attr.type) {\n    element.on(PARTIAL_VALIDATION_EVENTS, /** @this */ function(ev) {\n      if (!timeout) {\n        var validity = this[VALIDITY_STATE_PROPERTY];\n        var origBadInput = validity.badInput;\n        var origTypeMismatch = validity.typeMismatch;\n        timeout = $browser.defer(function() {\n          timeout = null;\n          if (validity.badInput !== origBadInput || validity.typeMismatch !== origTypeMismatch) {\n            listener(ev);\n          }\n        });\n      }\n    });\n  }\n\n  ctrl.$render = function() {\n    // Workaround for Firefox validation #12102.\n    var value = ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue;\n    if (element.val() !== value) {\n      element.val(value);\n    }\n  };\n}\n\nfunction weekParser(isoWeek, existingDate) {\n  if (isDate(isoWeek)) {\n    return isoWeek;\n  }\n\n  if (isString(isoWeek)) {\n    WEEK_REGEXP.lastIndex = 0;\n    var parts = WEEK_REGEXP.exec(isoWeek);\n    if (parts) {\n      var year = +parts[1],\n          week = +parts[2],\n          hours = 0,\n          minutes = 0,\n          seconds = 0,\n          milliseconds = 0,\n          firstThurs = getFirstThursdayOfYear(year),\n          addDays = (week - 1) * 7;\n\n      if (existingDate) {\n        hours = existingDate.getHours();\n        minutes = existingDate.getMinutes();\n        seconds = existingDate.getSeconds();\n        milliseconds = existingDate.getMilliseconds();\n      }\n\n      return new Date(year, 0, firstThurs.getDate() + addDays, hours, minutes, seconds, milliseconds);\n    }\n  }\n\n  return NaN;\n}\n\nfunction createDateParser(regexp, mapping) {\n  return function(iso, date) {\n    var parts, map;\n\n    if (isDate(iso)) {\n      return iso;\n    }\n\n    if (isString(iso)) {\n      // When a date is JSON'ified to wraps itself inside of an extra\n      // set of double quotes. This makes the date parsing code unable\n      // to match the date string and parse it as a date.\n      if (iso.charAt(0) === '\"' && iso.charAt(iso.length - 1) === '\"') {\n        iso = iso.substring(1, iso.length - 1);\n      }\n      if (ISO_DATE_REGEXP.test(iso)) {\n        return new Date(iso);\n      }\n      regexp.lastIndex = 0;\n      parts = regexp.exec(iso);\n\n      if (parts) {\n        parts.shift();\n        if (date) {\n          map = {\n            yyyy: date.getFullYear(),\n            MM: date.getMonth() + 1,\n            dd: date.getDate(),\n            HH: date.getHours(),\n            mm: date.getMinutes(),\n            ss: date.getSeconds(),\n            sss: date.getMilliseconds() / 1000\n          };\n        } else {\n          map = { yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0 };\n        }\n\n        forEach(parts, function(part, index) {\n          if (index < mapping.length) {\n            map[mapping[index]] = +part;\n          }\n        });\n        return new Date(map.yyyy, map.MM - 1, map.dd, map.HH, map.mm, map.ss || 0, map.sss * 1000 || 0);\n      }\n    }\n\n    return NaN;\n  };\n}\n\nfunction createDateInputType(type, regexp, parseDate, format) {\n  return function dynamicDateInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter) {\n    badInputChecker(scope, element, attr, ctrl);\n    baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n    var timezone = ctrl && ctrl.$options.getOption('timezone');\n    var previousDate;\n\n    ctrl.$$parserName = type;\n    ctrl.$parsers.push(function(value) {\n      if (ctrl.$isEmpty(value)) return null;\n      if (regexp.test(value)) {\n        // Note: We cannot read ctrl.$modelValue, as there might be a different\n        // parser/formatter in the processing chain so that the model\n        // contains some different data format!\n        var parsedDate = parseDate(value, previousDate);\n        if (timezone) {\n          parsedDate = convertTimezoneToLocal(parsedDate, timezone);\n        }\n        return parsedDate;\n      }\n      return undefined;\n    });\n\n    ctrl.$formatters.push(function(value) {\n      if (value && !isDate(value)) {\n        throw ngModelMinErr('datefmt', 'Expected `{0}` to be a date', value);\n      }\n      if (isValidDate(value)) {\n        previousDate = value;\n        if (previousDate && timezone) {\n          previousDate = convertTimezoneToLocal(previousDate, timezone, true);\n        }\n        return $filter('date')(value, format, timezone);\n      } else {\n        previousDate = null;\n        return '';\n      }\n    });\n\n    if (isDefined(attr.min) || attr.ngMin) {\n      var minVal;\n      ctrl.$validators.min = function(value) {\n        return !isValidDate(value) || isUndefined(minVal) || parseDate(value) >= minVal;\n      };\n      attr.$observe('min', function(val) {\n        minVal = parseObservedDateValue(val);\n        ctrl.$validate();\n      });\n    }\n\n    if (isDefined(attr.max) || attr.ngMax) {\n      var maxVal;\n      ctrl.$validators.max = function(value) {\n        return !isValidDate(value) || isUndefined(maxVal) || parseDate(value) <= maxVal;\n      };\n      attr.$observe('max', function(val) {\n        maxVal = parseObservedDateValue(val);\n        ctrl.$validate();\n      });\n    }\n\n    function isValidDate(value) {\n      // Invalid Date: getTime() returns NaN\n      return value && !(value.getTime && value.getTime() !== value.getTime());\n    }\n\n    function parseObservedDateValue(val) {\n      return isDefined(val) && !isDate(val) ? parseDate(val) || undefined : val;\n    }\n  };\n}\n\nfunction badInputChecker(scope, element, attr, ctrl) {\n  var node = element[0];\n  var nativeValidation = ctrl.$$hasNativeValidators = isObject(node.validity);\n  if (nativeValidation) {\n    ctrl.$parsers.push(function(value) {\n      var validity = element.prop(VALIDITY_STATE_PROPERTY) || {};\n      return validity.badInput || validity.typeMismatch ? undefined : value;\n    });\n  }\n}\n\nfunction numberFormatterParser(ctrl) {\n  ctrl.$$parserName = 'number';\n  ctrl.$parsers.push(function(value) {\n    if (ctrl.$isEmpty(value))      return null;\n    if (NUMBER_REGEXP.test(value)) return parseFloat(value);\n    return undefined;\n  });\n\n  ctrl.$formatters.push(function(value) {\n    if (!ctrl.$isEmpty(value)) {\n      if (!isNumber(value)) {\n        throw ngModelMinErr('numfmt', 'Expected `{0}` to be a number', value);\n      }\n      value = value.toString();\n    }\n    return value;\n  });\n}\n\nfunction parseNumberAttrVal(val) {\n  if (isDefined(val) && !isNumber(val)) {\n    val = parseFloat(val);\n  }\n  return !isNumberNaN(val) ? val : undefined;\n}\n\nfunction isNumberInteger(num) {\n  // See http://stackoverflow.com/questions/14636536/how-to-check-if-a-variable-is-an-integer-in-javascript#14794066\n  // (minus the assumption that `num` is a number)\n\n  // eslint-disable-next-line no-bitwise\n  return (num | 0) === num;\n}\n\nfunction countDecimals(num) {\n  var numString = num.toString();\n  var decimalSymbolIndex = numString.indexOf('.');\n\n  if (decimalSymbolIndex === -1) {\n    if (-1 < num && num < 1) {\n      // It may be in the exponential notation format (`1e-X`)\n      var match = /e-(\\d+)$/.exec(numString);\n\n      if (match) {\n        return Number(match[1]);\n      }\n    }\n\n    return 0;\n  }\n\n  return numString.length - decimalSymbolIndex - 1;\n}\n\nfunction isValidForStep(viewValue, stepBase, step) {\n  // At this point `stepBase` and `step` are expected to be non-NaN values\n  // and `viewValue` is expected to be a valid stringified number.\n  var value = Number(viewValue);\n\n  var isNonIntegerValue = !isNumberInteger(value);\n  var isNonIntegerStepBase = !isNumberInteger(stepBase);\n  var isNonIntegerStep = !isNumberInteger(step);\n\n  // Due to limitations in Floating Point Arithmetic (e.g. `0.3 - 0.2 !== 0.1` or\n  // `0.5 % 0.1 !== 0`), we need to convert all numbers to integers.\n  if (isNonIntegerValue || isNonIntegerStepBase || isNonIntegerStep) {\n    var valueDecimals = isNonIntegerValue ? countDecimals(value) : 0;\n    var stepBaseDecimals = isNonIntegerStepBase ? countDecimals(stepBase) : 0;\n    var stepDecimals = isNonIntegerStep ? countDecimals(step) : 0;\n\n    var decimalCount = Math.max(valueDecimals, stepBaseDecimals, stepDecimals);\n    var multiplier = Math.pow(10, decimalCount);\n\n    value = value * multiplier;\n    stepBase = stepBase * multiplier;\n    step = step * multiplier;\n\n    if (isNonIntegerValue) value = Math.round(value);\n    if (isNonIntegerStepBase) stepBase = Math.round(stepBase);\n    if (isNonIntegerStep) step = Math.round(step);\n  }\n\n  return (value - stepBase) % step === 0;\n}\n\nfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  badInputChecker(scope, element, attr, ctrl);\n  numberFormatterParser(ctrl);\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var minVal;\n  var maxVal;\n\n  if (isDefined(attr.min) || attr.ngMin) {\n    ctrl.$validators.min = function(value) {\n      return ctrl.$isEmpty(value) || isUndefined(minVal) || value >= minVal;\n    };\n\n    attr.$observe('min', function(val) {\n      minVal = parseNumberAttrVal(val);\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    });\n  }\n\n  if (isDefined(attr.max) || attr.ngMax) {\n    ctrl.$validators.max = function(value) {\n      return ctrl.$isEmpty(value) || isUndefined(maxVal) || value <= maxVal;\n    };\n\n    attr.$observe('max', function(val) {\n      maxVal = parseNumberAttrVal(val);\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    });\n  }\n\n  if (isDefined(attr.step) || attr.ngStep) {\n    var stepVal;\n    ctrl.$validators.step = function(modelValue, viewValue) {\n      return ctrl.$isEmpty(viewValue) || isUndefined(stepVal) ||\n             isValidForStep(viewValue, minVal || 0, stepVal);\n    };\n\n    attr.$observe('step', function(val) {\n      stepVal = parseNumberAttrVal(val);\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    });\n  }\n}\n\nfunction rangeInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  badInputChecker(scope, element, attr, ctrl);\n  numberFormatterParser(ctrl);\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var supportsRange = ctrl.$$hasNativeValidators && element[0].type === 'range',\n      minVal = supportsRange ? 0 : undefined,\n      maxVal = supportsRange ? 100 : undefined,\n      stepVal = supportsRange ? 1 : undefined,\n      validity = element[0].validity,\n      hasMinAttr = isDefined(attr.min),\n      hasMaxAttr = isDefined(attr.max),\n      hasStepAttr = isDefined(attr.step);\n\n  var originalRender = ctrl.$render;\n\n  ctrl.$render = supportsRange && isDefined(validity.rangeUnderflow) && isDefined(validity.rangeOverflow) ?\n    //Browsers that implement range will set these values automatically, but reading the adjusted values after\n    //$render would cause the min / max validators to be applied with the wrong value\n    function rangeRender() {\n      originalRender();\n      ctrl.$setViewValue(element.val());\n    } :\n    originalRender;\n\n  if (hasMinAttr) {\n    ctrl.$validators.min = supportsRange ?\n      // Since all browsers set the input to a valid value, we don't need to check validity\n      function noopMinValidator() { return true; } :\n      // non-support browsers validate the min val\n      function minValidator(modelValue, viewValue) {\n        return ctrl.$isEmpty(viewValue) || isUndefined(minVal) || viewValue >= minVal;\n      };\n\n    setInitialValueAndObserver('min', minChange);\n  }\n\n  if (hasMaxAttr) {\n    ctrl.$validators.max = supportsRange ?\n      // Since all browsers set the input to a valid value, we don't need to check validity\n      function noopMaxValidator() { return true; } :\n      // non-support browsers validate the max val\n      function maxValidator(modelValue, viewValue) {\n        return ctrl.$isEmpty(viewValue) || isUndefined(maxVal) || viewValue <= maxVal;\n      };\n\n    setInitialValueAndObserver('max', maxChange);\n  }\n\n  if (hasStepAttr) {\n    ctrl.$validators.step = supportsRange ?\n      function nativeStepValidator() {\n        // Currently, only FF implements the spec on step change correctly (i.e. adjusting the\n        // input element value to a valid value). It's possible that other browsers set the stepMismatch\n        // validity error instead, so we can at least report an error in that case.\n        return !validity.stepMismatch;\n      } :\n      // ngStep doesn't set the setp attr, so the browser doesn't adjust the input value as setting step would\n      function stepValidator(modelValue, viewValue) {\n        return ctrl.$isEmpty(viewValue) || isUndefined(stepVal) ||\n               isValidForStep(viewValue, minVal || 0, stepVal);\n      };\n\n    setInitialValueAndObserver('step', stepChange);\n  }\n\n  function setInitialValueAndObserver(htmlAttrName, changeFn) {\n    // interpolated attributes set the attribute value only after a digest, but we need the\n    // attribute value when the input is first rendered, so that the browser can adjust the\n    // input value based on the min/max value\n    element.attr(htmlAttrName, attr[htmlAttrName]);\n    attr.$observe(htmlAttrName, changeFn);\n  }\n\n  function minChange(val) {\n    minVal = parseNumberAttrVal(val);\n    // ignore changes before model is initialized\n    if (isNumberNaN(ctrl.$modelValue)) {\n      return;\n    }\n\n    if (supportsRange) {\n      var elVal = element.val();\n      // IE11 doesn't set the el val correctly if the minVal is greater than the element value\n      if (minVal > elVal) {\n        elVal = minVal;\n        element.val(elVal);\n      }\n      ctrl.$setViewValue(elVal);\n    } else {\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    }\n  }\n\n  function maxChange(val) {\n    maxVal = parseNumberAttrVal(val);\n    // ignore changes before model is initialized\n    if (isNumberNaN(ctrl.$modelValue)) {\n      return;\n    }\n\n    if (supportsRange) {\n      var elVal = element.val();\n      // IE11 doesn't set the el val correctly if the maxVal is less than the element value\n      if (maxVal < elVal) {\n        element.val(maxVal);\n        // IE11 and Chrome don't set the value to the minVal when max < min\n        elVal = maxVal < minVal ? minVal : maxVal;\n      }\n      ctrl.$setViewValue(elVal);\n    } else {\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    }\n  }\n\n  function stepChange(val) {\n    stepVal = parseNumberAttrVal(val);\n    // ignore changes before model is initialized\n    if (isNumberNaN(ctrl.$modelValue)) {\n      return;\n    }\n\n    // Some browsers don't adjust the input value correctly, but set the stepMismatch error\n    if (supportsRange && ctrl.$viewValue !== element.val()) {\n      ctrl.$setViewValue(element.val());\n    } else {\n      // TODO(matsko): implement validateLater to reduce number of validations\n      ctrl.$validate();\n    }\n  }\n}\n\nfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  // Note: no badInputChecker here by purpose as `url` is only a validation\n  // in browsers, i.e. we can always read out input.value even if it is not valid!\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n  stringBasedInputType(ctrl);\n\n  ctrl.$$parserName = 'url';\n  ctrl.$validators.url = function(modelValue, viewValue) {\n    var value = modelValue || viewValue;\n    return ctrl.$isEmpty(value) || URL_REGEXP.test(value);\n  };\n}\n\nfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  // Note: no badInputChecker here by purpose as `url` is only a validation\n  // in browsers, i.e. we can always read out input.value even if it is not valid!\n  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);\n  stringBasedInputType(ctrl);\n\n  ctrl.$$parserName = 'email';\n  ctrl.$validators.email = function(modelValue, viewValue) {\n    var value = modelValue || viewValue;\n    return ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value);\n  };\n}\n\nfunction radioInputType(scope, element, attr, ctrl) {\n  var doTrim = !attr.ngTrim || trim(attr.ngTrim) !== 'false';\n  // make the name unique, if not defined\n  if (isUndefined(attr.name)) {\n    element.attr('name', nextUid());\n  }\n\n  var listener = function(ev) {\n    var value;\n    if (element[0].checked) {\n      value = attr.value;\n      if (doTrim) {\n        value = trim(value);\n      }\n      ctrl.$setViewValue(value, ev && ev.type);\n    }\n  };\n\n  element.on('click', listener);\n\n  ctrl.$render = function() {\n    var value = attr.value;\n    if (doTrim) {\n      value = trim(value);\n    }\n    element[0].checked = (value === ctrl.$viewValue);\n  };\n\n  attr.$observe('value', ctrl.$render);\n}\n\nfunction parseConstantExpr($parse, context, name, expression, fallback) {\n  var parseFn;\n  if (isDefined(expression)) {\n    parseFn = $parse(expression);\n    if (!parseFn.constant) {\n      throw ngModelMinErr('constexpr', 'Expected constant expression for `{0}`, but saw ' +\n                                   '`{1}`.', name, expression);\n    }\n    return parseFn(context);\n  }\n  return fallback;\n}\n\nfunction checkboxInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {\n  var trueValue = parseConstantExpr($parse, scope, 'ngTrueValue', attr.ngTrueValue, true);\n  var falseValue = parseConstantExpr($parse, scope, 'ngFalseValue', attr.ngFalseValue, false);\n\n  var listener = function(ev) {\n    ctrl.$setViewValue(element[0].checked, ev && ev.type);\n  };\n\n  element.on('click', listener);\n\n  ctrl.$render = function() {\n    element[0].checked = ctrl.$viewValue;\n  };\n\n  // Override the standard `$isEmpty` because the $viewValue of an empty checkbox is always set to `false`\n  // This is because of the parser below, which compares the `$modelValue` with `trueValue` to convert\n  // it to a boolean.\n  ctrl.$isEmpty = function(value) {\n    return value === false;\n  };\n\n  ctrl.$formatters.push(function(value) {\n    return equals(value, trueValue);\n  });\n\n  ctrl.$parsers.push(function(value) {\n    return value ? trueValue : falseValue;\n  });\n}\n\n\n/**\n * @ngdoc directive\n * @name textarea\n * @restrict E\n *\n * @description\n * HTML textarea element control with angular data-binding. The data-binding and validation\n * properties of this element are exactly the same as those of the\n * {@link ng.directive:input input element}.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n *    length.\n * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n *    does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n *    If the expression evaluates to a RegExp object, then this is used directly.\n *    If the expression evaluates to a string, then it will be converted to a RegExp\n *    after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n *    `new RegExp('^abc$')`.<br />\n *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n *    start at the index of the last search's match, thus not taking the whole input value into\n *    account.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n *\n * @knownIssue\n *\n * When specifying the `placeholder` attribute of `<textarea>`, Internet Explorer will temporarily\n * insert the placeholder value as the textarea's content. If the placeholder value contains\n * interpolation (`{{ ... }}`), an error will be logged in the console when Angular tries to update\n * the value of the by-then-removed text node. This doesn't affect the functionality of the\n * textarea, but can be undesirable.\n *\n * You can work around this Internet Explorer issue by using `ng-attr-placeholder` instead of\n * `placeholder` on textareas, whenever you need interpolation in the placeholder value. You can\n * find more details on `ngAttr` in the\n * [Interpolation](guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes) section of the\n * Developer Guide.\n */\n\n\n/**\n * @ngdoc directive\n * @name input\n * @restrict E\n *\n * @description\n * HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,\n * input state control, and validation.\n * Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Not every feature offered is available for all input types.\n * Specifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.\n * </div>\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {boolean=} ngRequired Sets `required` attribute if set to true\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n *    length.\n * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n *    value does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n *    If the expression evaluates to a RegExp object, then this is used directly.\n *    If the expression evaluates to a string, then it will be converted to a RegExp\n *    after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n *    `new RegExp('^abc$')`.<br />\n *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n *    start at the index of the last search's match, thus not taking the whole input value into\n *    account.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n *    This parameter is ignored for input[type=password] controls, which will never trim the\n *    input.\n *\n * @example\n    <example name=\"input-directive\" module=\"inputExample\">\n      <file name=\"index.html\">\n       <script>\n          angular.module('inputExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.user = {name: 'guest', last: 'visitor'};\n            }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <form name=\"myForm\">\n           <label>\n              User name:\n              <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n           </label>\n           <div role=\"alert\">\n             <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n              Required!</span>\n           </div>\n           <label>\n              Last name:\n              <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n              ng-minlength=\"3\" ng-maxlength=\"10\">\n           </label>\n           <div role=\"alert\">\n             <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n               Too short!</span>\n             <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n               Too long!</span>\n           </div>\n         </form>\n         <hr>\n         <tt>user = {{user}}</tt><br/>\n         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br/>\n         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br/>\n         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br/>\n         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br/>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br/>\n         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br/>\n       </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        var user = element(by.exactBinding('user'));\n        var userNameValid = element(by.binding('myForm.userName.$valid'));\n        var lastNameValid = element(by.binding('myForm.lastName.$valid'));\n        var lastNameError = element(by.binding('myForm.lastName.$error'));\n        var formValid = element(by.binding('myForm.$valid'));\n        var userNameInput = element(by.model('user.name'));\n        var userLastInput = element(by.model('user.last'));\n\n        it('should initialize to model', function() {\n          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"visitor\"}');\n          expect(userNameValid.getText()).toContain('true');\n          expect(formValid.getText()).toContain('true');\n        });\n\n        it('should be invalid if empty when required', function() {\n          userNameInput.clear();\n          userNameInput.sendKeys('');\n\n          expect(user.getText()).toContain('{\"last\":\"visitor\"}');\n          expect(userNameValid.getText()).toContain('false');\n          expect(formValid.getText()).toContain('false');\n        });\n\n        it('should be valid if empty when min length is set', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"\"}');\n          expect(lastNameValid.getText()).toContain('true');\n          expect(formValid.getText()).toContain('true');\n        });\n\n        it('should be invalid if less than required min length', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('xx');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n          expect(lastNameValid.getText()).toContain('false');\n          expect(lastNameError.getText()).toContain('minlength');\n          expect(formValid.getText()).toContain('false');\n        });\n\n        it('should be invalid if longer than max length', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('some ridiculously long name');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n          expect(lastNameValid.getText()).toContain('false');\n          expect(lastNameError.getText()).toContain('maxlength');\n          expect(formValid.getText()).toContain('false');\n        });\n      </file>\n    </example>\n */\nvar inputDirective = ['$browser', '$sniffer', '$filter', '$parse',\n    function($browser, $sniffer, $filter, $parse) {\n  return {\n    restrict: 'E',\n    require: ['?ngModel'],\n    link: {\n      pre: function(scope, element, attr, ctrls) {\n        if (ctrls[0]) {\n          (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrls[0], $sniffer,\n                                                              $browser, $filter, $parse);\n        }\n      }\n    }\n  };\n}];\n\n\n\nvar CONSTANT_VALUE_REGEXP = /^(true|false|\\d+)$/;\n/**\n * @ngdoc directive\n * @name ngValue\n *\n * @description\n * Binds the given expression to the value of the element.\n *\n * It is mainly used on {@link input[radio] `input[radio]`} and option elements,\n * so that when the element is selected, the {@link ngModel `ngModel`} of that element (or its\n * {@link select `select`} parent element) is set to the bound value. It is especially useful\n * for dynamically generated lists using {@link ngRepeat `ngRepeat`}, as shown below.\n *\n * It can also be used to achieve one-way binding of a given expression to an input element\n * such as an `input[text]` or a `textarea`, when that element does not use ngModel.\n *\n * @element input\n * @param {string=} ngValue angular expression, whose value will be bound to the `value` attribute\n * and `value` property of the element.\n *\n * @example\n    <example name=\"ngValue-directive\" module=\"valueExample\">\n      <file name=\"index.html\">\n       <script>\n          angular.module('valueExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.names = ['pizza', 'unicorns', 'robots'];\n              $scope.my = { favorite: 'unicorns' };\n            }]);\n       </script>\n        <form ng-controller=\"ExampleController\">\n          <h2>Which is your favorite?</h2>\n            <label ng-repeat=\"name in names\" for=\"{{name}}\">\n              {{name}}\n              <input type=\"radio\"\n                     ng-model=\"my.favorite\"\n                     ng-value=\"name\"\n                     id=\"{{name}}\"\n                     name=\"favorite\">\n            </label>\n          <div>You chose {{my.favorite}}</div>\n        </form>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        var favorite = element(by.binding('my.favorite'));\n\n        it('should initialize to model', function() {\n          expect(favorite.getText()).toContain('unicorns');\n        });\n        it('should bind the values to the inputs', function() {\n          element.all(by.model('my.favorite')).get(0).click();\n          expect(favorite.getText()).toContain('pizza');\n        });\n      </file>\n    </example>\n */\nvar ngValueDirective = function() {\n  /**\n   *  inputs use the value attribute as their default value if the value property is not set.\n   *  Once the value property has been set (by adding input), it will not react to changes to\n   *  the value attribute anymore. Setting both attribute and property fixes this behavior, and\n   *  makes it possible to use ngValue as a sort of one-way bind.\n   */\n  function updateElementValue(element, attr, value) {\n    // Support: IE9 only\n    // In IE9 values are converted to string (e.g. `input.value = null` results in `input.value === 'null'`).\n    var propValue = isDefined(value) ? value : (msie === 9) ? '' : null;\n    element.prop('value', propValue);\n    attr.$set('value', value);\n  }\n\n  return {\n    restrict: 'A',\n    priority: 100,\n    compile: function(tpl, tplAttr) {\n      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\n        return function ngValueConstantLink(scope, elm, attr) {\n          var value = scope.$eval(attr.ngValue);\n          updateElementValue(elm, attr, value);\n        };\n      } else {\n        return function ngValueLink(scope, elm, attr) {\n          scope.$watch(attr.ngValue, function valueWatchAction(value) {\n            updateElementValue(elm, attr, value);\n          });\n        };\n      }\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ngBind\n * @restrict AC\n *\n * @description\n * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\n * with the value of a given expression, and to update the text content when the value of that\n * expression changes.\n *\n * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\n * `{{ expression }}` which is similar but less verbose.\n *\n * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\n * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\n * element attribute, it makes the bindings invisible to the user while the page is loading.\n *\n * An alternative solution to this problem would be using the\n * {@link ng.directive:ngCloak ngCloak} directive.\n *\n *\n * @element ANY\n * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\n *\n * @example\n * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\n   <example module=\"bindExample\" name=\"ng-bind\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('bindExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.name = 'Whirled';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <label>Enter name: <input type=\"text\" ng-model=\"name\"></label><br>\n         Hello <span ng-bind=\"name\"></span>!\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind', function() {\n         var nameInput = element(by.model('name'));\n\n         expect(element(by.binding('name')).getText()).toBe('Whirled');\n         nameInput.clear();\n         nameInput.sendKeys('world');\n         expect(element(by.binding('name')).getText()).toBe('world');\n       });\n     </file>\n   </example>\n */\nvar ngBindDirective = ['$compile', function($compile) {\n  return {\n    restrict: 'AC',\n    compile: function ngBindCompile(templateElement) {\n      $compile.$$addBindingClass(templateElement);\n      return function ngBindLink(scope, element, attr) {\n        $compile.$$addBindingInfo(element, attr.ngBind);\n        element = element[0];\n        scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\n          element.textContent = stringify(value);\n        });\n      };\n    }\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngBindTemplate\n *\n * @description\n * The `ngBindTemplate` directive specifies that the element\n * text content should be replaced with the interpolation of the template\n * in the `ngBindTemplate` attribute.\n * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\n * expressions. This directive is needed since some HTML elements\n * (such as TITLE and OPTION) cannot contain SPAN elements.\n *\n * @element ANY\n * @param {string} ngBindTemplate template of form\n *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\n *\n * @example\n * Try it here: enter text in text box and watch the greeting change.\n   <example module=\"bindExample\" name=\"ng-bind-template\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('bindExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.salutation = 'Hello';\n             $scope.name = 'World';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n        <label>Salutation: <input type=\"text\" ng-model=\"salutation\"></label><br>\n        <label>Name: <input type=\"text\" ng-model=\"name\"></label><br>\n        <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind', function() {\n         var salutationElem = element(by.binding('salutation'));\n         var salutationInput = element(by.model('salutation'));\n         var nameInput = element(by.model('name'));\n\n         expect(salutationElem.getText()).toBe('Hello World!');\n\n         salutationInput.clear();\n         salutationInput.sendKeys('Greetings');\n         nameInput.clear();\n         nameInput.sendKeys('user');\n\n         expect(salutationElem.getText()).toBe('Greetings user!');\n       });\n     </file>\n   </example>\n */\nvar ngBindTemplateDirective = ['$interpolate', '$compile', function($interpolate, $compile) {\n  return {\n    compile: function ngBindTemplateCompile(templateElement) {\n      $compile.$$addBindingClass(templateElement);\n      return function ngBindTemplateLink(scope, element, attr) {\n        var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\n        $compile.$$addBindingInfo(element, interpolateFn.expressions);\n        element = element[0];\n        attr.$observe('ngBindTemplate', function(value) {\n          element.textContent = isUndefined(value) ? '' : value;\n        });\n      };\n    }\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngBindHtml\n *\n * @description\n * Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default,\n * the resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.\n * To utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link\n * ngSanitize} in your module's dependencies (not in core Angular). In order to use {@link ngSanitize}\n * in your module's dependencies, you need to include \"angular-sanitize.js\" in your application.\n *\n * You may also bypass sanitization for values you know are safe. To do so, bind to\n * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example\n * under {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.\n *\n * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you\n * will have an exception (instead of an exploit.)\n *\n * @element ANY\n * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.\n *\n * @example\n\n   <example module=\"bindHtmlExample\" deps=\"angular-sanitize.js\" name=\"ng-bind-html\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n        <p ng-bind-html=\"myHTML\"></p>\n       </div>\n     </file>\n\n     <file name=\"script.js\">\n       angular.module('bindHtmlExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.myHTML =\n              'I am an <code>HTML</code>string with ' +\n              '<a href=\"#\">links!</a> and other <em>stuff</em>';\n         }]);\n     </file>\n\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind-html', function() {\n         expect(element(by.binding('myHTML')).getText()).toBe(\n             'I am an HTMLstring with links! and other stuff');\n       });\n     </file>\n   </example>\n */\nvar ngBindHtmlDirective = ['$sce', '$parse', '$compile', function($sce, $parse, $compile) {\n  return {\n    restrict: 'A',\n    compile: function ngBindHtmlCompile(tElement, tAttrs) {\n      var ngBindHtmlGetter = $parse(tAttrs.ngBindHtml);\n      var ngBindHtmlWatch = $parse(tAttrs.ngBindHtml, function sceValueOf(val) {\n        // Unwrap the value to compare the actual inner safe value, not the wrapper object.\n        return $sce.valueOf(val);\n      });\n      $compile.$$addBindingClass(tElement);\n\n      return function ngBindHtmlLink(scope, element, attr) {\n        $compile.$$addBindingInfo(element, attr.ngBindHtml);\n\n        scope.$watch(ngBindHtmlWatch, function ngBindHtmlWatchAction() {\n          // The watched value is the unwrapped value. To avoid re-escaping, use the direct getter.\n          var value = ngBindHtmlGetter(scope);\n          element.html($sce.getTrustedHtml(value) || '');\n        });\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngChange\n *\n * @description\n * Evaluate the given expression when the user changes the input.\n * The expression is evaluated immediately, unlike the JavaScript onchange event\n * which only triggers at the end of a change (usually, when the user leaves the\n * form element or presses the return key).\n *\n * The `ngChange` expression is only evaluated when a change in the input value causes\n * a new value to be committed to the model.\n *\n * It will not be evaluated:\n * * if the value returned from the `$parsers` transformation pipeline has not changed\n * * if the input has continued to be invalid since the model will stay `null`\n * * if the model is changed programmatically and not by a change to the input value\n *\n *\n * Note, this directive requires `ngModel` to be present.\n *\n * @element input\n * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change\n * in input value.\n *\n * @example\n * <example name=\"ngChange-directive\" module=\"changeExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('changeExample', [])\n *         .controller('ExampleController', ['$scope', function($scope) {\n *           $scope.counter = 0;\n *           $scope.change = function() {\n *             $scope.counter++;\n *           };\n *         }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n *       <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n *       <label for=\"ng-change-example2\">Confirmed</label><br />\n *       <tt>debug = {{confirmed}}</tt><br/>\n *       <tt>counter = {{counter}}</tt><br/>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     var counter = element(by.binding('counter'));\n *     var debug = element(by.binding('confirmed'));\n *\n *     it('should evaluate the expression if changing from view', function() {\n *       expect(counter.getText()).toContain('0');\n *\n *       element(by.id('ng-change-example1')).click();\n *\n *       expect(counter.getText()).toContain('1');\n *       expect(debug.getText()).toContain('true');\n *     });\n *\n *     it('should not evaluate the expression if changing from model', function() {\n *       element(by.id('ng-change-example2')).click();\n\n *       expect(counter.getText()).toContain('0');\n *       expect(debug.getText()).toContain('true');\n *     });\n *   </file>\n * </example>\n */\nvar ngChangeDirective = valueFn({\n  restrict: 'A',\n  require: 'ngModel',\n  link: function(scope, element, attr, ctrl) {\n    ctrl.$viewChangeListeners.push(function() {\n      scope.$eval(attr.ngChange);\n    });\n  }\n});\n\n/* exported\n  ngClassDirective,\n  ngClassEvenDirective,\n  ngClassOddDirective\n*/\n\nfunction classDirective(name, selector) {\n  name = 'ngClass' + name;\n  var indexWatchExpression;\n\n  return ['$parse', function($parse) {\n    return {\n      restrict: 'AC',\n      link: function(scope, element, attr) {\n        var expression = attr[name].trim();\n        var isOneTime = (expression.charAt(0) === ':') && (expression.charAt(1) === ':');\n\n        var watchInterceptor = isOneTime ? toFlatValue : toClassString;\n        var watchExpression = $parse(expression, watchInterceptor);\n        var watchAction = isOneTime ? ngClassOneTimeWatchAction : ngClassWatchAction;\n\n        var classCounts = element.data('$classCounts');\n        var oldModulo = true;\n        var oldClassString;\n\n        if (!classCounts) {\n          // Use createMap() to prevent class assumptions involving property\n          // names in Object.prototype\n          classCounts = createMap();\n          element.data('$classCounts', classCounts);\n        }\n\n        if (name !== 'ngClass') {\n          if (!indexWatchExpression) {\n            indexWatchExpression = $parse('$index', function moduloTwo($index) {\n              // eslint-disable-next-line no-bitwise\n              return $index & 1;\n            });\n          }\n\n          scope.$watch(indexWatchExpression, ngClassIndexWatchAction);\n        }\n\n        scope.$watch(watchExpression, watchAction, isOneTime);\n\n        function addClasses(classString) {\n          classString = digestClassCounts(split(classString), 1);\n          attr.$addClass(classString);\n        }\n\n        function removeClasses(classString) {\n          classString = digestClassCounts(split(classString), -1);\n          attr.$removeClass(classString);\n        }\n\n        function updateClasses(oldClassString, newClassString) {\n          var oldClassArray = split(oldClassString);\n          var newClassArray = split(newClassString);\n\n          var toRemoveArray = arrayDifference(oldClassArray, newClassArray);\n          var toAddArray = arrayDifference(newClassArray, oldClassArray);\n\n          var toRemoveString = digestClassCounts(toRemoveArray, -1);\n          var toAddString = digestClassCounts(toAddArray, 1);\n\n          attr.$addClass(toAddString);\n          attr.$removeClass(toRemoveString);\n        }\n\n        function digestClassCounts(classArray, count) {\n          var classesToUpdate = [];\n\n          forEach(classArray, function(className) {\n            if (count > 0 || classCounts[className]) {\n              classCounts[className] = (classCounts[className] || 0) + count;\n              if (classCounts[className] === +(count > 0)) {\n                classesToUpdate.push(className);\n              }\n            }\n          });\n\n          return classesToUpdate.join(' ');\n        }\n\n        function ngClassIndexWatchAction(newModulo) {\n          // This watch-action should run before the `ngClass[OneTime]WatchAction()`, thus it\n          // adds/removes `oldClassString`. If the `ngClass` expression has changed as well, the\n          // `ngClass[OneTime]WatchAction()` will update the classes.\n          if (newModulo === selector) {\n            addClasses(oldClassString);\n          } else {\n            removeClasses(oldClassString);\n          }\n\n          oldModulo = newModulo;\n        }\n\n        function ngClassOneTimeWatchAction(newClassValue) {\n          var newClassString = toClassString(newClassValue);\n\n          if (newClassString !== oldClassString) {\n            ngClassWatchAction(newClassString);\n          }\n        }\n\n        function ngClassWatchAction(newClassString) {\n          if (oldModulo === selector) {\n            updateClasses(oldClassString, newClassString);\n          }\n\n          oldClassString = newClassString;\n        }\n      }\n    };\n  }];\n\n  // Helpers\n  function arrayDifference(tokens1, tokens2) {\n    if (!tokens1 || !tokens1.length) return [];\n    if (!tokens2 || !tokens2.length) return tokens1;\n\n    var values = [];\n\n    outer:\n    for (var i = 0; i < tokens1.length; i++) {\n      var token = tokens1[i];\n      for (var j = 0; j < tokens2.length; j++) {\n        if (token === tokens2[j]) continue outer;\n      }\n      values.push(token);\n    }\n\n    return values;\n  }\n\n  function split(classString) {\n    return classString && classString.split(' ');\n  }\n\n  function toClassString(classValue) {\n    var classString = classValue;\n\n    if (isArray(classValue)) {\n      classString = classValue.map(toClassString).join(' ');\n    } else if (isObject(classValue)) {\n      classString = Object.keys(classValue).\n        filter(function(key) { return classValue[key]; }).\n        join(' ');\n    }\n\n    return classString;\n  }\n\n  function toFlatValue(classValue) {\n    var flatValue = classValue;\n\n    if (isArray(classValue)) {\n      flatValue = classValue.map(toFlatValue);\n    } else if (isObject(classValue)) {\n      var hasUndefined = false;\n\n      flatValue = Object.keys(classValue).filter(function(key) {\n        var value = classValue[key];\n\n        if (!hasUndefined && isUndefined(value)) {\n          hasUndefined = true;\n        }\n\n        return value;\n      });\n\n      if (hasUndefined) {\n        // Prevent the `oneTimeLiteralWatchInterceptor` from unregistering\n        // the watcher, by including at least one `undefined` value.\n        flatValue.push(undefined);\n      }\n    }\n\n    return flatValue;\n  }\n}\n\n/**\n * @ngdoc directive\n * @name ngClass\n * @restrict AC\n *\n * @description\n * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding\n * an expression that represents all classes to be added.\n *\n * The directive operates in three different ways, depending on which of three types the expression\n * evaluates to:\n *\n * 1. If the expression evaluates to a string, the string should be one or more space-delimited class\n * names.\n *\n * 2. If the expression evaluates to an object, then for each key-value pair of the\n * object with a truthy value the corresponding key is used as a class name.\n *\n * 3. If the expression evaluates to an array, each element of the array should either be a string as in\n * type 1 or an object as in type 2. This means that you can mix strings and objects together in an array\n * to give you more control over what CSS classes appear. See the code below for an example of this.\n *\n *\n * The directive won't add duplicate classes if a particular class was already set.\n *\n * When the expression changes, the previously added classes are removed and only then are the\n * new classes added.\n *\n * @knownIssue\n * You should not use {@link guide/interpolation interpolation} in the value of the `class`\n * attribute, when using the `ngClass` directive on the same element.\n * See {@link guide/interpolation#known-issues here} for more info.\n *\n * @animations\n * | Animation                        | Occurs                              |\n * |----------------------------------|-------------------------------------|\n * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |\n * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |\n *\n * @element ANY\n * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class\n *   names, an array, or a map of class names to boolean values. In the case of a map, the\n *   names of the properties whose values are truthy will be added as css classes to the\n *   element.\n *\n * @example Example that demonstrates basic bindings via ngClass directive.\n   <example name=\"ng-class\">\n     <file name=\"index.html\">\n       <p ng-class=\"{strike: deleted, bold: important, 'has-error': error}\">Map Syntax Example</p>\n       <label>\n          <input type=\"checkbox\" ng-model=\"deleted\">\n          deleted (apply \"strike\" class)\n       </label><br>\n       <label>\n          <input type=\"checkbox\" ng-model=\"important\">\n          important (apply \"bold\" class)\n       </label><br>\n       <label>\n          <input type=\"checkbox\" ng-model=\"error\">\n          error (apply \"has-error\" class)\n       </label>\n       <hr>\n       <p ng-class=\"style\">Using String Syntax</p>\n       <input type=\"text\" ng-model=\"style\"\n              placeholder=\"Type: bold strike red\" aria-label=\"Type: bold strike red\">\n       <hr>\n       <p ng-class=\"[style1, style2, style3]\">Using Array Syntax</p>\n       <input ng-model=\"style1\"\n              placeholder=\"Type: bold, strike or red\" aria-label=\"Type: bold, strike or red\"><br>\n       <input ng-model=\"style2\"\n              placeholder=\"Type: bold, strike or red\" aria-label=\"Type: bold, strike or red 2\"><br>\n       <input ng-model=\"style3\"\n              placeholder=\"Type: bold, strike or red\" aria-label=\"Type: bold, strike or red 3\"><br>\n       <hr>\n       <p ng-class=\"[style4, {orange: warning}]\">Using Array and Map Syntax</p>\n       <input ng-model=\"style4\" placeholder=\"Type: bold, strike\" aria-label=\"Type: bold, strike\"><br>\n       <label><input type=\"checkbox\" ng-model=\"warning\"> warning (apply \"orange\" class)</label>\n     </file>\n     <file name=\"style.css\">\n       .strike {\n           text-decoration: line-through;\n       }\n       .bold {\n           font-weight: bold;\n       }\n       .red {\n           color: red;\n       }\n       .has-error {\n           color: red;\n           background-color: yellow;\n       }\n       .orange {\n           color: orange;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var ps = element.all(by.css('p'));\n\n       it('should let you toggle the class', function() {\n\n         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);\n         expect(ps.first().getAttribute('class')).not.toMatch(/has-error/);\n\n         element(by.model('important')).click();\n         expect(ps.first().getAttribute('class')).toMatch(/bold/);\n\n         element(by.model('error')).click();\n         expect(ps.first().getAttribute('class')).toMatch(/has-error/);\n       });\n\n       it('should let you toggle string example', function() {\n         expect(ps.get(1).getAttribute('class')).toBe('');\n         element(by.model('style')).clear();\n         element(by.model('style')).sendKeys('red');\n         expect(ps.get(1).getAttribute('class')).toBe('red');\n       });\n\n       it('array example should have 3 classes', function() {\n         expect(ps.get(2).getAttribute('class')).toBe('');\n         element(by.model('style1')).sendKeys('bold');\n         element(by.model('style2')).sendKeys('strike');\n         element(by.model('style3')).sendKeys('red');\n         expect(ps.get(2).getAttribute('class')).toBe('bold strike red');\n       });\n\n       it('array with map example should have 2 classes', function() {\n         expect(ps.last().getAttribute('class')).toBe('');\n         element(by.model('style4')).sendKeys('bold');\n         element(by.model('warning')).click();\n         expect(ps.last().getAttribute('class')).toBe('bold orange');\n       });\n     </file>\n   </example>\n\n   ## Animations\n\n   The example below demonstrates how to perform animations using ngClass.\n\n   <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-class\">\n     <file name=\"index.html\">\n      <input id=\"setbtn\" type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n      <input id=\"clearbtn\" type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n      <br>\n      <span class=\"base-class\" ng-class=\"myVar\">Sample Text</span>\n     </file>\n     <file name=\"style.css\">\n       .base-class {\n         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n       }\n\n       .base-class.my-class {\n         color: red;\n         font-size:3em;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class', function() {\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\n           toMatch(/my-class/);\n\n         element(by.id('setbtn')).click();\n\n         expect(element(by.css('.base-class')).getAttribute('class')).\n           toMatch(/my-class/);\n\n         element(by.id('clearbtn')).click();\n\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\n           toMatch(/my-class/);\n       });\n     </file>\n   </example>\n\n\n   ## ngClass and pre-existing CSS3 Transitions/Animations\n   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.\n   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder\n   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure\n   to view the step by step details of {@link $animate#addClass $animate.addClass} and\n   {@link $animate#removeClass $animate.removeClass}.\n */\nvar ngClassDirective = classDirective('', true);\n\n/**\n * @ngdoc directive\n * @name ngClassOdd\n * @restrict AC\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except they work in\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n *\n * This directive can be applied only within the scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example name=\"ng-class-odd\">\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}}\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n           toMatch(/odd/);\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassOddDirective = classDirective('Odd', 0);\n\n/**\n * @ngdoc directive\n * @name ngClassEven\n * @restrict AC\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except they work in\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n *\n * This directive can be applied only within the scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\n *   result of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example name=\"ng-class-even\">\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}} &nbsp; &nbsp; &nbsp;\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n           toMatch(/odd/);\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassEvenDirective = classDirective('Even', 1);\n\n/**\n * @ngdoc directive\n * @name ngCloak\n * @restrict AC\n *\n * @description\n * The `ngCloak` directive is used to prevent the Angular html template from being briefly\n * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\n * directive to avoid the undesirable flicker effect caused by the html template display.\n *\n * The directive can be applied to the `<body>` element, but the preferred usage is to apply\n * multiple `ngCloak` directives to small portions of the page to permit progressive rendering\n * of the browser view.\n *\n * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and\n * `angular.min.js`.\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n *\n * ```css\n * [ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n *   display: none !important;\n * }\n * ```\n *\n * When this css rule is loaded by the browser, all html elements (including their children) that\n * are tagged with the `ngCloak` directive are hidden. When Angular encounters this directive\n * during the compilation of the template it deletes the `ngCloak` element attribute, making\n * the compiled element visible.\n *\n * For the best result, the `angular.js` script must be loaded in the head section of the html\n * document; alternatively, the css rule above must be included in the external stylesheet of the\n * application.\n *\n * @element ANY\n *\n * @example\n   <example name=\"ng-cloak\">\n     <file name=\"index.html\">\n        <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n        <div id=\"template2\" class=\"ng-cloak\">{{ 'world' }}</div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should remove the template directive and css class', function() {\n         expect($('#template1').getAttribute('ng-cloak')).\n           toBeNull();\n         expect($('#template2').getAttribute('ng-cloak')).\n           toBeNull();\n       });\n     </file>\n   </example>\n *\n */\nvar ngCloakDirective = ngDirective({\n  compile: function(element, attr) {\n    attr.$set('ngCloak', undefined);\n    element.removeClass('ng-cloak');\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngController\n *\n * @description\n * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular\n * supports the principles behind the Model-View-Controller design pattern.\n *\n * MVC components in angular:\n *\n * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties\n *   are accessed through bindings.\n * * View — The template (HTML with data bindings) that is rendered into the View.\n * * Controller — The `ngController` directive specifies a Controller class; the class contains business\n *   logic behind the application to decorate the scope with functions and values\n *\n * Note that you can also attach controllers to the DOM by declaring it in a route definition\n * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller\n * again using `ng-controller` in the template itself.  This will cause the controller to be attached\n * and executed twice.\n *\n * @element ANY\n * @scope\n * @priority 500\n * @param {expression} ngController Name of a constructor function registered with the current\n * {@link ng.$controllerProvider $controllerProvider} or an {@link guide/expression expression}\n * that on the current scope evaluates to a constructor function.\n *\n * The controller instance can be published into a scope property by specifying\n * `ng-controller=\"as propertyName\"`.\n *\n * If the current `$controllerProvider` is configured to use globals (via\n * {@link ng.$controllerProvider#allowGlobals `$controllerProvider.allowGlobals()` }), this may\n * also be the name of a globally accessible constructor function (deprecated, not recommended).\n *\n * @example\n * Here is a simple form for editing user contact information. Adding, removing, clearing, and\n * greeting are methods declared on the controller (see source tab). These methods can\n * easily be called from the angular markup. Any changes to the data are automatically reflected\n * in the View without the need for a manual update.\n *\n * Two different declaration styles are included below:\n *\n * * one binds methods and properties directly onto the controller using `this`:\n * `ng-controller=\"SettingsController1 as settings\"`\n * * one injects `$scope` into the controller:\n * `ng-controller=\"SettingsController2\"`\n *\n * The second option is more common in the Angular community, and is generally used in boilerplates\n * and in this guide. However, there are advantages to binding properties directly to the controller\n * and avoiding scope.\n *\n * * Using `controller as` makes it obvious which controller you are accessing in the template when\n * multiple controllers apply to an element.\n * * If you are writing your controllers as classes you have easier access to the properties and\n * methods, which will appear on the scope, from inside the controller code.\n * * Since there is always a `.` in the bindings, you don't have to worry about prototypal\n * inheritance masking primitives.\n *\n * This example demonstrates the `controller as` syntax.\n *\n * <example name=\"ngControllerAs\" module=\"controllerAsExample\">\n *   <file name=\"index.html\">\n *    <div id=\"ctrl-as-exmpl\" ng-controller=\"SettingsController1 as settings\">\n *      <label>Name: <input type=\"text\" ng-model=\"settings.name\"/></label>\n *      <button ng-click=\"settings.greet()\">greet</button><br/>\n *      Contact:\n *      <ul>\n *        <li ng-repeat=\"contact in settings.contacts\">\n *          <select ng-model=\"contact.type\" aria-label=\"Contact method\" id=\"select_{{$index}}\">\n *             <option>phone</option>\n *             <option>email</option>\n *          </select>\n *          <input type=\"text\" ng-model=\"contact.value\" aria-labelledby=\"select_{{$index}}\" />\n *          <button ng-click=\"settings.clearContact(contact)\">clear</button>\n *          <button ng-click=\"settings.removeContact(contact)\" aria-label=\"Remove\">X</button>\n *        </li>\n *        <li><button ng-click=\"settings.addContact()\">add</button></li>\n *     </ul>\n *    </div>\n *   </file>\n *   <file name=\"app.js\">\n *    angular.module('controllerAsExample', [])\n *      .controller('SettingsController1', SettingsController1);\n *\n *    function SettingsController1() {\n *      this.name = 'John Smith';\n *      this.contacts = [\n *        {type: 'phone', value: '408 555 1212'},\n *        {type: 'email', value: 'john.smith@example.org'}\n *      ];\n *    }\n *\n *    SettingsController1.prototype.greet = function() {\n *      alert(this.name);\n *    };\n *\n *    SettingsController1.prototype.addContact = function() {\n *      this.contacts.push({type: 'email', value: 'yourname@example.org'});\n *    };\n *\n *    SettingsController1.prototype.removeContact = function(contactToRemove) {\n *     var index = this.contacts.indexOf(contactToRemove);\n *      this.contacts.splice(index, 1);\n *    };\n *\n *    SettingsController1.prototype.clearContact = function(contact) {\n *      contact.type = 'phone';\n *      contact.value = '';\n *    };\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     it('should check controller as', function() {\n *       var container = element(by.id('ctrl-as-exmpl'));\n *         expect(container.element(by.model('settings.name'))\n *           .getAttribute('value')).toBe('John Smith');\n *\n *       var firstRepeat =\n *           container.element(by.repeater('contact in settings.contacts').row(0));\n *       var secondRepeat =\n *           container.element(by.repeater('contact in settings.contacts').row(1));\n *\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('408 555 1212');\n *\n *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('john.smith@example.org');\n *\n *       firstRepeat.element(by.buttonText('clear')).click();\n *\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('');\n *\n *       container.element(by.buttonText('add')).click();\n *\n *       expect(container.element(by.repeater('contact in settings.contacts').row(2))\n *           .element(by.model('contact.value'))\n *           .getAttribute('value'))\n *           .toBe('yourname@example.org');\n *     });\n *   </file>\n * </example>\n *\n * This example demonstrates the \"attach to `$scope`\" style of controller.\n *\n * <example name=\"ngController\" module=\"controllerExample\">\n *  <file name=\"index.html\">\n *   <div id=\"ctrl-exmpl\" ng-controller=\"SettingsController2\">\n *     <label>Name: <input type=\"text\" ng-model=\"name\"/></label>\n *     <button ng-click=\"greet()\">greet</button><br/>\n *     Contact:\n *     <ul>\n *       <li ng-repeat=\"contact in contacts\">\n *         <select ng-model=\"contact.type\" id=\"select_{{$index}}\">\n *            <option>phone</option>\n *            <option>email</option>\n *         </select>\n *         <input type=\"text\" ng-model=\"contact.value\" aria-labelledby=\"select_{{$index}}\" />\n *         <button ng-click=\"clearContact(contact)\">clear</button>\n *         <button ng-click=\"removeContact(contact)\">X</button>\n *       </li>\n *       <li>[ <button ng-click=\"addContact()\">add</button> ]</li>\n *    </ul>\n *   </div>\n *  </file>\n *  <file name=\"app.js\">\n *   angular.module('controllerExample', [])\n *     .controller('SettingsController2', ['$scope', SettingsController2]);\n *\n *   function SettingsController2($scope) {\n *     $scope.name = 'John Smith';\n *     $scope.contacts = [\n *       {type:'phone', value:'408 555 1212'},\n *       {type:'email', value:'john.smith@example.org'}\n *     ];\n *\n *     $scope.greet = function() {\n *       alert($scope.name);\n *     };\n *\n *     $scope.addContact = function() {\n *       $scope.contacts.push({type:'email', value:'yourname@example.org'});\n *     };\n *\n *     $scope.removeContact = function(contactToRemove) {\n *       var index = $scope.contacts.indexOf(contactToRemove);\n *       $scope.contacts.splice(index, 1);\n *     };\n *\n *     $scope.clearContact = function(contact) {\n *       contact.type = 'phone';\n *       contact.value = '';\n *     };\n *   }\n *  </file>\n *  <file name=\"protractor.js\" type=\"protractor\">\n *    it('should check controller', function() {\n *      var container = element(by.id('ctrl-exmpl'));\n *\n *      expect(container.element(by.model('name'))\n *          .getAttribute('value')).toBe('John Smith');\n *\n *      var firstRepeat =\n *          container.element(by.repeater('contact in contacts').row(0));\n *      var secondRepeat =\n *          container.element(by.repeater('contact in contacts').row(1));\n *\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('408 555 1212');\n *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('john.smith@example.org');\n *\n *      firstRepeat.element(by.buttonText('clear')).click();\n *\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('');\n *\n *      container.element(by.buttonText('add')).click();\n *\n *      expect(container.element(by.repeater('contact in contacts').row(2))\n *          .element(by.model('contact.value'))\n *          .getAttribute('value'))\n *          .toBe('yourname@example.org');\n *    });\n *  </file>\n *</example>\n\n */\nvar ngControllerDirective = [function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: '@',\n    priority: 500\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngCsp\n *\n * @restrict A\n * @element ANY\n * @description\n *\n * Angular has some features that can conflict with certain restrictions that are applied when using\n * [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) rules.\n *\n * If you intend to implement CSP with these rules then you must tell Angular not to use these\n * features.\n *\n * This is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.\n *\n *\n * The following default rules in CSP affect Angular:\n *\n * * The use of `eval()`, `Function(string)` and similar functions to dynamically create and execute\n * code from strings is forbidden. Angular makes use of this in the {@link $parse} service to\n * provide a 30% increase in the speed of evaluating Angular expressions. (This CSP rule can be\n * disabled with the CSP keyword `unsafe-eval`, but it is generally not recommended as it would\n * weaken the protections offered by CSP.)\n *\n * * The use of inline resources, such as inline `<script>` and `<style>` elements, are forbidden.\n * This prevents apps from injecting custom styles directly into the document. Angular makes use of\n * this to include some CSS rules (e.g. {@link ngCloak} and {@link ngHide}). To make these\n * directives work when a CSP rule is blocking inline styles, you must link to the `angular-csp.css`\n * in your HTML manually. (This CSP rule can be disabled with the CSP keyword `unsafe-inline`, but\n * it is generally not recommended as it would weaken the protections offered by CSP.)\n *\n * If you do not provide `ngCsp` then Angular tries to autodetect if CSP is blocking dynamic code\n * creation from strings (e.g., `unsafe-eval` not specified in CSP header) and automatically\n * deactivates this feature in the {@link $parse} service. This autodetection, however, triggers a\n * CSP error to be logged in the console:\n *\n * ```\n * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\n * script in the following Content Security Policy directive: \"default-src 'self'\". Note that\n * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.\n * ```\n *\n * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\n * directive on an element of the HTML document that appears before the `<script>` tag that loads\n * the `angular.js` file.\n *\n * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*\n *\n * You can specify which of the CSP related Angular features should be deactivated by providing\n * a value for the `ng-csp` attribute. The options are as follows:\n *\n * * no-inline-style: this stops Angular from injecting CSS styles into the DOM\n *\n * * no-unsafe-eval: this stops Angular from optimizing $parse with unsafe eval of strings\n *\n * You can use these values in the following combinations:\n *\n *\n * * No declaration means that Angular will assume that you can do inline styles, but it will do\n * a runtime check for unsafe-eval. E.g. `<body>`. This is backwardly compatible with previous\n * versions of Angular.\n *\n * * A simple `ng-csp` (or `data-ng-csp`) attribute will tell Angular to deactivate both inline\n * styles and unsafe eval. E.g. `<body ng-csp>`. This is backwardly compatible with previous\n * versions of Angular.\n *\n * * Specifying only `no-unsafe-eval` tells Angular that we must not use eval, but that we can\n * inject inline styles. E.g. `<body ng-csp=\"no-unsafe-eval\">`.\n *\n * * Specifying only `no-inline-style` tells Angular that we must not inject styles, but that we can\n * run eval - no automatic check for unsafe eval will occur. E.g. `<body ng-csp=\"no-inline-style\">`\n *\n * * Specifying both `no-unsafe-eval` and `no-inline-style` tells Angular that we must not inject\n * styles nor use eval, which is the same as an empty: ng-csp.\n * E.g.`<body ng-csp=\"no-inline-style;no-unsafe-eval\">`\n *\n * @example\n * This example shows how to apply the `ngCsp` directive to the `html` tag.\n   ```html\n     <!doctype html>\n     <html ng-app ng-csp>\n     ...\n     ...\n     </html>\n   ```\n  * @example\n      <!-- Note: the `.csp` suffix in the example name triggers CSP mode in our http server! -->\n      <example name=\"example.csp\" module=\"cspExample\" ng-csp=\"true\">\n        <file name=\"index.html\">\n          <div ng-controller=\"MainController as ctrl\">\n            <div>\n              <button ng-click=\"ctrl.inc()\" id=\"inc\">Increment</button>\n              <span id=\"counter\">\n                {{ctrl.counter}}\n              </span>\n            </div>\n\n            <div>\n              <button ng-click=\"ctrl.evil()\" id=\"evil\">Evil</button>\n              <span id=\"evilError\">\n                {{ctrl.evilError}}\n              </span>\n            </div>\n          </div>\n        </file>\n        <file name=\"script.js\">\n           angular.module('cspExample', [])\n             .controller('MainController', function MainController() {\n                this.counter = 0;\n                this.inc = function() {\n                  this.counter++;\n                };\n                this.evil = function() {\n                  try {\n                    eval('1+2'); // eslint-disable-line no-eval\n                  } catch (e) {\n                    this.evilError = e.message;\n                  }\n                };\n              });\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var util, webdriver;\n\n          var incBtn = element(by.id('inc'));\n          var counter = element(by.id('counter'));\n          var evilBtn = element(by.id('evil'));\n          var evilError = element(by.id('evilError'));\n\n          function getAndClearSevereErrors() {\n            return browser.manage().logs().get('browser').then(function(browserLog) {\n              return browserLog.filter(function(logEntry) {\n                return logEntry.level.value > webdriver.logging.Level.WARNING.value;\n              });\n            });\n          }\n\n          function clearErrors() {\n            getAndClearSevereErrors();\n          }\n\n          function expectNoErrors() {\n            getAndClearSevereErrors().then(function(filteredLog) {\n              expect(filteredLog.length).toEqual(0);\n              if (filteredLog.length) {\n                console.log('browser console errors: ' + util.inspect(filteredLog));\n              }\n            });\n          }\n\n          function expectError(regex) {\n            getAndClearSevereErrors().then(function(filteredLog) {\n              var found = false;\n              filteredLog.forEach(function(log) {\n                if (log.message.match(regex)) {\n                  found = true;\n                }\n              });\n              if (!found) {\n                throw new Error('expected an error that matches ' + regex);\n              }\n            });\n          }\n\n          beforeEach(function() {\n            util = require('util');\n            webdriver = require('selenium-webdriver');\n          });\n\n          // For now, we only test on Chrome,\n          // as Safari does not load the page with Protractor's injected scripts,\n          // and Firefox webdriver always disables content security policy (#6358)\n          if (browser.params.browser !== 'chrome') {\n            return;\n          }\n\n          it('should not report errors when the page is loaded', function() {\n            // clear errors so we are not dependent on previous tests\n            clearErrors();\n            // Need to reload the page as the page is already loaded when\n            // we come here\n            browser.driver.getCurrentUrl().then(function(url) {\n              browser.get(url);\n            });\n            expectNoErrors();\n          });\n\n          it('should evaluate expressions', function() {\n            expect(counter.getText()).toEqual('0');\n            incBtn.click();\n            expect(counter.getText()).toEqual('1');\n            expectNoErrors();\n          });\n\n          it('should throw and report an error when using \"eval\"', function() {\n            evilBtn.click();\n            expect(evilError.getText()).toMatch(/Content Security Policy/);\n            expectError(/Content Security Policy/);\n          });\n        </file>\n      </example>\n  */\n\n// `ngCsp` is not implemented as a proper directive any more, because we need it be processed while\n// we bootstrap the app (before `$parse` is instantiated). For this reason, we just have the `csp()`\n// fn that looks for the `ng-csp` attribute anywhere in the current doc.\n\n/**\n * @ngdoc directive\n * @name ngClick\n *\n * @description\n * The ngClick directive allows you to specify custom behavior when\n * an element is clicked.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\n * click. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-click\">\n     <file name=\"index.html\">\n      <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n        Increment\n      </button>\n      <span>\n        count: {{count}}\n      </span>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-click', function() {\n         expect(element(by.binding('count')).getText()).toMatch('0');\n         element(by.css('button')).click();\n         expect(element(by.binding('count')).getText()).toMatch('1');\n       });\n     </file>\n   </example>\n */\n/*\n * A collection of directives that allows creation of custom event handlers that are defined as\n * angular expressions and are compiled and executed within the current scope.\n */\nvar ngEventDirectives = {};\n\n// For events that might fire synchronously during DOM manipulation\n// we need to execute their event handlers asynchronously using $evalAsync,\n// so that they are not executed in an inconsistent state.\nvar forceAsyncEvents = {\n  'blur': true,\n  'focus': true\n};\nforEach(\n  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),\n  function(eventName) {\n    var directiveName = directiveNormalize('ng-' + eventName);\n    ngEventDirectives[directiveName] = ['$parse', '$rootScope', function($parse, $rootScope) {\n      return {\n        restrict: 'A',\n        compile: function($element, attr) {\n          // NOTE:\n          // We expose the powerful `$event` object on the scope that provides access to the Window,\n          // etc. This is OK, because expressions are not sandboxed any more (and the expression\n          // sandbox was never meant to be a security feature anyway).\n          var fn = $parse(attr[directiveName]);\n          return function ngEventHandler(scope, element) {\n            element.on(eventName, function(event) {\n              var callback = function() {\n                fn(scope, {$event: event});\n              };\n              if (forceAsyncEvents[eventName] && $rootScope.$$phase) {\n                scope.$evalAsync(callback);\n              } else {\n                scope.$apply(callback);\n              }\n            });\n          };\n        }\n      };\n    }];\n  }\n);\n\n/**\n * @ngdoc directive\n * @name ngDblclick\n *\n * @description\n * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\n * a dblclick. (The Event object is available as `$event`)\n *\n * @example\n   <example name=\"ng-dblclick\">\n     <file name=\"index.html\">\n      <button ng-dblclick=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on double click)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMousedown\n *\n * @description\n * The ngMousedown directive allows you to specify custom behavior on mousedown event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\n * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-mousedown\">\n     <file name=\"index.html\">\n      <button ng-mousedown=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on mouse down)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseup\n *\n * @description\n * Specify custom behavior on mouseup event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\n * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-mouseup\">\n     <file name=\"index.html\">\n      <button ng-mouseup=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on mouse up)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngMouseover\n *\n * @description\n * Specify custom behavior on mouseover event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\n * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-mouseover\">\n     <file name=\"index.html\">\n      <button ng-mouseover=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse is over)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseenter\n *\n * @description\n * Specify custom behavior on mouseenter event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\n * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-mouseenter\">\n     <file name=\"index.html\">\n      <button ng-mouseenter=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse enters)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseleave\n *\n * @description\n * Specify custom behavior on mouseleave event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\n * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-mouseleave\">\n     <file name=\"index.html\">\n      <button ng-mouseleave=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse leaves)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMousemove\n *\n * @description\n * Specify custom behavior on mousemove event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\n * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-mousemove\">\n     <file name=\"index.html\">\n      <button ng-mousemove=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse moves)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeydown\n *\n * @description\n * Specify custom behavior on keydown event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon\n * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example name=\"ng-keydown\">\n     <file name=\"index.html\">\n      <input ng-keydown=\"count = count + 1\" ng-init=\"count=0\">\n      key down count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeyup\n *\n * @description\n * Specify custom behavior on keyup event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon\n * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example name=\"ng-keyup\">\n     <file name=\"index.html\">\n       <p>Typing in the input box below updates the key count</p>\n       <input ng-keyup=\"count = count + 1\" ng-init=\"count=0\"> key up count: {{count}}\n\n       <p>Typing in the input box below updates the keycode</p>\n       <input ng-keyup=\"event=$event\">\n       <p>event keyCode: {{ event.keyCode }}</p>\n       <p>event altKey: {{ event.altKey }}</p>\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeypress\n *\n * @description\n * Specify custom behavior on keypress event.\n *\n * @element ANY\n * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon\n * keypress. ({@link guide/expression#-event- Event object is available as `$event`}\n * and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example name=\"ng-keypress\">\n     <file name=\"index.html\">\n      <input ng-keypress=\"count = count + 1\" ng-init=\"count=0\">\n      key press count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngSubmit\n *\n * @description\n * Enables binding angular expressions to onsubmit events.\n *\n * Additionally it prevents the default action (which for form means sending the request to the\n * server and reloading the current page), but only if the form does not contain `action`,\n * `data-action`, or `x-action` attributes.\n *\n * <div class=\"alert alert-warning\">\n * **Warning:** Be careful not to cause \"double-submission\" by using both the `ngClick` and\n * `ngSubmit` handlers together. See the\n * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\n * for a detailed discussion of when `ngSubmit` may be triggered.\n * </div>\n *\n * @element form\n * @priority 0\n * @param {expression} ngSubmit {@link guide/expression Expression} to eval.\n * ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example module=\"submitExample\" name=\"ng-submit\">\n     <file name=\"index.html\">\n      <script>\n        angular.module('submitExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.list = [];\n            $scope.text = 'hello';\n            $scope.submit = function() {\n              if ($scope.text) {\n                $scope.list.push(this.text);\n                $scope.text = '';\n              }\n            };\n          }]);\n      </script>\n      <form ng-submit=\"submit()\" ng-controller=\"ExampleController\">\n        Enter text and hit enter:\n        <input type=\"text\" ng-model=\"text\" name=\"text\" />\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n        <pre>list={{list}}</pre>\n      </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-submit', function() {\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\n         element(by.css('#submit')).click();\n         expect(element(by.binding('list')).getText()).toContain('hello');\n         expect(element(by.model('text')).getAttribute('value')).toBe('');\n       });\n       it('should ignore empty strings', function() {\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\n         element(by.css('#submit')).click();\n         element(by.css('#submit')).click();\n         expect(element(by.binding('list')).getText()).toContain('hello');\n        });\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngFocus\n *\n * @description\n * Specify custom behavior on focus event.\n *\n * Note: As the `focus` event is executed synchronously when calling `input.focus()`\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n * during an `$apply` to ensure a consistent state.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon\n * focus. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ngBlur\n *\n * @description\n * Specify custom behavior on blur event.\n *\n * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when\n * an element has lost focus.\n *\n * Note: As the `blur` event is executed synchronously also during DOM manipulations\n * (e.g. removing a focussed input),\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n * during an `$apply` to ensure a consistent state.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon\n * blur. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ngCopy\n *\n * @description\n * Specify custom behavior on copy event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon\n * copy. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-copy\">\n     <file name=\"index.html\">\n      <input ng-copy=\"copied=true\" ng-init=\"copied=false; value='copy me'\" ng-model=\"value\">\n      copied: {{copied}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngCut\n *\n * @description\n * Specify custom behavior on cut event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon\n * cut. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-cut\">\n     <file name=\"index.html\">\n      <input ng-cut=\"cut=true\" ng-init=\"cut=false; value='cut me'\" ng-model=\"value\">\n      cut: {{cut}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngPaste\n *\n * @description\n * Specify custom behavior on paste event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon\n * paste. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example name=\"ng-paste\">\n     <file name=\"index.html\">\n      <input ng-paste=\"paste=true\" ng-init=\"paste=false\" placeholder='paste here'>\n      pasted: {{paste}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngIf\n * @restrict A\n * @multiElement\n *\n * @description\n * The `ngIf` directive removes or recreates a portion of the DOM tree based on an\n * {expression}. If the expression assigned to `ngIf` evaluates to a false\n * value then the element is removed from the DOM, otherwise a clone of the\n * element is reinserted into the DOM.\n *\n * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\n * element in the DOM rather than changing its visibility via the `display` css property.  A common\n * case when this difference is significant is when using css selectors that rely on an element's\n * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.\n *\n * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope\n * is created when the element is restored.  The scope created within `ngIf` inherits from\n * its parent scope using\n * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).\n * An important implication of this is if `ngModel` is used within `ngIf` to bind to\n * a javascript primitive defined in the parent scope. In this case any modifications made to the\n * variable within the child scope will override (hide) the value in the parent scope.\n *\n * Also, `ngIf` recreates elements using their compiled state. An example of this behavior\n * is if an element's class attribute is directly modified after it's compiled, using something like\n * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\n * the added class will be lost because the original compiled state is used to regenerate the element.\n *\n * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`\n * and `leave` effects.\n *\n * @animations\n * | Animation                        | Occurs                               |\n * |----------------------------------|-------------------------------------|\n * | {@link ng.$animate#enter enter}  | just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container |\n * | {@link ng.$animate#leave leave}  | just before the `ngIf` contents are removed from the DOM |\n *\n * @element ANY\n * @scope\n * @priority 600\n * @param {expression} ngIf If the {@link guide/expression expression} is falsy then\n *     the element is removed from the DOM tree. If it is truthy a copy of the compiled\n *     element is added to the DOM tree.\n *\n * @example\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-if\">\n    <file name=\"index.html\">\n      <label>Click me: <input type=\"checkbox\" ng-model=\"checked\" ng-init=\"checked=true\" /></label><br/>\n      Show when checked:\n      <span ng-if=\"checked\" class=\"animate-if\">\n        This is removed when the checkbox is unchecked.\n      </span>\n    </file>\n    <file name=\"animations.css\">\n      .animate-if {\n        background:white;\n        border:1px solid black;\n        padding:10px;\n      }\n\n      .animate-if.ng-enter, .animate-if.ng-leave {\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n      }\n\n      .animate-if.ng-enter,\n      .animate-if.ng-leave.ng-leave-active {\n        opacity:0;\n      }\n\n      .animate-if.ng-leave,\n      .animate-if.ng-enter.ng-enter-active {\n        opacity:1;\n      }\n    </file>\n  </example>\n */\nvar ngIfDirective = ['$animate', '$compile', function($animate, $compile) {\n  return {\n    multiElement: true,\n    transclude: 'element',\n    priority: 600,\n    terminal: true,\n    restrict: 'A',\n    $$tlb: true,\n    link: function($scope, $element, $attr, ctrl, $transclude) {\n        var block, childScope, previousElements;\n        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {\n\n          if (value) {\n            if (!childScope) {\n              $transclude(function(clone, newScope) {\n                childScope = newScope;\n                clone[clone.length++] = $compile.$$createComment('end ngIf', $attr.ngIf);\n                // Note: We only need the first/last node of the cloned nodes.\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n                // by a directive with templateUrl when its template arrives.\n                block = {\n                  clone: clone\n                };\n                $animate.enter(clone, $element.parent(), $element);\n              });\n            }\n          } else {\n            if (previousElements) {\n              previousElements.remove();\n              previousElements = null;\n            }\n            if (childScope) {\n              childScope.$destroy();\n              childScope = null;\n            }\n            if (block) {\n              previousElements = getBlockNodes(block.clone);\n              $animate.leave(previousElements).done(function(response) {\n                if (response !== false) previousElements = null;\n              });\n              block = null;\n            }\n          }\n        });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngInclude\n * @restrict ECA\n *\n * @description\n * Fetches, compiles and includes an external HTML fragment.\n *\n * By default, the template URL is restricted to the same domain and protocol as the\n * application document. This is done by calling {@link $sce#getTrustedResourceUrl\n * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\n * you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n * {@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link\n * ng.$sce Strict Contextual Escaping}.\n *\n * In addition, the browser's\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n * policy may further restrict whether the template is successfully loaded.\n * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\n * access on some browsers.\n *\n * @animations\n * | Animation                        | Occurs                              |\n * |----------------------------------|-------------------------------------|\n * | {@link ng.$animate#enter enter}  | when the expression changes, on the new include |\n * | {@link ng.$animate#leave leave}  | when the expression changes, on the old include |\n *\n * The enter and leave animation occur concurrently.\n *\n * @scope\n * @priority 400\n *\n * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\n *                 make sure you wrap it in **single** quotes, e.g. `src=\"'myPartialTemplate.html'\"`.\n * @param {string=} onload Expression to evaluate when a new partial is loaded.\n *                  <div class=\"alert alert-warning\">\n *                  **Note:** When using onload on SVG elements in IE11, the browser will try to call\n *                  a function with the name on the window element, which will usually throw a\n *                  \"function is undefined\" error. To fix this, you can instead use `data-onload` or a\n *                  different form that {@link guide/directive#normalization matches} `onload`.\n *                  </div>\n   *\n * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\n *                  $anchorScroll} to scroll the viewport after the content is loaded.\n *\n *                  - If the attribute is not set, disable scrolling.\n *                  - If the attribute is set without value, enable scrolling.\n *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\n *\n * @example\n  <example module=\"includeExample\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-include\">\n    <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n        <option value=\"\">(blank)</option>\n       </select>\n       url of the template: <code>{{template.url}}</code>\n       <hr/>\n       <div class=\"slide-animate-container\">\n         <div class=\"slide-animate\" ng-include=\"template.url\"></div>\n       </div>\n     </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('includeExample', ['ngAnimate'])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.templates =\n            [{ name: 'template1.html', url: 'template1.html'},\n             { name: 'template2.html', url: 'template2.html'}];\n          $scope.template = $scope.templates[0];\n        }]);\n     </file>\n    <file name=\"template1.html\">\n      Content of template1.html\n    </file>\n    <file name=\"template2.html\">\n      Content of template2.html\n    </file>\n    <file name=\"animations.css\">\n      .slide-animate-container {\n        position:relative;\n        background:white;\n        border:1px solid black;\n        height:40px;\n        overflow:hidden;\n      }\n\n      .slide-animate {\n        padding:10px;\n      }\n\n      .slide-animate.ng-enter, .slide-animate.ng-leave {\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        display:block;\n        padding:10px;\n      }\n\n      .slide-animate.ng-enter {\n        top:-50px;\n      }\n      .slide-animate.ng-enter.ng-enter-active {\n        top:0;\n      }\n\n      .slide-animate.ng-leave {\n        top:0;\n      }\n      .slide-animate.ng-leave.ng-leave-active {\n        top:50px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var templateSelect = element(by.model('template'));\n      var includeElem = element(by.css('[ng-include]'));\n\n      it('should load template1.html', function() {\n        expect(includeElem.getText()).toMatch(/Content of template1.html/);\n      });\n\n      it('should load template2.html', function() {\n        if (browser.params.browser === 'firefox') {\n          // Firefox can't handle using selects\n          // See https://github.com/angular/protractor/issues/480\n          return;\n        }\n        templateSelect.click();\n        templateSelect.all(by.css('option')).get(2).click();\n        expect(includeElem.getText()).toMatch(/Content of template2.html/);\n      });\n\n      it('should change to blank', function() {\n        if (browser.params.browser === 'firefox') {\n          // Firefox can't handle using selects\n          return;\n        }\n        templateSelect.click();\n        templateSelect.all(by.css('option')).get(0).click();\n        expect(includeElem.isPresent()).toBe(false);\n      });\n    </file>\n  </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentRequested\n * @eventType emit on the scope ngInclude was declared in\n * @description\n * Emitted every time the ngInclude content is requested.\n *\n * @param {Object} angularEvent Synthetic event object.\n * @param {String} src URL of content to load.\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentLoaded\n * @eventType emit on the current ngInclude scope\n * @description\n * Emitted every time the ngInclude content is reloaded.\n *\n * @param {Object} angularEvent Synthetic event object.\n * @param {String} src URL of content to load.\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentError\n * @eventType emit on the scope ngInclude was declared in\n * @description\n * Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)\n *\n * @param {Object} angularEvent Synthetic event object.\n * @param {String} src URL of content to load.\n */\nvar ngIncludeDirective = ['$templateRequest', '$anchorScroll', '$animate',\n                  function($templateRequest,   $anchorScroll,   $animate) {\n  return {\n    restrict: 'ECA',\n    priority: 400,\n    terminal: true,\n    transclude: 'element',\n    controller: angular.noop,\n    compile: function(element, attr) {\n      var srcExp = attr.ngInclude || attr.src,\n          onloadExp = attr.onload || '',\n          autoScrollExp = attr.autoscroll;\n\n      return function(scope, $element, $attr, ctrl, $transclude) {\n        var changeCounter = 0,\n            currentScope,\n            previousElement,\n            currentElement;\n\n        var cleanupLastIncludeContent = function() {\n          if (previousElement) {\n            previousElement.remove();\n            previousElement = null;\n          }\n          if (currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n          if (currentElement) {\n            $animate.leave(currentElement).done(function(response) {\n              if (response !== false) previousElement = null;\n            });\n            previousElement = currentElement;\n            currentElement = null;\n          }\n        };\n\n        scope.$watch(srcExp, function ngIncludeWatchAction(src) {\n          var afterAnimation = function(response) {\n            if (response !== false && isDefined(autoScrollExp) &&\n              (!autoScrollExp || scope.$eval(autoScrollExp))) {\n                $anchorScroll();\n            }\n          };\n          var thisChangeId = ++changeCounter;\n\n          if (src) {\n            //set the 2nd param to true to ignore the template request error so that the inner\n            //contents and scope can be cleaned up.\n            $templateRequest(src, true).then(function(response) {\n              if (scope.$$destroyed) return;\n\n              if (thisChangeId !== changeCounter) return;\n              var newScope = scope.$new();\n              ctrl.template = response;\n\n              // Note: This will also link all children of ng-include that were contained in the original\n              // html. If that content contains controllers, ... they could pollute/change the scope.\n              // However, using ng-include on an element with additional content does not make sense...\n              // Note: We can't remove them in the cloneAttchFn of $transclude as that\n              // function is called before linking the content, which would apply child\n              // directives to non existing elements.\n              var clone = $transclude(newScope, function(clone) {\n                cleanupLastIncludeContent();\n                $animate.enter(clone, null, $element).done(afterAnimation);\n              });\n\n              currentScope = newScope;\n              currentElement = clone;\n\n              currentScope.$emit('$includeContentLoaded', src);\n              scope.$eval(onloadExp);\n            }, function() {\n              if (scope.$$destroyed) return;\n\n              if (thisChangeId === changeCounter) {\n                cleanupLastIncludeContent();\n                scope.$emit('$includeContentError', src);\n              }\n            });\n            scope.$emit('$includeContentRequested', src);\n          } else {\n            cleanupLastIncludeContent();\n            ctrl.template = null;\n          }\n        });\n      };\n    }\n  };\n}];\n\n// This directive is called during the $transclude call of the first `ngInclude` directive.\n// It will replace and compile the content of the element with the loaded template.\n// We need this directive so that the element content is already filled when\n// the link function of another directive on the same element as ngInclude\n// is called.\nvar ngIncludeFillContentDirective = ['$compile',\n  function($compile) {\n    return {\n      restrict: 'ECA',\n      priority: -400,\n      require: 'ngInclude',\n      link: function(scope, $element, $attr, ctrl) {\n        if (toString.call($element[0]).match(/SVG/)) {\n          // WebKit: https://bugs.webkit.org/show_bug.cgi?id=135698 --- SVG elements do not\n          // support innerHTML, so detect this here and try to generate the contents\n          // specially.\n          $element.empty();\n          $compile(jqLiteBuildFragment(ctrl.template, window.document).childNodes)(scope,\n              function namespaceAdaptedClone(clone) {\n            $element.append(clone);\n          }, {futureParentElement: $element});\n          return;\n        }\n\n        $element.html(ctrl.template);\n        $compile($element.contents())(scope);\n      }\n    };\n  }];\n\n/**\n * @ngdoc directive\n * @name ngInit\n * @restrict AC\n *\n * @description\n * The `ngInit` directive allows you to evaluate an expression in the\n * current scope.\n *\n * <div class=\"alert alert-danger\">\n * This directive can be abused to add unnecessary amounts of logic into your templates.\n * There are only a few appropriate uses of `ngInit`, such as for aliasing special properties of\n * {@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below; and for injecting data via\n * server side scripting. Besides these few cases, you should use {@link guide/controller controllers}\n * rather than `ngInit` to initialize values on a scope.\n * </div>\n *\n * <div class=\"alert alert-warning\">\n * **Note**: If you have assignment in `ngInit` along with a {@link ng.$filter `filter`}, make\n * sure you have parentheses to ensure correct operator precedence:\n * <pre class=\"prettyprint\">\n * `<div ng-init=\"test1 = ($index | toString)\"></div>`\n * </pre>\n * </div>\n *\n * @priority 450\n *\n * @element ANY\n * @param {expression} ngInit {@link guide/expression Expression} to eval.\n *\n * @example\n   <example module=\"initExample\" name=\"ng-init\">\n     <file name=\"index.html\">\n   <script>\n     angular.module('initExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.list = [['a', 'b'], ['c', 'd']];\n       }]);\n   </script>\n   <div ng-controller=\"ExampleController\">\n     <div ng-repeat=\"innerList in list\" ng-init=\"outerIndex = $index\">\n       <div ng-repeat=\"value in innerList\" ng-init=\"innerIndex = $index\">\n          <span class=\"example-init\">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>\n       </div>\n     </div>\n   </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should alias index positions', function() {\n         var elements = element.all(by.css('.example-init'));\n         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');\n         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');\n         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');\n         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');\n       });\n     </file>\n   </example>\n */\nvar ngInitDirective = ngDirective({\n  priority: 450,\n  compile: function() {\n    return {\n      pre: function(scope, element, attrs) {\n        scope.$eval(attrs.ngInit);\n      }\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngList\n *\n * @description\n * Text input that converts between a delimited string and an array of strings. The default\n * delimiter is a comma followed by a space - equivalent to `ng-list=\", \"`. You can specify a custom\n * delimiter as the value of the `ngList` attribute - for example, `ng-list=\" | \"`.\n *\n * The behaviour of the directive is affected by the use of the `ngTrim` attribute.\n * * If `ngTrim` is set to `\"false\"` then whitespace around both the separator and each\n *   list item is respected. This implies that the user of the directive is responsible for\n *   dealing with whitespace but also allows you to use whitespace as a delimiter, such as a\n *   tab or newline character.\n * * Otherwise whitespace around the delimiter is ignored when splitting (although it is respected\n *   when joining the list items back together) and whitespace around each list item is stripped\n *   before it is added to the model.\n *\n * ### Example with Validation\n *\n * <example name=\"ngList-directive\" module=\"listExample\">\n *   <file name=\"app.js\">\n *      angular.module('listExample', [])\n *        .controller('ExampleController', ['$scope', function($scope) {\n *          $scope.names = ['morpheus', 'neo', 'trinity'];\n *        }]);\n *   </file>\n *   <file name=\"index.html\">\n *    <form name=\"myForm\" ng-controller=\"ExampleController\">\n *      <label>List: <input name=\"namesInput\" ng-model=\"names\" ng-list required></label>\n *      <span role=\"alert\">\n *        <span class=\"error\" ng-show=\"myForm.namesInput.$error.required\">\n *        Required!</span>\n *      </span>\n *      <br>\n *      <tt>names = {{names}}</tt><br/>\n *      <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n *      <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n *      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n *      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n *     </form>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     var listInput = element(by.model('names'));\n *     var names = element(by.exactBinding('names'));\n *     var valid = element(by.binding('myForm.namesInput.$valid'));\n *     var error = element(by.css('span.error'));\n *\n *     it('should initialize to model', function() {\n *       expect(names.getText()).toContain('[\"morpheus\",\"neo\",\"trinity\"]');\n *       expect(valid.getText()).toContain('true');\n *       expect(error.getCssValue('display')).toBe('none');\n *     });\n *\n *     it('should be invalid if empty', function() {\n *       listInput.clear();\n *       listInput.sendKeys('');\n *\n *       expect(names.getText()).toContain('');\n *       expect(valid.getText()).toContain('false');\n *       expect(error.getCssValue('display')).not.toBe('none');\n *     });\n *   </file>\n * </example>\n *\n * ### Example - splitting on newline\n * <example name=\"ngList-directive-newlines\">\n *   <file name=\"index.html\">\n *    <textarea ng-model=\"list\" ng-list=\"&#10;\" ng-trim=\"false\"></textarea>\n *    <pre>{{ list | json }}</pre>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     it(\"should split the text by newlines\", function() {\n *       var listInput = element(by.model('list'));\n *       var output = element(by.binding('list | json'));\n *       listInput.sendKeys('abc\\ndef\\nghi');\n *       expect(output.getText()).toContain('[\\n  \"abc\",\\n  \"def\",\\n  \"ghi\"\\n]');\n *     });\n *   </file>\n * </example>\n *\n * @element input\n * @param {string=} ngList optional delimiter that should be used to split the value.\n */\nvar ngListDirective = function() {\n  return {\n    restrict: 'A',\n    priority: 100,\n    require: 'ngModel',\n    link: function(scope, element, attr, ctrl) {\n      var ngList = attr.ngList || ', ';\n      var trimValues = attr.ngTrim !== 'false';\n      var separator = trimValues ? trim(ngList) : ngList;\n\n      var parse = function(viewValue) {\n        // If the viewValue is invalid (say required but empty) it will be `undefined`\n        if (isUndefined(viewValue)) return;\n\n        var list = [];\n\n        if (viewValue) {\n          forEach(viewValue.split(separator), function(value) {\n            if (value) list.push(trimValues ? trim(value) : value);\n          });\n        }\n\n        return list;\n      };\n\n      ctrl.$parsers.push(parse);\n      ctrl.$formatters.push(function(value) {\n        if (isArray(value)) {\n          return value.join(ngList);\n        }\n\n        return undefined;\n      });\n\n      // Override the standard $isEmpty because an empty array means the input is empty.\n      ctrl.$isEmpty = function(value) {\n        return !value || !value.length;\n      };\n    }\n  };\n};\n\n/* global VALID_CLASS: true,\n  INVALID_CLASS: true,\n  PRISTINE_CLASS: true,\n  DIRTY_CLASS: true,\n  UNTOUCHED_CLASS: true,\n  TOUCHED_CLASS: true,\n  PENDING_CLASS: true,\n  addSetValidityMethod: true,\n  setupValidity: true,\n  defaultModelOptions: false\n*/\n\n\nvar VALID_CLASS = 'ng-valid',\n    INVALID_CLASS = 'ng-invalid',\n    PRISTINE_CLASS = 'ng-pristine',\n    DIRTY_CLASS = 'ng-dirty',\n    UNTOUCHED_CLASS = 'ng-untouched',\n    TOUCHED_CLASS = 'ng-touched',\n    EMPTY_CLASS = 'ng-empty',\n    NOT_EMPTY_CLASS = 'ng-not-empty';\n\nvar ngModelMinErr = minErr('ngModel');\n\n/**\n * @ngdoc type\n * @name ngModel.NgModelController\n *\n * @property {*} $viewValue The actual value from the control's view. For `input` elements, this is a\n * String. See {@link ngModel.NgModelController#$setViewValue} for information about when the $viewValue\n * is set.\n * @property {*} $modelValue The value in the model that the control is bound to.\n * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever\n       the control reads value from the DOM. The functions are called in array order, each passing\n       its return value through to the next. The last return value is forwarded to the\n       {@link ngModel.NgModelController#$validators `$validators`} collection.\n\nParsers are used to sanitize / convert the {@link ngModel.NgModelController#$viewValue\n`$viewValue`}.\n\nReturning `undefined` from a parser means a parse error occurred. In that case,\nno {@link ngModel.NgModelController#$validators `$validators`} will run and the `ngModel`\nwill be set to `undefined` unless {@link ngModelOptions `ngModelOptions.allowInvalid`}\nis set to `true`. The parse error is stored in `ngModel.$error.parse`.\n\n *\n * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever\n       the model value changes. The functions are called in reverse array order, each passing the value through to the\n       next. The last return value is used as the actual DOM value.\n       Used to format / convert values for display in the control.\n * ```js\n * function formatter(value) {\n *   if (value) {\n *     return value.toUpperCase();\n *   }\n * }\n * ngModel.$formatters.push(formatter);\n * ```\n *\n * @property {Object.<string, function>} $validators A collection of validators that are applied\n *      whenever the model value changes. The key value within the object refers to the name of the\n *      validator while the function refers to the validation operation. The validation operation is\n *      provided with the model value as an argument and must return a true or false value depending\n *      on the response of that validation.\n *\n * ```js\n * ngModel.$validators.validCharacters = function(modelValue, viewValue) {\n *   var value = modelValue || viewValue;\n *   return /[0-9]+/.test(value) &&\n *          /[a-z]+/.test(value) &&\n *          /[A-Z]+/.test(value) &&\n *          /\\W+/.test(value);\n * };\n * ```\n *\n * @property {Object.<string, function>} $asyncValidators A collection of validations that are expected to\n *      perform an asynchronous validation (e.g. a HTTP request). The validation function that is provided\n *      is expected to return a promise when it is run during the model validation process. Once the promise\n *      is delivered then the validation status will be set to true when fulfilled and false when rejected.\n *      When the asynchronous validators are triggered, each of the validators will run in parallel and the model\n *      value will only be updated once all validators have been fulfilled. As long as an asynchronous validator\n *      is unfulfilled, its key will be added to the controllers `$pending` property. Also, all asynchronous validators\n *      will only run once all synchronous validators have passed.\n *\n * Please note that if $http is used then it is important that the server returns a success HTTP response code\n * in order to fulfill the validation and a status level of `4xx` in order to reject the validation.\n *\n * ```js\n * ngModel.$asyncValidators.uniqueUsername = function(modelValue, viewValue) {\n *   var value = modelValue || viewValue;\n *\n *   // Lookup user by username\n *   return $http.get('/api/users/' + value).\n *      then(function resolved() {\n *        //username exists, this means validation fails\n *        return $q.reject('exists');\n *      }, function rejected() {\n *        //username does not exist, therefore this validation passes\n *        return true;\n *      });\n * };\n * ```\n *\n * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever the\n *     view value has changed. It is called with no arguments, and its return value is ignored.\n *     This can be used in place of additional $watches against the model value.\n *\n * @property {Object} $error An object hash with all failing validator ids as keys.\n * @property {Object} $pending An object hash with all pending validator ids as keys.\n *\n * @property {boolean} $untouched True if control has not lost focus yet.\n * @property {boolean} $touched True if control has lost focus.\n * @property {boolean} $pristine True if user has not interacted with the control yet.\n * @property {boolean} $dirty True if user has already interacted with the control.\n * @property {boolean} $valid True if there is no error.\n * @property {boolean} $invalid True if at least one error on the control.\n * @property {string} $name The name attribute of the control.\n *\n * @description\n *\n * `NgModelController` provides API for the {@link ngModel `ngModel`} directive.\n * The controller contains services for data-binding, validation, CSS updates, and value formatting\n * and parsing. It purposefully does not contain any logic which deals with DOM rendering or\n * listening to DOM events.\n * Such DOM related logic should be provided by other directives which make use of\n * `NgModelController` for data-binding to control elements.\n * Angular provides this DOM logic for most {@link input `input`} elements.\n * At the end of this page you can find a {@link ngModel.NgModelController#custom-control-example\n * custom control example} that uses `ngModelController` to bind to `contenteditable` elements.\n *\n * @example\n * ### Custom Control Example\n * This example shows how to use `NgModelController` with a custom control to achieve\n * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\n * collaborate together to achieve the desired result.\n *\n * `contenteditable` is an HTML5 attribute, which tells the browser to let the element\n * contents be edited in place by the user.\n *\n * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}\n * module to automatically remove \"bad\" content like inline event listener (e.g. `<span onclick=\"...\">`).\n * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks\n * that content using the `$sce` service.\n *\n * <example name=\"NgModelController\" module=\"customControl\" deps=\"angular-sanitize.js\">\n    <file name=\"style.css\">\n      [contenteditable] {\n        border: 1px solid black;\n        background-color: white;\n        min-height: 20px;\n      }\n\n      .ng-invalid {\n        border: 1px solid red;\n      }\n\n    </file>\n    <file name=\"script.js\">\n      angular.module('customControl', ['ngSanitize']).\n        directive('contenteditable', ['$sce', function($sce) {\n          return {\n            restrict: 'A', // only activate on element attribute\n            require: '?ngModel', // get a hold of NgModelController\n            link: function(scope, element, attrs, ngModel) {\n              if (!ngModel) return; // do nothing if no ng-model\n\n              // Specify how UI should be updated\n              ngModel.$render = function() {\n                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));\n              };\n\n              // Listen for change events to enable binding\n              element.on('blur keyup change', function() {\n                scope.$evalAsync(read);\n              });\n              read(); // initialize\n\n              // Write data to the model\n              function read() {\n                var html = element.html();\n                // When we clear the content editable the browser leaves a <br> behind\n                // If strip-br attribute is provided then we strip this out\n                if (attrs.stripBr && html === '<br>') {\n                  html = '';\n                }\n                ngModel.$setViewValue(html);\n              }\n            }\n          };\n        }]);\n    </file>\n    <file name=\"index.html\">\n      <form name=\"myForm\">\n       <div contenteditable\n            name=\"myWidget\" ng-model=\"userContent\"\n            strip-br=\"true\"\n            required>Change me!</div>\n        <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n       <hr>\n       <textarea ng-model=\"userContent\" aria-label=\"Dynamic textarea\"></textarea>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n    it('should data-bind and become invalid', function() {\n      if (browser.params.browser === 'safari' || browser.params.browser === 'firefox') {\n        // SafariDriver can't handle contenteditable\n        // and Firefox driver can't clear contenteditables very well\n        return;\n      }\n      var contentEditable = element(by.css('[contenteditable]'));\n      var content = 'Change me!';\n\n      expect(contentEditable.getText()).toEqual(content);\n\n      contentEditable.clear();\n      contentEditable.sendKeys(protractor.Key.BACK_SPACE);\n      expect(contentEditable.getText()).toEqual('');\n      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);\n    });\n    </file>\n * </example>\n *\n *\n */\nNgModelController.$inject = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse', '$animate', '$timeout', '$q', '$interpolate'];\nfunction NgModelController($scope, $exceptionHandler, $attr, $element, $parse, $animate, $timeout, $q, $interpolate) {\n  this.$viewValue = Number.NaN;\n  this.$modelValue = Number.NaN;\n  this.$$rawModelValue = undefined; // stores the parsed modelValue / model set from scope regardless of validity.\n  this.$validators = {};\n  this.$asyncValidators = {};\n  this.$parsers = [];\n  this.$formatters = [];\n  this.$viewChangeListeners = [];\n  this.$untouched = true;\n  this.$touched = false;\n  this.$pristine = true;\n  this.$dirty = false;\n  this.$valid = true;\n  this.$invalid = false;\n  this.$error = {}; // keep invalid keys here\n  this.$$success = {}; // keep valid keys here\n  this.$pending = undefined; // keep pending keys here\n  this.$name = $interpolate($attr.name || '', false)($scope);\n  this.$$parentForm = nullFormCtrl;\n  this.$options = defaultModelOptions;\n\n  this.$$parsedNgModel = $parse($attr.ngModel);\n  this.$$parsedNgModelAssign = this.$$parsedNgModel.assign;\n  this.$$ngModelGet = this.$$parsedNgModel;\n  this.$$ngModelSet = this.$$parsedNgModelAssign;\n  this.$$pendingDebounce = null;\n  this.$$parserValid = undefined;\n\n  this.$$currentValidationRunId = 0;\n\n  this.$$scope = $scope;\n  this.$$attr = $attr;\n  this.$$element = $element;\n  this.$$animate = $animate;\n  this.$$timeout = $timeout;\n  this.$$parse = $parse;\n  this.$$q = $q;\n  this.$$exceptionHandler = $exceptionHandler;\n\n  setupValidity(this);\n  setupModelWatcher(this);\n}\n\nNgModelController.prototype = {\n  $$initGetterSetters: function() {\n    if (this.$options.getOption('getterSetter')) {\n      var invokeModelGetter = this.$$parse(this.$$attr.ngModel + '()'),\n          invokeModelSetter = this.$$parse(this.$$attr.ngModel + '($$$p)');\n\n      this.$$ngModelGet = function($scope) {\n        var modelValue = this.$$parsedNgModel($scope);\n        if (isFunction(modelValue)) {\n          modelValue = invokeModelGetter($scope);\n        }\n        return modelValue;\n      };\n      this.$$ngModelSet = function($scope, newValue) {\n        if (isFunction(this.$$parsedNgModel($scope))) {\n          invokeModelSetter($scope, {$$$p: newValue});\n        } else {\n          this.$$parsedNgModelAssign($scope, newValue);\n        }\n      };\n    } else if (!this.$$parsedNgModel.assign) {\n      throw ngModelMinErr('nonassign', 'Expression \\'{0}\\' is non-assignable. Element: {1}',\n          this.$$attr.ngModel, startingTag(this.$$element));\n    }\n  },\n\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$render\n   *\n   * @description\n   * Called when the view needs to be updated. It is expected that the user of the ng-model\n   * directive will implement this method.\n   *\n   * The `$render()` method is invoked in the following situations:\n   *\n   * * `$rollbackViewValue()` is called.  If we are rolling back the view value to the last\n   *   committed value then `$render()` is called to update the input control.\n   * * The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and\n   *   the `$viewValue` are different from last time.\n   *\n   * Since `ng-model` does not do a deep watch, `$render()` is only invoked if the values of\n   * `$modelValue` and `$viewValue` are actually different from their previous values. If `$modelValue`\n   * or `$viewValue` are objects (rather than a string or number) then `$render()` will not be\n   * invoked if you only change a property on the objects.\n   */\n  $render: noop,\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$isEmpty\n   *\n   * @description\n   * This is called when we need to determine if the value of an input is empty.\n   *\n   * For instance, the required directive does this to work out if the input has data or not.\n   *\n   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n   *\n   * You can override this for input directives whose concept of being empty is different from the\n   * default. The `checkboxInputType` directive does this because in its case a value of `false`\n   * implies empty.\n   *\n   * @param {*} value The value of the input to check for emptiness.\n   * @returns {boolean} True if `value` is \"empty\".\n   */\n  $isEmpty: function(value) {\n    // eslint-disable-next-line no-self-compare\n    return isUndefined(value) || value === '' || value === null || value !== value;\n  },\n\n  $$updateEmptyClasses: function(value) {\n    if (this.$isEmpty(value)) {\n      this.$$animate.removeClass(this.$$element, NOT_EMPTY_CLASS);\n      this.$$animate.addClass(this.$$element, EMPTY_CLASS);\n    } else {\n      this.$$animate.removeClass(this.$$element, EMPTY_CLASS);\n      this.$$animate.addClass(this.$$element, NOT_EMPTY_CLASS);\n    }\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setPristine\n   *\n   * @description\n   * Sets the control to its pristine state.\n   *\n   * This method can be called to remove the `ng-dirty` class and set the control to its pristine\n   * state (`ng-pristine` class). A model is considered to be pristine when the control\n   * has not been changed from when first compiled.\n   */\n  $setPristine: function() {\n    this.$dirty = false;\n    this.$pristine = true;\n    this.$$animate.removeClass(this.$$element, DIRTY_CLASS);\n    this.$$animate.addClass(this.$$element, PRISTINE_CLASS);\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setDirty\n   *\n   * @description\n   * Sets the control to its dirty state.\n   *\n   * This method can be called to remove the `ng-pristine` class and set the control to its dirty\n   * state (`ng-dirty` class). A model is considered to be dirty when the control has been changed\n   * from when first compiled.\n   */\n  $setDirty: function() {\n    this.$dirty = true;\n    this.$pristine = false;\n    this.$$animate.removeClass(this.$$element, PRISTINE_CLASS);\n    this.$$animate.addClass(this.$$element, DIRTY_CLASS);\n    this.$$parentForm.$setDirty();\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setUntouched\n   *\n   * @description\n   * Sets the control to its untouched state.\n   *\n   * This method can be called to remove the `ng-touched` class and set the control to its\n   * untouched state (`ng-untouched` class). Upon compilation, a model is set as untouched\n   * by default, however this function can be used to restore that state if the model has\n   * already been touched by the user.\n   */\n  $setUntouched: function() {\n    this.$touched = false;\n    this.$untouched = true;\n    this.$$animate.setClass(this.$$element, UNTOUCHED_CLASS, TOUCHED_CLASS);\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setTouched\n   *\n   * @description\n   * Sets the control to its touched state.\n   *\n   * This method can be called to remove the `ng-untouched` class and set the control to its\n   * touched state (`ng-touched` class). A model is considered to be touched when the user has\n   * first focused the control element and then shifted focus away from the control (blur event).\n   */\n  $setTouched: function() {\n    this.$touched = true;\n    this.$untouched = false;\n    this.$$animate.setClass(this.$$element, TOUCHED_CLASS, UNTOUCHED_CLASS);\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$rollbackViewValue\n   *\n   * @description\n   * Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,\n   * which may be caused by a pending debounced event or because the input is waiting for some\n   * future event.\n   *\n   * If you have an input that uses `ng-model-options` to set up debounced updates or updates that\n   * depend on special events such as `blur`, there can be a period when the `$viewValue` is out of\n   * sync with the ngModel's `$modelValue`.\n   *\n   * In this case, you can use `$rollbackViewValue()` to manually cancel the debounced / future update\n   * and reset the input to the last committed view value.\n   *\n   * It is also possible that you run into difficulties if you try to update the ngModel's `$modelValue`\n   * programmatically before these debounced/future events have resolved/occurred, because Angular's\n   * dirty checking mechanism is not able to tell whether the model has actually changed or not.\n   *\n   * The `$rollbackViewValue()` method should be called before programmatically changing the model of an\n   * input which may have such events pending. This is important in order to make sure that the\n   * input field will be updated with the new model value and any pending operations are cancelled.\n   *\n   * <example name=\"ng-model-cancel-update\" module=\"cancel-update-example\">\n   *   <file name=\"app.js\">\n   *     angular.module('cancel-update-example', [])\n   *\n   *     .controller('CancelUpdateController', ['$scope', function($scope) {\n   *       $scope.model = {value1: '', value2: ''};\n   *\n   *       $scope.setEmpty = function(e, value, rollback) {\n   *         if (e.keyCode === 27) {\n   *           e.preventDefault();\n   *           if (rollback) {\n   *             $scope.myForm[value].$rollbackViewValue();\n   *           }\n   *           $scope.model[value] = '';\n   *         }\n   *       };\n   *     }]);\n   *   </file>\n   *   <file name=\"index.html\">\n   *     <div ng-controller=\"CancelUpdateController\">\n   *       <p>Both of these inputs are only updated if they are blurred. Hitting escape should\n   *       empty them. Follow these steps and observe the difference:</p>\n   *       <ol>\n   *         <li>Type something in the input. You will see that the model is not yet updated</li>\n   *         <li>Press the Escape key.\n   *           <ol>\n   *             <li> In the first example, nothing happens, because the model is already '', and no\n   *             update is detected. If you blur the input, the model will be set to the current view.\n   *             </li>\n   *             <li> In the second example, the pending update is cancelled, and the input is set back\n   *             to the last committed view value (''). Blurring the input does nothing.\n   *             </li>\n   *           </ol>\n   *         </li>\n   *       </ol>\n   *\n   *       <form name=\"myForm\" ng-model-options=\"{ updateOn: 'blur' }\">\n   *         <div>\n   *           <p id=\"inputDescription1\">Without $rollbackViewValue():</p>\n   *           <input name=\"value1\" aria-describedby=\"inputDescription1\" ng-model=\"model.value1\"\n   *                  ng-keydown=\"setEmpty($event, 'value1')\">\n   *           value1: \"{{ model.value1 }}\"\n   *         </div>\n   *\n   *         <div>\n   *           <p id=\"inputDescription2\">With $rollbackViewValue():</p>\n   *           <input name=\"value2\" aria-describedby=\"inputDescription2\" ng-model=\"model.value2\"\n   *                  ng-keydown=\"setEmpty($event, 'value2', true)\">\n   *           value2: \"{{ model.value2 }}\"\n   *         </div>\n   *       </form>\n   *     </div>\n   *   </file>\n       <file name=\"style.css\">\n          div {\n            display: table-cell;\n          }\n          div:nth-child(1) {\n            padding-right: 30px;\n          }\n\n        </file>\n   * </example>\n   */\n  $rollbackViewValue: function() {\n    this.$$timeout.cancel(this.$$pendingDebounce);\n    this.$viewValue = this.$$lastCommittedViewValue;\n    this.$render();\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$validate\n   *\n   * @description\n   * Runs each of the registered validators (first synchronous validators and then\n   * asynchronous validators).\n   * If the validity changes to invalid, the model will be set to `undefined`,\n   * unless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.\n   * If the validity changes to valid, it will set the model to the last available valid\n   * `$modelValue`, i.e. either the last parsed value or the last value set from the scope.\n   */\n  $validate: function() {\n    // ignore $validate before model is initialized\n    if (isNumberNaN(this.$modelValue)) {\n      return;\n    }\n\n    var viewValue = this.$$lastCommittedViewValue;\n    // Note: we use the $$rawModelValue as $modelValue might have been\n    // set to undefined during a view -> model update that found validation\n    // errors. We can't parse the view here, since that could change\n    // the model although neither viewValue nor the model on the scope changed\n    var modelValue = this.$$rawModelValue;\n\n    var prevValid = this.$valid;\n    var prevModelValue = this.$modelValue;\n\n    var allowInvalid = this.$options.getOption('allowInvalid');\n\n    var that = this;\n    this.$$runValidators(modelValue, viewValue, function(allValid) {\n      // If there was no change in validity, don't update the model\n      // This prevents changing an invalid modelValue to undefined\n      if (!allowInvalid && prevValid !== allValid) {\n        // Note: Don't check this.$valid here, as we could have\n        // external validators (e.g. calculated on the server),\n        // that just call $setValidity and need the model value\n        // to calculate their validity.\n        that.$modelValue = allValid ? modelValue : undefined;\n\n        if (that.$modelValue !== prevModelValue) {\n          that.$$writeModelToScope();\n        }\n      }\n    });\n  },\n\n  $$runValidators: function(modelValue, viewValue, doneCallback) {\n    this.$$currentValidationRunId++;\n    var localValidationRunId = this.$$currentValidationRunId;\n    var that = this;\n\n    // check parser error\n    if (!processParseErrors()) {\n      validationDone(false);\n      return;\n    }\n    if (!processSyncValidators()) {\n      validationDone(false);\n      return;\n    }\n    processAsyncValidators();\n\n    function processParseErrors() {\n      var errorKey = that.$$parserName || 'parse';\n      if (isUndefined(that.$$parserValid)) {\n        setValidity(errorKey, null);\n      } else {\n        if (!that.$$parserValid) {\n          forEach(that.$validators, function(v, name) {\n            setValidity(name, null);\n          });\n          forEach(that.$asyncValidators, function(v, name) {\n            setValidity(name, null);\n          });\n        }\n        // Set the parse error last, to prevent unsetting it, should a $validators key == parserName\n        setValidity(errorKey, that.$$parserValid);\n        return that.$$parserValid;\n      }\n      return true;\n    }\n\n    function processSyncValidators() {\n      var syncValidatorsValid = true;\n      forEach(that.$validators, function(validator, name) {\n        var result = Boolean(validator(modelValue, viewValue));\n        syncValidatorsValid = syncValidatorsValid && result;\n        setValidity(name, result);\n      });\n      if (!syncValidatorsValid) {\n        forEach(that.$asyncValidators, function(v, name) {\n          setValidity(name, null);\n        });\n        return false;\n      }\n      return true;\n    }\n\n    function processAsyncValidators() {\n      var validatorPromises = [];\n      var allValid = true;\n      forEach(that.$asyncValidators, function(validator, name) {\n        var promise = validator(modelValue, viewValue);\n        if (!isPromiseLike(promise)) {\n          throw ngModelMinErr('nopromise',\n            'Expected asynchronous validator to return a promise but got \\'{0}\\' instead.', promise);\n        }\n        setValidity(name, undefined);\n        validatorPromises.push(promise.then(function() {\n          setValidity(name, true);\n        }, function() {\n          allValid = false;\n          setValidity(name, false);\n        }));\n      });\n      if (!validatorPromises.length) {\n        validationDone(true);\n      } else {\n        that.$$q.all(validatorPromises).then(function() {\n          validationDone(allValid);\n        }, noop);\n      }\n    }\n\n    function setValidity(name, isValid) {\n      if (localValidationRunId === that.$$currentValidationRunId) {\n        that.$setValidity(name, isValid);\n      }\n    }\n\n    function validationDone(allValid) {\n      if (localValidationRunId === that.$$currentValidationRunId) {\n\n        doneCallback(allValid);\n      }\n    }\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$commitViewValue\n   *\n   * @description\n   * Commit a pending update to the `$modelValue`.\n   *\n   * Updates may be pending by a debounced event or because the input is waiting for a some future\n   * event defined in `ng-model-options`. this method is rarely needed as `NgModelController`\n   * usually handles calling this in response to input events.\n   */\n  $commitViewValue: function() {\n    var viewValue = this.$viewValue;\n\n    this.$$timeout.cancel(this.$$pendingDebounce);\n\n    // If the view value has not changed then we should just exit, except in the case where there is\n    // a native validator on the element. In this case the validation state may have changed even though\n    // the viewValue has stayed empty.\n    if (this.$$lastCommittedViewValue === viewValue && (viewValue !== '' || !this.$$hasNativeValidators)) {\n      return;\n    }\n    this.$$updateEmptyClasses(viewValue);\n    this.$$lastCommittedViewValue = viewValue;\n\n    // change to dirty\n    if (this.$pristine) {\n      this.$setDirty();\n    }\n    this.$$parseAndValidate();\n  },\n\n  $$parseAndValidate: function() {\n    var viewValue = this.$$lastCommittedViewValue;\n    var modelValue = viewValue;\n    var that = this;\n\n    this.$$parserValid = isUndefined(modelValue) ? undefined : true;\n\n    if (this.$$parserValid) {\n      for (var i = 0; i < this.$parsers.length; i++) {\n        modelValue = this.$parsers[i](modelValue);\n        if (isUndefined(modelValue)) {\n          this.$$parserValid = false;\n          break;\n        }\n      }\n    }\n    if (isNumberNaN(this.$modelValue)) {\n      // this.$modelValue has not been touched yet...\n      this.$modelValue = this.$$ngModelGet(this.$$scope);\n    }\n    var prevModelValue = this.$modelValue;\n    var allowInvalid = this.$options.getOption('allowInvalid');\n    this.$$rawModelValue = modelValue;\n\n    if (allowInvalid) {\n      this.$modelValue = modelValue;\n      writeToModelIfNeeded();\n    }\n\n    // Pass the $$lastCommittedViewValue here, because the cached viewValue might be out of date.\n    // This can happen if e.g. $setViewValue is called from inside a parser\n    this.$$runValidators(modelValue, this.$$lastCommittedViewValue, function(allValid) {\n      if (!allowInvalid) {\n        // Note: Don't check this.$valid here, as we could have\n        // external validators (e.g. calculated on the server),\n        // that just call $setValidity and need the model value\n        // to calculate their validity.\n        that.$modelValue = allValid ? modelValue : undefined;\n        writeToModelIfNeeded();\n      }\n    });\n\n    function writeToModelIfNeeded() {\n      if (that.$modelValue !== prevModelValue) {\n        that.$$writeModelToScope();\n      }\n    }\n  },\n\n  $$writeModelToScope: function() {\n    this.$$ngModelSet(this.$$scope, this.$modelValue);\n    forEach(this.$viewChangeListeners, function(listener) {\n      try {\n        listener();\n      } catch (e) {\n        // eslint-disable-next-line no-invalid-this\n        this.$$exceptionHandler(e);\n      }\n    }, this);\n  },\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setViewValue\n   *\n   * @description\n   * Update the view value.\n   *\n   * This method should be called when a control wants to change the view value; typically,\n   * this is done from within a DOM event handler. For example, the {@link ng.directive:input input}\n   * directive calls it when the value of the input changes and {@link ng.directive:select select}\n   * calls it when an option is selected.\n   *\n   * When `$setViewValue` is called, the new `value` will be staged for committing through the `$parsers`\n   * and `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged\n   * value sent directly for processing, finally to be applied to `$modelValue` and then the\n   * **expression** specified in the `ng-model` attribute. Lastly, all the registered change listeners,\n   * in the `$viewChangeListeners` list, are called.\n   *\n   * In case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`\n   * and the `default` trigger is not listed, all those actions will remain pending until one of the\n   * `updateOn` events is triggered on the DOM element.\n   * All these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}\n   * directive is used with a custom debounce for this particular event.\n   * Note that a `$digest` is only triggered once the `updateOn` events are fired, or if `debounce`\n   * is specified, once the timer runs out.\n   *\n   * When used with standard inputs, the view value will always be a string (which is in some cases\n   * parsed into another type, such as a `Date` object for `input[date]`.)\n   * However, custom controls might also pass objects to this method. In this case, we should make\n   * a copy of the object before passing it to `$setViewValue`. This is because `ngModel` does not\n   * perform a deep watch of objects, it only looks for a change of identity. If you only change\n   * the property of the object then ngModel will not realize that the object has changed and\n   * will not invoke the `$parsers` and `$validators` pipelines. For this reason, you should\n   * not change properties of the copy once it has been passed to `$setViewValue`.\n   * Otherwise you may cause the model value on the scope to change incorrectly.\n   *\n   * <div class=\"alert alert-info\">\n   * In any case, the value passed to the method should always reflect the current value\n   * of the control. For example, if you are calling `$setViewValue` for an input element,\n   * you should pass the input DOM value. Otherwise, the control and the scope model become\n   * out of sync. It's also important to note that `$setViewValue` does not call `$render` or change\n   * the control's DOM value in any way. If we want to change the control's DOM value\n   * programmatically, we should update the `ngModel` scope expression. Its new value will be\n   * picked up by the model controller, which will run it through the `$formatters`, `$render` it\n   * to update the DOM, and finally call `$validate` on it.\n   * </div>\n   *\n   * @param {*} value value from the view.\n   * @param {string} trigger Event that triggered the update.\n   */\n  $setViewValue: function(value, trigger) {\n    this.$viewValue = value;\n    if (this.$options.getOption('updateOnDefault')) {\n      this.$$debounceViewValueCommit(trigger);\n    }\n  },\n\n  $$debounceViewValueCommit: function(trigger) {\n    var debounceDelay = this.$options.getOption('debounce');\n\n    if (isNumber(debounceDelay[trigger])) {\n      debounceDelay = debounceDelay[trigger];\n    } else if (isNumber(debounceDelay['default'])) {\n      debounceDelay = debounceDelay['default'];\n    }\n\n    this.$$timeout.cancel(this.$$pendingDebounce);\n    var that = this;\n    if (debounceDelay > 0) { // this fails if debounceDelay is an object\n      this.$$pendingDebounce = this.$$timeout(function() {\n        that.$commitViewValue();\n      }, debounceDelay);\n    } else if (this.$$scope.$root.$$phase) {\n      this.$commitViewValue();\n    } else {\n      this.$$scope.$apply(function() {\n        that.$commitViewValue();\n      });\n    }\n  },\n\n  /**\n   * @ngdoc method\n   *\n   * @name ngModel.NgModelController#$overrideModelOptions\n   *\n   * @description\n   *\n   * Override the current model options settings programmatically.\n   *\n   * The previous `ModelOptions` value will not be modified. Instead, a\n   * new `ModelOptions` object will inherit from the previous one overriding\n   * or inheriting settings that are defined in the given parameter.\n   *\n   * See {@link ngModelOptions} for information about what options can be specified\n   * and how model option inheritance works.\n   *\n   * @param {Object} options a hash of settings to override the previous options\n   *\n   */\n  $overrideModelOptions: function(options) {\n    this.$options = this.$options.createChild(options);\n  }\n};\n\nfunction setupModelWatcher(ctrl) {\n  // model -> value\n  // Note: we cannot use a normal scope.$watch as we want to detect the following:\n  // 1. scope value is 'a'\n  // 2. user enters 'b'\n  // 3. ng-change kicks in and reverts scope value to 'a'\n  //    -> scope value did not change since the last digest as\n  //       ng-change executes in apply phase\n  // 4. view should be changed back to 'a'\n  ctrl.$$scope.$watch(function ngModelWatch() {\n    var modelValue = ctrl.$$ngModelGet(ctrl.$$scope);\n\n    // if scope model value and ngModel value are out of sync\n    // TODO(perf): why not move this to the action fn?\n    if (modelValue !== ctrl.$modelValue &&\n       // checks for NaN is needed to allow setting the model to NaN when there's an asyncValidator\n        // eslint-disable-next-line no-self-compare\n       (ctrl.$modelValue === ctrl.$modelValue || modelValue === modelValue)\n    ) {\n      ctrl.$modelValue = ctrl.$$rawModelValue = modelValue;\n      ctrl.$$parserValid = undefined;\n\n      var formatters = ctrl.$formatters,\n          idx = formatters.length;\n\n      var viewValue = modelValue;\n      while (idx--) {\n        viewValue = formatters[idx](viewValue);\n      }\n      if (ctrl.$viewValue !== viewValue) {\n        ctrl.$$updateEmptyClasses(viewValue);\n        ctrl.$viewValue = ctrl.$$lastCommittedViewValue = viewValue;\n        ctrl.$render();\n\n        // It is possible that model and view value have been updated during render\n        ctrl.$$runValidators(ctrl.$modelValue, ctrl.$viewValue, noop);\n      }\n    }\n\n    return modelValue;\n  });\n}\n\n/**\n * @ngdoc method\n * @name ngModel.NgModelController#$setValidity\n *\n * @description\n * Change the validity state, and notify the form.\n *\n * This method can be called within $parsers/$formatters or a custom validation implementation.\n * However, in most cases it should be sufficient to use the `ngModel.$validators` and\n * `ngModel.$asyncValidators` collections which will call `$setValidity` automatically.\n *\n * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be assigned\n *        to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`\n *        (for unfulfilled `$asyncValidators`), so that it is available for data-binding.\n *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\n *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\n * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending (undefined),\n *                          or skipped (null). Pending is used for unfulfilled `$asyncValidators`.\n *                          Skipped is used by Angular when validators do not run because of parse errors and\n *                          when `$asyncValidators` do not run because any of the `$validators` failed.\n */\naddSetValidityMethod({\n  clazz: NgModelController,\n  set: function(object, property) {\n    object[property] = true;\n  },\n  unset: function(object, property) {\n    delete object[property];\n  }\n});\n\n\n/**\n * @ngdoc directive\n * @name ngModel\n *\n * @element input\n * @priority 1\n *\n * @description\n * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a\n * property on the scope using {@link ngModel.NgModelController NgModelController},\n * which is created and exposed by this directive.\n *\n * `ngModel` is responsible for:\n *\n * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`\n *   require.\n * - Providing validation behavior (i.e. required, number, email, url).\n * - Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).\n * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`,\n *   `ng-untouched`, `ng-empty`, `ng-not-empty`) including animations.\n * - Registering the control with its parent {@link ng.directive:form form}.\n *\n * Note: `ngModel` will try to bind to the property given by evaluating the expression on the\n * current scope. If the property doesn't already exist on this scope, it will be created\n * implicitly and added to the scope.\n *\n * For best practices on using `ngModel`, see:\n *\n *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)\n *\n * For basic examples, how to use `ngModel`, see:\n *\n *  - {@link ng.directive:input input}\n *    - {@link input[text] text}\n *    - {@link input[checkbox] checkbox}\n *    - {@link input[radio] radio}\n *    - {@link input[number] number}\n *    - {@link input[email] email}\n *    - {@link input[url] url}\n *    - {@link input[date] date}\n *    - {@link input[datetime-local] datetime-local}\n *    - {@link input[time] time}\n *    - {@link input[month] month}\n *    - {@link input[week] week}\n *  - {@link ng.directive:select select}\n *  - {@link ng.directive:textarea textarea}\n *\n * # Complex Models (objects or collections)\n *\n * By default, `ngModel` watches the model by reference, not value. This is important to know when\n * binding inputs to models that are objects (e.g. `Date`) or collections (e.g. arrays). If only properties of the\n * object or collection change, `ngModel` will not be notified and so the input will not be  re-rendered.\n *\n * The model must be assigned an entirely new object or collection before a re-rendering will occur.\n *\n * Some directives have options that will cause them to use a custom `$watchCollection` on the model expression\n * - for example, `ngOptions` will do so when a `track by` clause is included in the comprehension expression or\n * if the select is given the `multiple` attribute.\n *\n * The `$watchCollection()` method only does a shallow comparison, meaning that changing properties deeper than the\n * first level of the object (or only changing the properties of an item in the collection if it's an array) will still\n * not trigger a re-rendering of the model.\n *\n * # CSS classes\n * The following CSS classes are added and removed on the associated input/select/textarea element\n * depending on the validity of the model.\n *\n *  - `ng-valid`: the model is valid\n *  - `ng-invalid`: the model is invalid\n *  - `ng-valid-[key]`: for each valid key added by `$setValidity`\n *  - `ng-invalid-[key]`: for each invalid key added by `$setValidity`\n *  - `ng-pristine`: the control hasn't been interacted with yet\n *  - `ng-dirty`: the control has been interacted with\n *  - `ng-touched`: the control has been blurred\n *  - `ng-untouched`: the control hasn't been blurred\n *  - `ng-pending`: any `$asyncValidators` are unfulfilled\n *  - `ng-empty`: the view does not contain a value or the value is deemed \"empty\", as defined\n *     by the {@link ngModel.NgModelController#$isEmpty} method\n *  - `ng-not-empty`: the view contains a non-empty value\n *\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n *\n * ## Animation Hooks\n *\n * Animations within models are triggered when any of the associated CSS classes are added and removed\n * on the input element which is attached to the model. These classes include: `.ng-pristine`, `.ng-dirty`,\n * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.\n * The animations that are triggered within ngModel are similar to how they work in ngClass and\n * animations can be hooked into using CSS transitions, keyframes as well as JS animations.\n *\n * The following example shows a simple way to utilize CSS transitions to style an input element\n * that has been rendered as invalid after it has been validated:\n *\n * <pre>\n * //be sure to include ngAnimate as a module to hook into more\n * //advanced animations\n * .my-input {\n *   transition:0.5s linear all;\n *   background: white;\n * }\n * .my-input.ng-invalid {\n *   background: red;\n *   color:white;\n * }\n * </pre>\n *\n * @example\n * <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"inputExample\" name=\"ng-model\">\n     <file name=\"index.html\">\n       <script>\n        angular.module('inputExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.val = '1';\n          }]);\n       </script>\n       <style>\n         .my-input {\n           transition:all linear 0.5s;\n           background: transparent;\n         }\n         .my-input.ng-invalid {\n           color:white;\n           background: red;\n         }\n       </style>\n       <p id=\"inputDescription\">\n        Update input to see transitions when valid/invalid.\n        Integer is a valid value.\n       </p>\n       <form name=\"testForm\" ng-controller=\"ExampleController\">\n         <input ng-model=\"val\" ng-pattern=\"/^\\d+$/\" name=\"anim\" class=\"my-input\"\n                aria-describedby=\"inputDescription\" />\n       </form>\n     </file>\n * </example>\n *\n * ## Binding to a getter/setter\n *\n * Sometimes it's helpful to bind `ngModel` to a getter/setter function.  A getter/setter is a\n * function that returns a representation of the model when called with zero arguments, and sets\n * the internal state of a model when called with an argument. It's sometimes useful to use this\n * for models that have an internal representation that's different from what the model exposes\n * to the view.\n *\n * <div class=\"alert alert-success\">\n * **Best Practice:** It's best to keep getters fast because Angular is likely to call them more\n * frequently than other parts of your code.\n * </div>\n *\n * You use this behavior by adding `ng-model-options=\"{ getterSetter: true }\"` to an element that\n * has `ng-model` attached to it. You can also add `ng-model-options=\"{ getterSetter: true }\"` to\n * a `<form>`, which will enable this behavior for all `<input>`s within it. See\n * {@link ng.directive:ngModelOptions `ngModelOptions`} for more.\n *\n * The following example shows how to use `ngModel` with a getter/setter:\n *\n * @example\n * <example name=\"ngModel-getter-setter\" module=\"getterSetterExample\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <form name=\"userForm\">\n           <label>Name:\n             <input type=\"text\" name=\"userName\"\n                    ng-model=\"user.name\"\n                    ng-model-options=\"{ getterSetter: true }\" />\n           </label>\n         </form>\n         <pre>user.name = <span ng-bind=\"user.name()\"></span></pre>\n       </div>\n     </file>\n     <file name=\"app.js\">\n       angular.module('getterSetterExample', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           var _name = 'Brian';\n           $scope.user = {\n             name: function(newName) {\n              // Note that newName can be undefined for two reasons:\n              // 1. Because it is called as a getter and thus called with no arguments\n              // 2. Because the property should actually be set to undefined. This happens e.g. if the\n              //    input is invalid\n              return arguments.length ? (_name = newName) : _name;\n             }\n           };\n         }]);\n     </file>\n * </example>\n */\nvar ngModelDirective = ['$rootScope', function($rootScope) {\n  return {\n    restrict: 'A',\n    require: ['ngModel', '^?form', '^?ngModelOptions'],\n    controller: NgModelController,\n    // Prelink needs to run before any input directive\n    // so that we can set the NgModelOptions in NgModelController\n    // before anyone else uses it.\n    priority: 1,\n    compile: function ngModelCompile(element) {\n      // Setup initial state of the control\n      element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS);\n\n      return {\n        pre: function ngModelPreLink(scope, element, attr, ctrls) {\n          var modelCtrl = ctrls[0],\n              formCtrl = ctrls[1] || modelCtrl.$$parentForm,\n              optionsCtrl = ctrls[2];\n\n          if (optionsCtrl) {\n            modelCtrl.$options = optionsCtrl.$options;\n          }\n\n          modelCtrl.$$initGetterSetters();\n\n          // notify others, especially parent forms\n          formCtrl.$addControl(modelCtrl);\n\n          attr.$observe('name', function(newValue) {\n            if (modelCtrl.$name !== newValue) {\n              modelCtrl.$$parentForm.$$renameControl(modelCtrl, newValue);\n            }\n          });\n\n          scope.$on('$destroy', function() {\n            modelCtrl.$$parentForm.$removeControl(modelCtrl);\n          });\n        },\n        post: function ngModelPostLink(scope, element, attr, ctrls) {\n          var modelCtrl = ctrls[0];\n          if (modelCtrl.$options.getOption('updateOn')) {\n            element.on(modelCtrl.$options.getOption('updateOn'), function(ev) {\n              modelCtrl.$$debounceViewValueCommit(ev && ev.type);\n            });\n          }\n\n          function setTouched() {\n            modelCtrl.$setTouched();\n          }\n\n          element.on('blur', function() {\n            if (modelCtrl.$touched) return;\n\n            if ($rootScope.$$phase) {\n              scope.$evalAsync(setTouched);\n            } else {\n              scope.$apply(setTouched);\n            }\n          });\n        }\n      };\n    }\n  };\n}];\n\n/* exported defaultModelOptions */\nvar defaultModelOptions;\nvar DEFAULT_REGEXP = /(\\s+|^)default(\\s+|$)/;\n\n/**\n * @ngdoc type\n * @name ModelOptions\n * @description\n * A container for the options set by the {@link ngModelOptions} directive\n */\nfunction ModelOptions(options) {\n  this.$$options = options;\n}\n\nModelOptions.prototype = {\n\n  /**\n   * @ngdoc method\n   * @name ModelOptions#getOption\n   * @param {string} name the name of the option to retrieve\n   * @returns {*} the value of the option\n   * @description\n   * Returns the value of the given option\n   */\n  getOption: function(name) {\n    return this.$$options[name];\n  },\n\n  /**\n   * @ngdoc method\n   * @name ModelOptions#createChild\n   * @param {Object} options a hash of options for the new child that will override the parent's options\n   * @return {ModelOptions} a new `ModelOptions` object initialized with the given options.\n   */\n  createChild: function(options) {\n    var inheritAll = false;\n\n    // make a shallow copy\n    options = extend({}, options);\n\n    // Inherit options from the parent if specified by the value `\"$inherit\"`\n    forEach(options, /* @this */ function(option, key) {\n      if (option === '$inherit') {\n        if (key === '*') {\n          inheritAll = true;\n        } else {\n          options[key] = this.$$options[key];\n          // `updateOn` is special so we must also inherit the `updateOnDefault` option\n          if (key === 'updateOn') {\n            options.updateOnDefault = this.$$options.updateOnDefault;\n          }\n        }\n      } else {\n        if (key === 'updateOn') {\n          // If the `updateOn` property contains the `default` event then we have to remove\n          // it from the event list and set the `updateOnDefault` flag.\n          options.updateOnDefault = false;\n          options[key] = trim(option.replace(DEFAULT_REGEXP, function() {\n            options.updateOnDefault = true;\n            return ' ';\n          }));\n        }\n      }\n    }, this);\n\n    if (inheritAll) {\n      // We have a property of the form: `\"*\": \"$inherit\"`\n      delete options['*'];\n      defaults(options, this.$$options);\n    }\n\n    // Finally add in any missing defaults\n    defaults(options, defaultModelOptions.$$options);\n\n    return new ModelOptions(options);\n  }\n};\n\n\ndefaultModelOptions = new ModelOptions({\n  updateOn: '',\n  updateOnDefault: true,\n  debounce: 0,\n  getterSetter: false,\n  allowInvalid: false,\n  timezone: null\n});\n\n\n/**\n * @ngdoc directive\n * @name ngModelOptions\n *\n * @description\n * This directive allows you to modify the behaviour of {@link ngModel} directives within your\n * application. You can specify an `ngModelOptions` directive on any element. All {@link ngModel}\n * directives will use the options of their nearest `ngModelOptions` ancestor.\n *\n * The `ngModelOptions` settings are found by evaluating the value of the attribute directive as\n * an Angular expression. This expression should evaluate to an object, whose properties contain\n * the settings. For example: `<div \"ng-model-options\"=\"{ debounce: 100 }\"`.\n *\n * ## Inheriting Options\n *\n * You can specify that an `ngModelOptions` setting should be inherited from a parent `ngModelOptions`\n * directive by giving it the value of `\"$inherit\"`.\n * Then it will inherit that setting from the first `ngModelOptions` directive found by traversing up the\n * DOM tree. If there is no ancestor element containing an `ngModelOptions` directive then default settings\n * will be used.\n *\n * For example given the following fragment of HTML\n *\n *\n * ```html\n * <div ng-model-options=\"{ allowInvalid: true, debounce: 200 }\">\n *   <form ng-model-options=\"{ updateOn: 'blur', allowInvalid: '$inherit' }\">\n *     <input ng-model-options=\"{ updateOn: 'default', allowInvalid: '$inherit' }\" />\n *   </form>\n * </div>\n * ```\n *\n * the `input` element will have the following settings\n *\n * ```js\n * { allowInvalid: true, updateOn: 'default', debounce: 0 }\n * ```\n *\n * Notice that the `debounce` setting was not inherited and used the default value instead.\n *\n * You can specify that all undefined settings are automatically inherited from an ancestor by\n * including a property with key of `\"*\"` and value of `\"$inherit\"`.\n *\n * For example given the following fragment of HTML\n *\n *\n * ```html\n * <div ng-model-options=\"{ allowInvalid: true, debounce: 200 }\">\n *   <form ng-model-options=\"{ updateOn: 'blur', \"*\": '$inherit' }\">\n *     <input ng-model-options=\"{ updateOn: 'default', \"*\": '$inherit' }\" />\n *   </form>\n * </div>\n * ```\n *\n * the `input` element will have the following settings\n *\n * ```js\n * { allowInvalid: true, updateOn: 'default', debounce: 200 }\n * ```\n *\n * Notice that the `debounce` setting now inherits the value from the outer `<div>` element.\n *\n * If you are creating a reusable component then you should be careful when using `\"*\": \"$inherit\"`\n * since you may inadvertently inherit a setting in the future that changes the behavior of your component.\n *\n *\n * ## Triggering and debouncing model updates\n *\n * The `updateOn` and `debounce` properties allow you to specify a custom list of events that will\n * trigger a model update and/or a debouncing delay so that the actual update only takes place when\n * a timer expires; this timer will be reset after another change takes place.\n *\n * Given the nature of `ngModelOptions`, the value displayed inside input fields in the view might\n * be different from the value in the actual model. This means that if you update the model you\n * should also invoke {@link ngModel.NgModelController#$rollbackViewValue} on the relevant input field in\n * order to make sure it is synchronized with the model and that any debounced action is canceled.\n *\n * The easiest way to reference the control's {@link ngModel.NgModelController#$rollbackViewValue}\n * method is by making sure the input is placed inside a form that has a `name` attribute. This is\n * important because `form` controllers are published to the related scope under the name in their\n * `name` attribute.\n *\n * Any pending changes will take place immediately when an enclosing form is submitted via the\n * `submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\n * to have access to the updated model.\n *\n * The following example shows how to override immediate updates. Changes on the inputs within the\n * form will update the model only when the control loses focus (blur event). If `escape` key is\n * pressed while the input field is focused, the value is reset to the value in the current model.\n *\n * <example name=\"ngModelOptions-directive-blur\" module=\"optionsExample\">\n *   <file name=\"index.html\">\n *     <div ng-controller=\"ExampleController\">\n *       <form name=\"userForm\">\n *         <label>\n *           Name:\n *           <input type=\"text\" name=\"userName\"\n *                  ng-model=\"user.name\"\n *                  ng-model-options=\"{ updateOn: 'blur' }\"\n *                  ng-keyup=\"cancel($event)\" />\n *         </label><br />\n *         <label>\n *           Other data:\n *           <input type=\"text\" ng-model=\"user.data\" />\n *         </label><br />\n *       </form>\n *       <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n *     </div>\n *   </file>\n *   <file name=\"app.js\">\n *     angular.module('optionsExample', [])\n *       .controller('ExampleController', ['$scope', function($scope) {\n *         $scope.user = { name: 'say', data: '' };\n *\n *         $scope.cancel = function(e) {\n *           if (e.keyCode === 27) {\n *             $scope.userForm.userName.$rollbackViewValue();\n *           }\n *         };\n *       }]);\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     var model = element(by.binding('user.name'));\n *     var input = element(by.model('user.name'));\n *     var other = element(by.model('user.data'));\n *\n *     it('should allow custom events', function() {\n *       input.sendKeys(' hello');\n *       input.click();\n *       expect(model.getText()).toEqual('say');\n *       other.click();\n *       expect(model.getText()).toEqual('say hello');\n *     });\n *\n *     it('should $rollbackViewValue when model changes', function() {\n *       input.sendKeys(' hello');\n *       expect(input.getAttribute('value')).toEqual('say hello');\n *       input.sendKeys(protractor.Key.ESCAPE);\n *       expect(input.getAttribute('value')).toEqual('say');\n *       other.click();\n *       expect(model.getText()).toEqual('say');\n *     });\n *   </file>\n * </example>\n *\n * The next example shows how to debounce model changes. Model will be updated only 1 sec after last change.\n * If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.\n *\n * <example name=\"ngModelOptions-directive-debounce\" module=\"optionsExample\">\n *   <file name=\"index.html\">\n *     <div ng-controller=\"ExampleController\">\n *       <form name=\"userForm\">\n *         Name:\n *         <input type=\"text\" name=\"userName\"\n *                ng-model=\"user.name\"\n *                ng-model-options=\"{ debounce: 1000 }\" />\n *         <button ng-click=\"userForm.userName.$rollbackViewValue(); user.name=''\">Clear</button><br />\n *       </form>\n *       <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n *     </div>\n *   </file>\n *   <file name=\"app.js\">\n *     angular.module('optionsExample', [])\n *       .controller('ExampleController', ['$scope', function($scope) {\n *         $scope.user = { name: 'say' };\n *       }]);\n *   </file>\n * </example>\n *\n * ## Model updates and validation\n *\n * The default behaviour in `ngModel` is that the model value is set to `undefined` when the\n * validation determines that the value is invalid. By setting the `allowInvalid` property to true,\n * the model will still be updated even if the value is invalid.\n *\n *\n * ## Connecting to the scope\n *\n * By setting the `getterSetter` property to true you are telling ngModel that the `ngModel` expression\n * on the scope refers to a \"getter/setter\" function rather than the value itself.\n *\n * The following example shows how to bind to getter/setters:\n *\n * <example name=\"ngModelOptions-directive-getter-setter\" module=\"getterSetterExample\">\n *   <file name=\"index.html\">\n *     <div ng-controller=\"ExampleController\">\n *       <form name=\"userForm\">\n *         <label>\n *           Name:\n *           <input type=\"text\" name=\"userName\"\n *                  ng-model=\"user.name\"\n *                  ng-model-options=\"{ getterSetter: true }\" />\n *         </label>\n *       </form>\n *       <pre>user.name = <span ng-bind=\"user.name()\"></span></pre>\n *     </div>\n *   </file>\n *   <file name=\"app.js\">\n *     angular.module('getterSetterExample', [])\n *       .controller('ExampleController', ['$scope', function($scope) {\n *         var _name = 'Brian';\n *         $scope.user = {\n *           name: function(newName) {\n *             return angular.isDefined(newName) ? (_name = newName) : _name;\n *           }\n *         };\n *       }]);\n *   </file>\n * </example>\n *\n *\n * ## Specifying timezones\n *\n * You can specify the timezone that date/time input directives expect by providing its name in the\n * `timezone` property.\n *\n * @param {Object} ngModelOptions options to apply to {@link ngModel} directives on this element and\n *   and its descendents. Valid keys are:\n *   - `updateOn`: string specifying which event should the input be bound to. You can set several\n *     events using an space delimited list. There is a special event called `default` that\n *     matches the default events belonging to the control.\n *   - `debounce`: integer value which contains the debounce model update value in milliseconds. A\n *     value of 0 triggers an immediate update. If an object is supplied instead, you can specify a\n *     custom value for each event. For example:\n *     ```\n *     ng-model-options=\"{\n *       updateOn: 'default blur',\n *       debounce: { 'default': 500, 'blur': 0 }\n *     }\"\n *     ```\n *   - `allowInvalid`: boolean value which indicates that the model can be set with values that did\n *     not validate correctly instead of the default behavior of setting the model to undefined.\n *   - `getterSetter`: boolean value which determines whether or not to treat functions bound to\n *     `ngModel` as getters/setters.\n *   - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for\n *     `<input type=\"date\" />`, `<input type=\"time\" />`, ... . It understands UTC/GMT and the\n *     continental US time zone abbreviations, but for general use, use a time zone offset, for\n *     example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)\n *     If not specified, the timezone of the browser will be used.\n *\n */\nvar ngModelOptionsDirective = function() {\n  NgModelOptionsController.$inject = ['$attrs', '$scope'];\n  function NgModelOptionsController($attrs, $scope) {\n    this.$$attrs = $attrs;\n    this.$$scope = $scope;\n  }\n  NgModelOptionsController.prototype = {\n    $onInit: function() {\n      var parentOptions = this.parentCtrl ? this.parentCtrl.$options : defaultModelOptions;\n      var modelOptionsDefinition = this.$$scope.$eval(this.$$attrs.ngModelOptions);\n\n      this.$options = parentOptions.createChild(modelOptionsDefinition);\n    }\n  };\n\n  return {\n    restrict: 'A',\n    // ngModelOptions needs to run before ngModel and input directives\n    priority: 10,\n    require: {parentCtrl: '?^^ngModelOptions'},\n    bindToController: true,\n    controller: NgModelOptionsController\n  };\n};\n\n\n// shallow copy over values from `src` that are not already specified on `dst`\nfunction defaults(dst, src) {\n  forEach(src, function(value, key) {\n    if (!isDefined(dst[key])) {\n      dst[key] = value;\n    }\n  });\n}\n\n/**\n * @ngdoc directive\n * @name ngNonBindable\n * @restrict AC\n * @priority 1000\n *\n * @description\n * The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current\n * DOM element. This is useful if the element contains what appears to be Angular directives and\n * bindings but which should be ignored by Angular. This could be the case if you have a site that\n * displays snippets of code, for instance.\n *\n * @element ANY\n *\n * @example\n * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,\n * but the one wrapped in `ngNonBindable` is left alone.\n *\n * @example\n    <example name=\"ng-non-bindable\">\n      <file name=\"index.html\">\n        <div>Normal: {{1 + 2}}</div>\n        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-non-bindable', function() {\n         expect(element(by.binding('1 + 2')).getText()).toContain('3');\n         expect(element.all(by.css('div')).last().getText()).toMatch(/1 \\+ 2/);\n       });\n      </file>\n    </example>\n */\nvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\n\n/* exported ngOptionsDirective */\n\n/* global jqLiteRemove */\n\nvar ngOptionsMinErr = minErr('ngOptions');\n\n/**\n * @ngdoc directive\n * @name ngOptions\n * @restrict A\n *\n * @description\n *\n * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`\n * elements for the `<select>` element using the array or object obtained by evaluating the\n * `ngOptions` comprehension expression.\n *\n * In many cases, {@link ng.directive:ngRepeat ngRepeat} can be used on `<option>` elements instead of\n * `ngOptions` to achieve a similar result. However, `ngOptions` provides some benefits:\n * - more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\n * comprehension expression\n * - reduced memory consumption by not creating a new scope for each repeated instance\n * - increased render speed by creating the options in a documentFragment instead of individually\n *\n * When an item in the `<select>` menu is selected, the array element or object property\n * represented by the selected option will be bound to the model identified by the `ngModel`\n * directive.\n *\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n * be nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\n * option. See example below for demonstration.\n *\n * ## Complex Models (objects or collections)\n *\n * By default, `ngModel` watches the model by reference, not value. This is important to know when\n * binding the select to a model that is an object or a collection.\n *\n * One issue occurs if you want to preselect an option. For example, if you set\n * the model to an object that is equal to an object in your collection, `ngOptions` won't be able to set the selection,\n * because the objects are not identical. So by default, you should always reference the item in your collection\n * for preselections, e.g.: `$scope.selected = $scope.collection[3]`.\n *\n * Another solution is to use a `track by` clause, because then `ngOptions` will track the identity\n * of the item not by reference, but by the result of the `track by` expression. For example, if your\n * collection items have an id property, you would `track by item.id`.\n *\n * A different issue with objects or collections is that ngModel won't detect if an object property or\n * a collection item changes. For that reason, `ngOptions` additionally watches the model using\n * `$watchCollection`, when the expression contains a `track by` clause or the the select has the `multiple` attribute.\n * This allows ngOptions to trigger a re-rendering of the options even if the actual object/collection\n * has not changed identity, but only a property on the object or an item in the collection changes.\n *\n * Note that `$watchCollection` does a shallow comparison of the properties of the object (or the items in the collection\n * if the model is an array). This means that changing a property deeper than the first level inside the\n * object/collection will not trigger a re-rendering.\n *\n * ## `select` **`as`**\n *\n * Using `select` **`as`** will bind the result of the `select` expression to the model, but\n * the value of the `<select>` and `<option>` html elements will be either the index (for array data sources)\n * or property name (for object data sources) of the value within the collection. If a **`track by`** expression\n * is used, the result of that expression will be set as the value of the `option` and `select` elements.\n *\n *\n * ### `select` **`as`** and **`track by`**\n *\n * <div class=\"alert alert-warning\">\n * Be careful when using `select` **`as`** and **`track by`** in the same expression.\n * </div>\n *\n * Given this array of items on the $scope:\n *\n * ```js\n * $scope.items = [{\n *   id: 1,\n *   label: 'aLabel',\n *   subItem: { name: 'aSubItem' }\n * }, {\n *   id: 2,\n *   label: 'bLabel',\n *   subItem: { name: 'bSubItem' }\n * }];\n * ```\n *\n * This will work:\n *\n * ```html\n * <select ng-options=\"item as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n * ```\n * ```js\n * $scope.selected = $scope.items[0];\n * ```\n *\n * but this will not work:\n *\n * ```html\n * <select ng-options=\"item.subItem as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n * ```\n * ```js\n * $scope.selected = $scope.items[0].subItem;\n * ```\n *\n * In both examples, the **`track by`** expression is applied successfully to each `item` in the\n * `items` array. Because the selected option has been set programmatically in the controller, the\n * **`track by`** expression is also applied to the `ngModel` value. In the first example, the\n * `ngModel` value is `items[0]` and the **`track by`** expression evaluates to `items[0].id` with\n * no issue. In the second example, the `ngModel` value is `items[0].subItem` and the **`track by`**\n * expression evaluates to `items[0].subItem.id` (which is undefined). As a result, the model value\n * is not matched against any `<option>` and the `<select>` appears as having no selected value.\n *\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required The control is considered valid only if value is entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {comprehension_expression=} ngOptions in one of the following forms:\n *\n *   * for array data sources:\n *     * `label` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array`\n *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array`\n *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n *     * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`\n *        (for including a filter with `track by`)\n *   * for object data sources:\n *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n *     * `label` **`disable when`** `disable` **`for (`**`key`**`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`group by`** `group`\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`disable when`** `disable`\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n *\n * Where:\n *\n *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n *   * `value`: local variable which will refer to each item in the `array` or each property value\n *      of `object` during iteration.\n *   * `key`: local variable which will refer to a property name in `object` during iteration.\n *   * `label`: The result of this expression will be the label for `<option>` element. The\n *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\n *      element. If not specified, `select` expression will default to `value`.\n *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\n *      DOM element.\n *   * `disable`: The result of this expression will be used to disable the rendered `<option>`\n *      element. Return `true` to disable.\n *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be\n *      used to identify the objects in the array. The `trackexpr` will most likely refer to the\n *     `value` variable (e.g. `value.propertyName`). With this the selection is preserved\n *      even when the options are recreated (e.g. reloaded from the server).\n *\n * @example\n    <example module=\"selectExample\" name=\"select\">\n      <file name=\"index.html\">\n        <script>\n        angular.module('selectExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.colors = [\n              {name:'black', shade:'dark'},\n              {name:'white', shade:'light', notAnOption: true},\n              {name:'red', shade:'dark'},\n              {name:'blue', shade:'dark', notAnOption: true},\n              {name:'yellow', shade:'light', notAnOption: false}\n            ];\n            $scope.myColor = $scope.colors[2]; // red\n          }]);\n        </script>\n        <div ng-controller=\"ExampleController\">\n          <ul>\n            <li ng-repeat=\"color in colors\">\n              <label>Name: <input ng-model=\"color.name\"></label>\n              <label><input type=\"checkbox\" ng-model=\"color.notAnOption\"> Disabled?</label>\n              <button ng-click=\"colors.splice($index, 1)\" aria-label=\"Remove\">X</button>\n            </li>\n            <li>\n              <button ng-click=\"colors.push({})\">add</button>\n            </li>\n          </ul>\n          <hr/>\n          <label>Color (null not allowed):\n            <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\"></select>\n          </label><br/>\n          <label>Color (null allowed):\n          <span  class=\"nullable\">\n            <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\">\n              <option value=\"\">-- choose color --</option>\n            </select>\n          </span></label><br/>\n\n          <label>Color grouped by shade:\n            <select ng-model=\"myColor\" ng-options=\"color.name group by color.shade for color in colors\">\n            </select>\n          </label><br/>\n\n          <label>Color grouped by shade, with some disabled:\n            <select ng-model=\"myColor\"\n                  ng-options=\"color.name group by color.shade disable when color.notAnOption for color in colors\">\n            </select>\n          </label><br/>\n\n\n\n          Select <button ng-click=\"myColor = { name:'not in list', shade: 'other' }\">bogus</button>.\n          <br/>\n          <hr/>\n          Currently selected: {{ {selected_color:myColor} }}\n          <div style=\"border:solid 1px black; height:20px\"\n               ng-style=\"{'background-color':myColor.name}\">\n          </div>\n        </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n         it('should check ng-options', function() {\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');\n           element.all(by.model('myColor')).first().click();\n           element.all(by.css('select[ng-model=\"myColor\"] option')).first().click();\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');\n           element(by.css('.nullable select[ng-model=\"myColor\"]')).click();\n           element.all(by.css('.nullable select[ng-model=\"myColor\"] option')).first().click();\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');\n         });\n      </file>\n    </example>\n */\n\n/* eslint-disable max-len */\n//                     //00001111111111000000000002222222222000000000000000000000333333333300000000000000000000000004444444444400000000000005555555555555000000000666666666666600000007777777777777000000000000000888888888800000000000000000009999999999\nvar NG_OPTIONS_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?(?:\\s+disable\\s+when\\s+([\\s\\S]+?))?\\s+for\\s+(?:([$\\w][$\\w]*)|(?:\\(\\s*([$\\w][$\\w]*)\\s*,\\s*([$\\w][$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/;\n                        // 1: value expression (valueFn)\n                        // 2: label expression (displayFn)\n                        // 3: group by expression (groupByFn)\n                        // 4: disable when expression (disableWhenFn)\n                        // 5: array item variable name\n                        // 6: object item key variable name\n                        // 7: object item value variable name\n                        // 8: collection expression\n                        // 9: track by expression\n/* eslint-enable */\n\n\nvar ngOptionsDirective = ['$compile', '$document', '$parse', function($compile, $document, $parse) {\n\n  function parseOptionsExpression(optionsExp, selectElement, scope) {\n\n    var match = optionsExp.match(NG_OPTIONS_REGEXP);\n    if (!(match)) {\n      throw ngOptionsMinErr('iexp',\n        'Expected expression in form of ' +\n        '\\'_select_ (as _label_)? for (_key_,)?_value_ in _collection_\\'' +\n        ' but got \\'{0}\\'. Element: {1}',\n        optionsExp, startingTag(selectElement));\n    }\n\n    // Extract the parts from the ngOptions expression\n\n    // The variable name for the value of the item in the collection\n    var valueName = match[5] || match[7];\n    // The variable name for the key of the item in the collection\n    var keyName = match[6];\n\n    // An expression that generates the viewValue for an option if there is a label expression\n    var selectAs = / as /.test(match[0]) && match[1];\n    // An expression that is used to track the id of each object in the options collection\n    var trackBy = match[9];\n    // An expression that generates the viewValue for an option if there is no label expression\n    var valueFn = $parse(match[2] ? match[1] : valueName);\n    var selectAsFn = selectAs && $parse(selectAs);\n    var viewValueFn = selectAsFn || valueFn;\n    var trackByFn = trackBy && $parse(trackBy);\n\n    // Get the value by which we are going to track the option\n    // if we have a trackFn then use that (passing scope and locals)\n    // otherwise just hash the given viewValue\n    var getTrackByValueFn = trackBy ?\n                              function(value, locals) { return trackByFn(scope, locals); } :\n                              function getHashOfValue(value) { return hashKey(value); };\n    var getTrackByValue = function(value, key) {\n      return getTrackByValueFn(value, getLocals(value, key));\n    };\n\n    var displayFn = $parse(match[2] || match[1]);\n    var groupByFn = $parse(match[3] || '');\n    var disableWhenFn = $parse(match[4] || '');\n    var valuesFn = $parse(match[8]);\n\n    var locals = {};\n    var getLocals = keyName ? function(value, key) {\n      locals[keyName] = key;\n      locals[valueName] = value;\n      return locals;\n    } : function(value) {\n      locals[valueName] = value;\n      return locals;\n    };\n\n\n    function Option(selectValue, viewValue, label, group, disabled) {\n      this.selectValue = selectValue;\n      this.viewValue = viewValue;\n      this.label = label;\n      this.group = group;\n      this.disabled = disabled;\n    }\n\n    function getOptionValuesKeys(optionValues) {\n      var optionValuesKeys;\n\n      if (!keyName && isArrayLike(optionValues)) {\n        optionValuesKeys = optionValues;\n      } else {\n        // if object, extract keys, in enumeration order, unsorted\n        optionValuesKeys = [];\n        for (var itemKey in optionValues) {\n          if (optionValues.hasOwnProperty(itemKey) && itemKey.charAt(0) !== '$') {\n            optionValuesKeys.push(itemKey);\n          }\n        }\n      }\n      return optionValuesKeys;\n    }\n\n    return {\n      trackBy: trackBy,\n      getTrackByValue: getTrackByValue,\n      getWatchables: $parse(valuesFn, function(optionValues) {\n        // Create a collection of things that we would like to watch (watchedArray)\n        // so that they can all be watched using a single $watchCollection\n        // that only runs the handler once if anything changes\n        var watchedArray = [];\n        optionValues = optionValues || [];\n\n        var optionValuesKeys = getOptionValuesKeys(optionValues);\n        var optionValuesLength = optionValuesKeys.length;\n        for (var index = 0; index < optionValuesLength; index++) {\n          var key = (optionValues === optionValuesKeys) ? index : optionValuesKeys[index];\n          var value = optionValues[key];\n\n          var locals = getLocals(value, key);\n          var selectValue = getTrackByValueFn(value, locals);\n          watchedArray.push(selectValue);\n\n          // Only need to watch the displayFn if there is a specific label expression\n          if (match[2] || match[1]) {\n            var label = displayFn(scope, locals);\n            watchedArray.push(label);\n          }\n\n          // Only need to watch the disableWhenFn if there is a specific disable expression\n          if (match[4]) {\n            var disableWhen = disableWhenFn(scope, locals);\n            watchedArray.push(disableWhen);\n          }\n        }\n        return watchedArray;\n      }),\n\n      getOptions: function() {\n\n        var optionItems = [];\n        var selectValueMap = {};\n\n        // The option values were already computed in the `getWatchables` fn,\n        // which must have been called to trigger `getOptions`\n        var optionValues = valuesFn(scope) || [];\n        var optionValuesKeys = getOptionValuesKeys(optionValues);\n        var optionValuesLength = optionValuesKeys.length;\n\n        for (var index = 0; index < optionValuesLength; index++) {\n          var key = (optionValues === optionValuesKeys) ? index : optionValuesKeys[index];\n          var value = optionValues[key];\n          var locals = getLocals(value, key);\n          var viewValue = viewValueFn(scope, locals);\n          var selectValue = getTrackByValueFn(viewValue, locals);\n          var label = displayFn(scope, locals);\n          var group = groupByFn(scope, locals);\n          var disabled = disableWhenFn(scope, locals);\n          var optionItem = new Option(selectValue, viewValue, label, group, disabled);\n\n          optionItems.push(optionItem);\n          selectValueMap[selectValue] = optionItem;\n        }\n\n        return {\n          items: optionItems,\n          selectValueMap: selectValueMap,\n          getOptionFromViewValue: function(value) {\n            return selectValueMap[getTrackByValue(value)];\n          },\n          getViewValueFromOption: function(option) {\n            // If the viewValue could be an object that may be mutated by the application,\n            // we need to make a copy and not return the reference to the value on the option.\n            return trackBy ? copy(option.viewValue) : option.viewValue;\n          }\n        };\n      }\n    };\n  }\n\n\n  // we can't just jqLite('<option>') since jqLite is not smart enough\n  // to create it in <select> and IE barfs otherwise.\n  var optionTemplate = window.document.createElement('option'),\n      optGroupTemplate = window.document.createElement('optgroup');\n\n    function ngOptionsPostLink(scope, selectElement, attr, ctrls) {\n\n      var selectCtrl = ctrls[0];\n      var ngModelCtrl = ctrls[1];\n      var multiple = attr.multiple;\n\n      // The emptyOption allows the application developer to provide their own custom \"empty\"\n      // option when the viewValue does not match any of the option values.\n      for (var i = 0, children = selectElement.children(), ii = children.length; i < ii; i++) {\n        if (children[i].value === '') {\n          selectCtrl.hasEmptyOption = true;\n          selectCtrl.emptyOption = children.eq(i);\n          break;\n        }\n      }\n\n      var providedEmptyOption = !!selectCtrl.emptyOption;\n\n      var unknownOption = jqLite(optionTemplate.cloneNode(false));\n      unknownOption.val('?');\n\n      var options;\n      var ngOptions = parseOptionsExpression(attr.ngOptions, selectElement, scope);\n      // This stores the newly created options before they are appended to the select.\n      // Since the contents are removed from the fragment when it is appended,\n      // we only need to create it once.\n      var listFragment = $document[0].createDocumentFragment();\n\n      // Overwrite the implementation. ngOptions doesn't use hashes\n      selectCtrl.generateUnknownOptionValue = function(val) {\n        return '?';\n      };\n\n      // Update the controller methods for multiple selectable options\n      if (!multiple) {\n\n        selectCtrl.writeValue = function writeNgOptionsValue(value) {\n          var selectedOption = options.selectValueMap[selectElement.val()];\n          var option = options.getOptionFromViewValue(value);\n\n          // Make sure to remove the selected attribute from the previously selected option\n          // Otherwise, screen readers might get confused\n          if (selectedOption) selectedOption.element.removeAttribute('selected');\n\n          if (option) {\n            // Don't update the option when it is already selected.\n            // For example, the browser will select the first option by default. In that case,\n            // most properties are set automatically - except the `selected` attribute, which we\n            // set always\n\n            if (selectElement[0].value !== option.selectValue) {\n              selectCtrl.removeUnknownOption();\n              selectCtrl.unselectEmptyOption();\n\n              selectElement[0].value = option.selectValue;\n              option.element.selected = true;\n            }\n\n            option.element.setAttribute('selected', 'selected');\n          } else {\n\n            if (providedEmptyOption) {\n              selectCtrl.selectEmptyOption();\n            } else if (selectCtrl.unknownOption.parent().length) {\n              selectCtrl.updateUnknownOption(value);\n            } else {\n              selectCtrl.renderUnknownOption(value);\n            }\n          }\n        };\n\n        selectCtrl.readValue = function readNgOptionsValue() {\n\n          var selectedOption = options.selectValueMap[selectElement.val()];\n\n          if (selectedOption && !selectedOption.disabled) {\n            selectCtrl.unselectEmptyOption();\n            selectCtrl.removeUnknownOption();\n            return options.getViewValueFromOption(selectedOption);\n          }\n          return null;\n        };\n\n        // If we are using `track by` then we must watch the tracked value on the model\n        // since ngModel only watches for object identity change\n        // FIXME: When a user selects an option, this watch will fire needlessly\n        if (ngOptions.trackBy) {\n          scope.$watch(\n            function() { return ngOptions.getTrackByValue(ngModelCtrl.$viewValue); },\n            function() { ngModelCtrl.$render(); }\n          );\n        }\n\n      } else {\n\n        selectCtrl.writeValue = function writeNgOptionsMultiple(values) {\n          // Only set `<option>.selected` if necessary, in order to prevent some browsers from\n          // scrolling to `<option>` elements that are outside the `<select>` element's viewport.\n\n          var selectedOptions = values && values.map(getAndUpdateSelectedOption) || [];\n\n          options.items.forEach(function(option) {\n            if (option.element.selected && !includes(selectedOptions, option)) {\n              option.element.selected = false;\n            }\n          });\n        };\n\n\n        selectCtrl.readValue = function readNgOptionsMultiple() {\n          var selectedValues = selectElement.val() || [],\n              selections = [];\n\n          forEach(selectedValues, function(value) {\n            var option = options.selectValueMap[value];\n            if (option && !option.disabled) selections.push(options.getViewValueFromOption(option));\n          });\n\n          return selections;\n        };\n\n        // If we are using `track by` then we must watch these tracked values on the model\n        // since ngModel only watches for object identity change\n        if (ngOptions.trackBy) {\n\n          scope.$watchCollection(function() {\n            if (isArray(ngModelCtrl.$viewValue)) {\n              return ngModelCtrl.$viewValue.map(function(value) {\n                return ngOptions.getTrackByValue(value);\n              });\n            }\n          }, function() {\n            ngModelCtrl.$render();\n          });\n\n        }\n      }\n\n      if (providedEmptyOption) {\n\n        // we need to remove it before calling selectElement.empty() because otherwise IE will\n        // remove the label from the element. wtf?\n        selectCtrl.emptyOption.remove();\n\n        // compile the element since there might be bindings in it\n        $compile(selectCtrl.emptyOption)(scope);\n\n        if (selectCtrl.emptyOption[0].nodeType === NODE_TYPE_COMMENT) {\n          // This means the empty option has currently no actual DOM node, probably because\n          // it has been modified by a transclusion directive.\n          selectCtrl.hasEmptyOption = false;\n\n          // Redefine the registerOption function, which will catch\n          // options that are added by ngIf etc. (rendering of the node is async because of\n          // lazy transclusion)\n          selectCtrl.registerOption = function(optionScope, optionEl) {\n            if (optionEl.val() === '') {\n              selectCtrl.hasEmptyOption = true;\n              selectCtrl.emptyOption = optionEl;\n              selectCtrl.emptyOption.removeClass('ng-scope');\n              // This ensures the new empty option is selected if previously no option was selected\n              ngModelCtrl.$render();\n\n              optionEl.on('$destroy', function() {\n                selectCtrl.hasEmptyOption = false;\n                selectCtrl.emptyOption = undefined;\n              });\n            }\n          };\n\n        } else {\n          // remove the class, which is added automatically because we recompile the element and it\n          // becomes the compilation root\n          selectCtrl.emptyOption.removeClass('ng-scope');\n        }\n\n      }\n\n      selectElement.empty();\n\n      // We need to do this here to ensure that the options object is defined\n      // when we first hit it in writeNgOptionsValue\n      updateOptions();\n\n      // We will re-render the option elements if the option values or labels change\n      scope.$watchCollection(ngOptions.getWatchables, updateOptions);\n\n      // ------------------------------------------------------------------ //\n\n      function addOptionElement(option, parent) {\n        var optionElement = optionTemplate.cloneNode(false);\n        parent.appendChild(optionElement);\n        updateOptionElement(option, optionElement);\n      }\n\n      function getAndUpdateSelectedOption(viewValue) {\n        var option = options.getOptionFromViewValue(viewValue);\n        var element = option && option.element;\n\n        if (element && !element.selected) element.selected = true;\n\n        return option;\n      }\n\n      function updateOptionElement(option, element) {\n        option.element = element;\n        element.disabled = option.disabled;\n        // NOTE: The label must be set before the value, otherwise IE10/11/EDGE create unresponsive\n        // selects in certain circumstances when multiple selects are next to each other and display\n        // the option list in listbox style, i.e. the select is [multiple], or specifies a [size].\n        // See https://github.com/angular/angular.js/issues/11314 for more info.\n        // This is unfortunately untestable with unit / e2e tests\n        if (option.label !== element.label) {\n          element.label = option.label;\n          element.textContent = option.label;\n        }\n        element.value = option.selectValue;\n      }\n\n      function updateOptions() {\n        var previousValue = options && selectCtrl.readValue();\n\n        // We must remove all current options, but cannot simply set innerHTML = null\n        // since the providedEmptyOption might have an ngIf on it that inserts comments which we\n        // must preserve.\n        // Instead, iterate over the current option elements and remove them or their optgroup\n        // parents\n        if (options) {\n\n          for (var i = options.items.length - 1; i >= 0; i--) {\n            var option = options.items[i];\n            if (isDefined(option.group)) {\n              jqLiteRemove(option.element.parentNode);\n            } else {\n              jqLiteRemove(option.element);\n            }\n          }\n        }\n\n        options = ngOptions.getOptions();\n\n        var groupElementMap = {};\n\n        // Ensure that the empty option is always there if it was explicitly provided\n        if (providedEmptyOption) {\n          selectElement.prepend(selectCtrl.emptyOption);\n        }\n\n        options.items.forEach(function addOption(option) {\n          var groupElement;\n\n          if (isDefined(option.group)) {\n\n            // This option is to live in a group\n            // See if we have already created this group\n            groupElement = groupElementMap[option.group];\n\n            if (!groupElement) {\n\n              groupElement = optGroupTemplate.cloneNode(false);\n              listFragment.appendChild(groupElement);\n\n              // Update the label on the group element\n              // \"null\" is special cased because of Safari\n              groupElement.label = option.group === null ? 'null' : option.group;\n\n              // Store it for use later\n              groupElementMap[option.group] = groupElement;\n            }\n\n            addOptionElement(option, groupElement);\n\n          } else {\n\n            // This option is not in a group\n            addOptionElement(option, listFragment);\n          }\n        });\n\n        selectElement[0].appendChild(listFragment);\n\n        ngModelCtrl.$render();\n\n        // Check to see if the value has changed due to the update to the options\n        if (!ngModelCtrl.$isEmpty(previousValue)) {\n          var nextValue = selectCtrl.readValue();\n          var isNotPrimitive = ngOptions.trackBy || multiple;\n          if (isNotPrimitive ? !equals(previousValue, nextValue) : previousValue !== nextValue) {\n            ngModelCtrl.$setViewValue(nextValue);\n            ngModelCtrl.$render();\n          }\n        }\n\n      }\n  }\n\n  return {\n    restrict: 'A',\n    terminal: true,\n    require: ['select', 'ngModel'],\n    link: {\n      pre: function ngOptionsPreLink(scope, selectElement, attr, ctrls) {\n        // Deactivate the SelectController.register method to prevent\n        // option directives from accidentally registering themselves\n        // (and unwanted $destroy handlers etc.)\n        ctrls[0].registerOption = noop;\n      },\n      post: ngOptionsPostLink\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngPluralize\n * @restrict EA\n *\n * @description\n * `ngPluralize` is a directive that displays messages according to en-US localization rules.\n * These rules are bundled with angular.js, but can be overridden\n * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\n * by specifying the mappings between\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n * and the strings to be displayed.\n *\n * # Plural categories and explicit number rules\n * There are two\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n * in Angular's default en-US locale: \"one\" and \"other\".\n *\n * While a plural category may match many numbers (for example, in en-US locale, \"other\" can match\n * any number that is not 1), an explicit number rule can only match one number. For example, the\n * explicit number rule for \"3\" matches the number 3. There are examples of plural categories\n * and explicit number rules throughout the rest of this documentation.\n *\n * # Configuring ngPluralize\n * You configure ngPluralize by providing 2 attributes: `count` and `when`.\n * You can also provide an optional attribute, `offset`.\n *\n * The value of the `count` attribute can be either a string or an {@link guide/expression\n * Angular expression}; these are evaluated on the current scope for its bound value.\n *\n * The `when` attribute specifies the mappings between plural categories and the actual\n * string to be displayed. The value of the attribute should be a JSON object.\n *\n * The following example shows how to configure ngPluralize:\n *\n * ```html\n * <ng-pluralize count=\"personCount\"\n                 when=\"{'0': 'Nobody is viewing.',\n *                      'one': '1 person is viewing.',\n *                      'other': '{} people are viewing.'}\">\n * </ng-pluralize>\n *```\n *\n * In the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\n * specify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\n * would be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\n * other numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\n * show \"a dozen people are viewing\".\n *\n * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\n * into pluralized strings. In the previous example, Angular will replace `{}` with\n * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\n * for <span ng-non-bindable>{{numberExpression}}</span>.\n *\n * If no rule is defined for a category, then an empty string is displayed and a warning is generated.\n * Note that some locales define more categories than `one` and `other`. For example, fr-fr defines `few` and `many`.\n *\n * # Configuring ngPluralize with offset\n * The `offset` attribute allows further customization of pluralized text, which can result in\n * a better user experience. For example, instead of the message \"4 people are viewing this document\",\n * you might display \"John, Kate and 2 others are viewing this document\".\n * The offset attribute allows you to offset a number by any desired value.\n * Let's take a look at an example:\n *\n * ```html\n * <ng-pluralize count=\"personCount\" offset=2\n *               when=\"{'0': 'Nobody is viewing.',\n *                      '1': '{{person1}} is viewing.',\n *                      '2': '{{person1}} and {{person2}} are viewing.',\n *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\n *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n * </ng-pluralize>\n * ```\n *\n * Notice that we are still using two plural categories(one, other), but we added\n * three explicit number rules 0, 1 and 2.\n * When one person, perhaps John, views the document, \"John is viewing\" will be shown.\n * When three people view the document, no explicit number rule is found, so\n * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\n * In this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\n * is shown.\n *\n * Note that when you specify offsets, you must provide explicit number rules for\n * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\n * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\n * plural categories \"one\" and \"other\".\n *\n * @param {string|expression} count The variable to be bound to.\n * @param {string} when The mapping between plural category to its corresponding strings.\n * @param {number=} offset Offset to deduct from the total number.\n *\n * @example\n    <example module=\"pluralizeExample\" name=\"ng-pluralize\">\n      <file name=\"index.html\">\n        <script>\n          angular.module('pluralizeExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.person1 = 'Igor';\n              $scope.person2 = 'Misko';\n              $scope.personCount = 1;\n            }]);\n        </script>\n        <div ng-controller=\"ExampleController\">\n          <label>Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /></label><br/>\n          <label>Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /></label><br/>\n          <label>Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /></label><br/>\n\n          <!--- Example with simple pluralization rules for en locale --->\n          Without Offset:\n          <ng-pluralize count=\"personCount\"\n                        when=\"{'0': 'Nobody is viewing.',\n                               'one': '1 person is viewing.',\n                               'other': '{} people are viewing.'}\">\n          </ng-pluralize><br>\n\n          <!--- Example with offset --->\n          With Offset(2):\n          <ng-pluralize count=\"personCount\" offset=2\n                        when=\"{'0': 'Nobody is viewing.',\n                               '1': '{{person1}} is viewing.',\n                               '2': '{{person1}} and {{person2}} are viewing.',\n                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n          </ng-pluralize>\n        </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should show correct pluralized string', function() {\n          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n          var countInput = element(by.model('personCount'));\n\n          expect(withoutOffset.getText()).toEqual('1 person is viewing.');\n          expect(withOffset.getText()).toEqual('Igor is viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('0');\n\n          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');\n          expect(withOffset.getText()).toEqual('Nobody is viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('2');\n\n          expect(withoutOffset.getText()).toEqual('2 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('3');\n\n          expect(withoutOffset.getText()).toEqual('3 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('4');\n\n          expect(withoutOffset.getText()).toEqual('4 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');\n        });\n        it('should show data-bound names', function() {\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n          var personCount = element(by.model('personCount'));\n          var person1 = element(by.model('person1'));\n          var person2 = element(by.model('person2'));\n          personCount.clear();\n          personCount.sendKeys('4');\n          person1.clear();\n          person1.sendKeys('Di');\n          person2.clear();\n          person2.sendKeys('Vojta');\n          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');\n        });\n      </file>\n    </example>\n */\nvar ngPluralizeDirective = ['$locale', '$interpolate', '$log', function($locale, $interpolate, $log) {\n  var BRACE = /{}/g,\n      IS_WHEN = /^when(Minus)?(.+)$/;\n\n  return {\n    link: function(scope, element, attr) {\n      var numberExp = attr.count,\n          whenExp = attr.$attr.when && element.attr(attr.$attr.when), // we have {{}} in attrs\n          offset = attr.offset || 0,\n          whens = scope.$eval(whenExp) || {},\n          whensExpFns = {},\n          startSymbol = $interpolate.startSymbol(),\n          endSymbol = $interpolate.endSymbol(),\n          braceReplacement = startSymbol + numberExp + '-' + offset + endSymbol,\n          watchRemover = angular.noop,\n          lastCount;\n\n      forEach(attr, function(expression, attributeName) {\n        var tmpMatch = IS_WHEN.exec(attributeName);\n        if (tmpMatch) {\n          var whenKey = (tmpMatch[1] ? '-' : '') + lowercase(tmpMatch[2]);\n          whens[whenKey] = element.attr(attr.$attr[attributeName]);\n        }\n      });\n      forEach(whens, function(expression, key) {\n        whensExpFns[key] = $interpolate(expression.replace(BRACE, braceReplacement));\n\n      });\n\n      scope.$watch(numberExp, function ngPluralizeWatchAction(newVal) {\n        var count = parseFloat(newVal);\n        var countIsNaN = isNumberNaN(count);\n\n        if (!countIsNaN && !(count in whens)) {\n          // If an explicit number rule such as 1, 2, 3... is defined, just use it.\n          // Otherwise, check it against pluralization rules in $locale service.\n          count = $locale.pluralCat(count - offset);\n        }\n\n        // If both `count` and `lastCount` are NaN, we don't need to re-register a watch.\n        // In JS `NaN !== NaN`, so we have to explicitly check.\n        if ((count !== lastCount) && !(countIsNaN && isNumberNaN(lastCount))) {\n          watchRemover();\n          var whenExpFn = whensExpFns[count];\n          if (isUndefined(whenExpFn)) {\n            if (newVal != null) {\n              $log.debug('ngPluralize: no rule defined for \\'' + count + '\\' in ' + whenExp);\n            }\n            watchRemover = noop;\n            updateElementText();\n          } else {\n            watchRemover = scope.$watch(whenExpFn, updateElementText);\n          }\n          lastCount = count;\n        }\n      });\n\n      function updateElementText(newText) {\n        element.text(newText || '');\n      }\n    }\n  };\n}];\n\n/* exported ngRepeatDirective */\n\n/**\n * @ngdoc directive\n * @name ngRepeat\n * @multiElement\n *\n * @description\n * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\n * instance gets its own scope, where the given loop variable is set to the current collection item,\n * and `$index` is set to the item index or key.\n *\n * Special properties are exposed on the local scope of each template instance, including:\n *\n * | Variable  | Type            | Details                                                                     |\n * |-----------|-----------------|-----------------------------------------------------------------------------|\n * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |\n * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |\n * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |\n * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |\n * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |\n * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |\n *\n * <div class=\"alert alert-info\">\n *   Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.\n *   This may be useful when, for instance, nesting ngRepeats.\n * </div>\n *\n *\n * # Iterating over object properties\n *\n * It is possible to get `ngRepeat` to iterate over the properties of an object using the following\n * syntax:\n *\n * ```js\n * <div ng-repeat=\"(key, value) in myObj\"> ... </div>\n * ```\n *\n * However, there are a few limitations compared to array iteration:\n *\n * - The JavaScript specification does not define the order of keys\n *   returned for an object, so Angular relies on the order returned by the browser\n *   when running `for key in myObj`. Browsers generally follow the strategy of providing\n *   keys in the order in which they were defined, although there are exceptions when keys are deleted\n *   and reinstated. See the\n *   [MDN page on `delete` for more info](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete#Cross-browser_notes).\n *\n * - `ngRepeat` will silently *ignore* object keys starting with `$`, because\n *   it's a prefix used by Angular for public (`$`) and private (`$$`) properties.\n *\n * - The built-in filters {@link ng.orderBy orderBy} and {@link ng.filter filter} do not work with\n *   objects, and will throw an error if used with one.\n *\n * If you are hitting any of these limitations, the recommended workaround is to convert your object into an array\n * that is sorted into the order that you prefer before providing it to `ngRepeat`. You could\n * do this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)\n * or implement a `$watch` on the object yourself.\n *\n *\n * # Tracking and Duplicates\n *\n * `ngRepeat` uses {@link $rootScope.Scope#$watchCollection $watchCollection} to detect changes in\n * the collection. When a change happens, `ngRepeat` then makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n *\n * To minimize creation of DOM elements, `ngRepeat` uses a function\n * to \"keep track\" of all items in the collection and their corresponding DOM elements.\n * For example, if an item is added to the collection, `ngRepeat` will know that all other items\n * already have DOM elements, and will not re-render them.\n *\n * The default tracking function (which tracks items by their identity) does not allow\n * duplicate items in arrays. This is because when there are duplicates, it is not possible\n * to maintain a one-to-one mapping between collection items and DOM elements.\n *\n * If you do need to repeat duplicate items, you can substitute the default tracking behavior\n * with your own using the `track by` expression.\n *\n * For example, you may track items by the index of each item in the collection, using the\n * special scope property `$index`:\n * ```html\n *    <div ng-repeat=\"n in [42, 42, 43, 43] track by $index\">\n *      {{n}}\n *    </div>\n * ```\n *\n * You may also use arbitrary expressions in `track by`, including references to custom functions\n * on the scope:\n * ```html\n *    <div ng-repeat=\"n in [42, 42, 43, 43] track by myTrackingFunction(n)\">\n *      {{n}}\n *    </div>\n * ```\n *\n * <div class=\"alert alert-success\">\n * If you are working with objects that have a unique identifier property, you should track\n * by this identifier instead of the object instance. Should you reload your data later, `ngRepeat`\n * will not have to rebuild the DOM elements for items it has already rendered, even if the\n * JavaScript objects in the collection have been substituted for new ones. For large collections,\n * this significantly improves rendering performance. If you don't have a unique identifier,\n * `track by $index` can also provide a performance boost.\n * </div>\n *\n * ```html\n *    <div ng-repeat=\"model in collection track by model.id\">\n *      {{model.name}}\n *    </div>\n * ```\n *\n * <br />\n * <div class=\"alert alert-warning\">\n * Avoid using `track by $index` when the repeated template contains\n * {@link guide/expression#one-time-binding one-time bindings}. In such cases, the `nth` DOM\n * element will always be matched with the `nth` item of the array, so the bindings on that element\n * will not be updated even when the corresponding item changes, essentially causing the view to get\n * out-of-sync with the underlying data.\n * </div>\n *\n * When no `track by` expression is provided, it is equivalent to tracking by the built-in\n * `$id` function, which tracks items by their identity:\n * ```html\n *    <div ng-repeat=\"obj in collection track by $id(obj)\">\n *      {{obj.prop}}\n *    </div>\n * ```\n *\n * <br />\n * <div class=\"alert alert-warning\">\n * **Note:** `track by` must always be the last expression:\n * </div>\n * ```\n *    <div ng-repeat=\"model in collection | orderBy: 'id' as filtered_result track by model.id\">\n *      {{model.name}}\n *    </div>\n * ```\n *\n *\n * # Special repeat start and end points\n * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending\n * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.\n * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)\n * up to and including the ending HTML tag where **ng-repeat-end** is placed.\n *\n * The example below makes use of this feature:\n * ```html\n *   <header ng-repeat-start=\"item in items\">\n *     Header {{ item }}\n *   </header>\n *   <div class=\"body\">\n *     Body {{ item }}\n *   </div>\n *   <footer ng-repeat-end>\n *     Footer {{ item }}\n *   </footer>\n * ```\n *\n * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:\n * ```html\n *   <header>\n *     Header A\n *   </header>\n *   <div class=\"body\">\n *     Body A\n *   </div>\n *   <footer>\n *     Footer A\n *   </footer>\n *   <header>\n *     Header B\n *   </header>\n *   <div class=\"body\">\n *     Body B\n *   </div>\n *   <footer>\n *     Footer B\n *   </footer>\n * ```\n *\n * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such\n * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).\n *\n * @animations\n * | Animation                        | Occurs                              |\n * |----------------------------------|-------------------------------------|\n * | {@link ng.$animate#enter enter} | when a new item is added to the list or when an item is revealed after a filter |\n * | {@link ng.$animate#leave leave} | when an item is removed from the list or when an item is filtered out |\n * | {@link ng.$animate#move move } | when an adjacent item is filtered out causing a reorder or when the item contents are reordered |\n *\n * See the example below for defining CSS animations with ngRepeat.\n *\n * @element ANY\n * @scope\n * @priority 1000\n * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These\n *   formats are currently supported:\n *\n *   * `variable in expression` – where variable is the user defined loop variable and `expression`\n *     is a scope expression giving the collection to enumerate.\n *\n *     For example: `album in artist.albums`.\n *\n *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n *     and `expression` is the scope expression giving the collection to enumerate.\n *\n *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\n *\n *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking expression\n *     which can be used to associate the objects in the collection with the DOM elements. If no tracking expression\n *     is specified, ng-repeat associates elements by identity. It is an error to have\n *     more than one tracking expression value resolve to the same key. (This would mean that two distinct objects are\n *     mapped to the same DOM element, which is not possible.)\n *\n *     Note that the tracking expression must come last, after any filters, and the alias expression.\n *\n *     For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements\n *     will be associated by item identity in the array.\n *\n *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique\n *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements\n *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM\n *     element in the same way in the DOM.\n *\n *     For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this\n *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`\n *     property is same.\n *\n *     For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter\n *     to items in conjunction with a tracking expression.\n *\n *   * `variable in expression as alias_expression` – You can also provide an optional alias expression which will then store the\n *     intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message\n *     when a filter is active on the repeater, but the filtered result set is empty.\n *\n *     For example: `item in items | filter:x as results` will store the fragment of the repeated items as `results`, but only after\n *     the items have been processed through the filter.\n *\n *     Please note that `as [variable name] is not an operator but rather a part of ngRepeat micro-syntax so it can be used only at the end\n *     (and not as operator, inside an expression).\n *\n *     For example: `item in items | filter : x | orderBy : order | limitTo : limit as results` .\n *\n * @example\n * This example uses `ngRepeat` to display a list of people. A filter is used to restrict the displayed\n * results by name or by age. New (entering) and removed (leaving) items are animated.\n  <example module=\"ngRepeat\" name=\"ngRepeat\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-repeat\">\n    <file name=\"index.html\">\n      <div ng-controller=\"repeatController\">\n        I have {{friends.length}} friends. They are:\n        <input type=\"search\" ng-model=\"q\" placeholder=\"filter friends...\" aria-label=\"filter friends\" />\n        <ul class=\"example-animate-container\">\n          <li class=\"animate-repeat\" ng-repeat=\"friend in friends | filter:q as results\">\n            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n          </li>\n          <li class=\"animate-repeat\" ng-if=\"results.length === 0\">\n            <strong>No results found...</strong>\n          </li>\n        </ul>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('ngRepeat', ['ngAnimate']).controller('repeatController', function($scope) {\n        $scope.friends = [\n          {name:'John', age:25, gender:'boy'},\n          {name:'Jessie', age:30, gender:'girl'},\n          {name:'Johanna', age:28, gender:'girl'},\n          {name:'Joy', age:15, gender:'girl'},\n          {name:'Mary', age:28, gender:'girl'},\n          {name:'Peter', age:95, gender:'boy'},\n          {name:'Sebastian', age:50, gender:'boy'},\n          {name:'Erika', age:27, gender:'girl'},\n          {name:'Patrick', age:40, gender:'boy'},\n          {name:'Samantha', age:60, gender:'girl'}\n        ];\n      });\n    </file>\n    <file name=\"animations.css\">\n      .example-animate-container {\n        background:white;\n        border:1px solid black;\n        list-style:none;\n        margin:0;\n        padding:0 10px;\n      }\n\n      .animate-repeat {\n        line-height:30px;\n        list-style:none;\n        box-sizing:border-box;\n      }\n\n      .animate-repeat.ng-move,\n      .animate-repeat.ng-enter,\n      .animate-repeat.ng-leave {\n        transition:all linear 0.5s;\n      }\n\n      .animate-repeat.ng-leave.ng-leave-active,\n      .animate-repeat.ng-move,\n      .animate-repeat.ng-enter {\n        opacity:0;\n        max-height:0;\n      }\n\n      .animate-repeat.ng-leave,\n      .animate-repeat.ng-move.ng-move-active,\n      .animate-repeat.ng-enter.ng-enter-active {\n        opacity:1;\n        max-height:30px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var friends = element.all(by.repeater('friend in friends'));\n\n      it('should render initial data set', function() {\n        expect(friends.count()).toBe(10);\n        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');\n        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');\n        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');\n        expect(element(by.binding('friends.length')).getText())\n            .toMatch(\"I have 10 friends. They are:\");\n      });\n\n       it('should update repeater when filter predicate changes', function() {\n         expect(friends.count()).toBe(10);\n\n         element(by.model('q')).sendKeys('ma');\n\n         expect(friends.count()).toBe(2);\n         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');\n         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');\n       });\n      </file>\n    </example>\n */\nvar ngRepeatDirective = ['$parse', '$animate', '$compile', function($parse, $animate, $compile) {\n  var NG_REMOVED = '$$NG_REMOVED';\n  var ngRepeatMinErr = minErr('ngRepeat');\n\n  var updateScope = function(scope, index, valueIdentifier, value, keyIdentifier, key, arrayLength) {\n    // TODO(perf): generate setters to shave off ~40ms or 1-1.5%\n    scope[valueIdentifier] = value;\n    if (keyIdentifier) scope[keyIdentifier] = key;\n    scope.$index = index;\n    scope.$first = (index === 0);\n    scope.$last = (index === (arrayLength - 1));\n    scope.$middle = !(scope.$first || scope.$last);\n    // eslint-disable-next-line no-bitwise\n    scope.$odd = !(scope.$even = (index & 1) === 0);\n  };\n\n  var getBlockStart = function(block) {\n    return block.clone[0];\n  };\n\n  var getBlockEnd = function(block) {\n    return block.clone[block.clone.length - 1];\n  };\n\n\n  return {\n    restrict: 'A',\n    multiElement: true,\n    transclude: 'element',\n    priority: 1000,\n    terminal: true,\n    $$tlb: true,\n    compile: function ngRepeatCompile($element, $attr) {\n      var expression = $attr.ngRepeat;\n      var ngRepeatEndComment = $compile.$$createComment('end ngRepeat', expression);\n\n      var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n      if (!match) {\n        throw ngRepeatMinErr('iexp', 'Expected expression in form of \\'_item_ in _collection_[ track by _id_]\\' but got \\'{0}\\'.',\n            expression);\n      }\n\n      var lhs = match[1];\n      var rhs = match[2];\n      var aliasAs = match[3];\n      var trackByExp = match[4];\n\n      match = lhs.match(/^(?:(\\s*[$\\w]+)|\\(\\s*([$\\w]+)\\s*,\\s*([$\\w]+)\\s*\\))$/);\n\n      if (!match) {\n        throw ngRepeatMinErr('iidexp', '\\'_item_\\' in \\'_item_ in _collection_\\' should be an identifier or \\'(_key_, _value_)\\' expression, but got \\'{0}\\'.',\n            lhs);\n      }\n      var valueIdentifier = match[3] || match[1];\n      var keyIdentifier = match[2];\n\n      if (aliasAs && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs) ||\n          /^(null|undefined|this|\\$index|\\$first|\\$middle|\\$last|\\$even|\\$odd|\\$parent|\\$root|\\$id)$/.test(aliasAs))) {\n        throw ngRepeatMinErr('badident', 'alias \\'{0}\\' is invalid --- must be a valid JS identifier which is not a reserved name.',\n          aliasAs);\n      }\n\n      var trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn;\n      var hashFnLocals = {$id: hashKey};\n\n      if (trackByExp) {\n        trackByExpGetter = $parse(trackByExp);\n      } else {\n        trackByIdArrayFn = function(key, value) {\n          return hashKey(value);\n        };\n        trackByIdObjFn = function(key) {\n          return key;\n        };\n      }\n\n      return function ngRepeatLink($scope, $element, $attr, ctrl, $transclude) {\n\n        if (trackByExpGetter) {\n          trackByIdExpFn = function(key, value, index) {\n            // assign key, value, and $index to the locals so that they can be used in hash functions\n            if (keyIdentifier) hashFnLocals[keyIdentifier] = key;\n            hashFnLocals[valueIdentifier] = value;\n            hashFnLocals.$index = index;\n            return trackByExpGetter($scope, hashFnLocals);\n          };\n        }\n\n        // Store a list of elements from previous run. This is a hash where key is the item from the\n        // iterator, and the value is objects with following properties.\n        //   - scope: bound scope\n        //   - element: previous element.\n        //   - index: position\n        //\n        // We are using no-proto object so that we don't need to guard against inherited props via\n        // hasOwnProperty.\n        var lastBlockMap = createMap();\n\n        //watch props\n        $scope.$watchCollection(rhs, function ngRepeatAction(collection) {\n          var index, length,\n              previousNode = $element[0],     // node that cloned nodes should be inserted after\n                                              // initialized to the comment node anchor\n              nextNode,\n              // Same as lastBlockMap but it has the current state. It will become the\n              // lastBlockMap on the next iteration.\n              nextBlockMap = createMap(),\n              collectionLength,\n              key, value, // key/value of iteration\n              trackById,\n              trackByIdFn,\n              collectionKeys,\n              block,       // last object information {scope, element, id}\n              nextBlockOrder,\n              elementsToRemove;\n\n          if (aliasAs) {\n            $scope[aliasAs] = collection;\n          }\n\n          if (isArrayLike(collection)) {\n            collectionKeys = collection;\n            trackByIdFn = trackByIdExpFn || trackByIdArrayFn;\n          } else {\n            trackByIdFn = trackByIdExpFn || trackByIdObjFn;\n            // if object, extract keys, in enumeration order, unsorted\n            collectionKeys = [];\n            for (var itemKey in collection) {\n              if (hasOwnProperty.call(collection, itemKey) && itemKey.charAt(0) !== '$') {\n                collectionKeys.push(itemKey);\n              }\n            }\n          }\n\n          collectionLength = collectionKeys.length;\n          nextBlockOrder = new Array(collectionLength);\n\n          // locate existing items\n          for (index = 0; index < collectionLength; index++) {\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\n            value = collection[key];\n            trackById = trackByIdFn(key, value, index);\n            if (lastBlockMap[trackById]) {\n              // found previously seen block\n              block = lastBlockMap[trackById];\n              delete lastBlockMap[trackById];\n              nextBlockMap[trackById] = block;\n              nextBlockOrder[index] = block;\n            } else if (nextBlockMap[trackById]) {\n              // if collision detected. restore lastBlockMap and throw an error\n              forEach(nextBlockOrder, function(block) {\n                if (block && block.scope) lastBlockMap[block.id] = block;\n              });\n              throw ngRepeatMinErr('dupes',\n                  'Duplicates in a repeater are not allowed. Use \\'track by\\' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}',\n                  expression, trackById, value);\n            } else {\n              // new never before seen block\n              nextBlockOrder[index] = {id: trackById, scope: undefined, clone: undefined};\n              nextBlockMap[trackById] = true;\n            }\n          }\n\n          // remove leftover items\n          for (var blockKey in lastBlockMap) {\n            block = lastBlockMap[blockKey];\n            elementsToRemove = getBlockNodes(block.clone);\n            $animate.leave(elementsToRemove);\n            if (elementsToRemove[0].parentNode) {\n              // if the element was not removed yet because of pending animation, mark it as deleted\n              // so that we can ignore it later\n              for (index = 0, length = elementsToRemove.length; index < length; index++) {\n                elementsToRemove[index][NG_REMOVED] = true;\n              }\n            }\n            block.scope.$destroy();\n          }\n\n          // we are not using forEach for perf reasons (trying to avoid #call)\n          for (index = 0; index < collectionLength; index++) {\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\n            value = collection[key];\n            block = nextBlockOrder[index];\n\n            if (block.scope) {\n              // if we have already seen this object, then we need to reuse the\n              // associated scope/element\n\n              nextNode = previousNode;\n\n              // skip nodes that are already pending removal via leave animation\n              do {\n                nextNode = nextNode.nextSibling;\n              } while (nextNode && nextNode[NG_REMOVED]);\n\n              if (getBlockStart(block) !== nextNode) {\n                // existing item which got moved\n                $animate.move(getBlockNodes(block.clone), null, previousNode);\n              }\n              previousNode = getBlockEnd(block);\n              updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);\n            } else {\n              // new item which we don't know about\n              $transclude(function ngRepeatTransclude(clone, scope) {\n                block.scope = scope;\n                // http://jsperf.com/clone-vs-createcomment\n                var endNode = ngRepeatEndComment.cloneNode(false);\n                clone[clone.length++] = endNode;\n\n                $animate.enter(clone, null, previousNode);\n                previousNode = endNode;\n                // Note: We only need the first/last node of the cloned nodes.\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n                // by a directive with templateUrl when its template arrives.\n                block.clone = clone;\n                nextBlockMap[block.id] = block;\n                updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);\n              });\n            }\n          }\n          lastBlockMap = nextBlockMap;\n        });\n      };\n    }\n  };\n}];\n\nvar NG_HIDE_CLASS = 'ng-hide';\nvar NG_HIDE_IN_PROGRESS_CLASS = 'ng-hide-animate';\n/**\n * @ngdoc directive\n * @name ngShow\n * @multiElement\n *\n * @description\n * The `ngShow` directive shows or hides the given HTML element based on the expression provided to\n * the `ngShow` attribute.\n *\n * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.\n * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an\n * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see\n * {@link ng.directive:ngCsp ngCsp}).\n *\n * ```html\n * <!-- when $scope.myValue is truthy (element is visible) -->\n * <div ng-show=\"myValue\"></div>\n *\n * <!-- when $scope.myValue is falsy (element is hidden) -->\n * <div ng-show=\"myValue\" class=\"ng-hide\"></div>\n * ```\n *\n * When the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added\n * to the class attribute on the element causing it to become hidden. When truthy, the `.ng-hide`\n * CSS class is removed from the element causing the element not to appear hidden.\n *\n * ## Why is `!important` used?\n *\n * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the\n * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as\n * simple as changing the display style on a HTML list item would make hidden elements appear\n * visible. This also becomes a bigger issue when dealing with CSS frameworks.\n *\n * By using `!important`, the show and hide behavior will work as expected despite any clash between\n * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a\n * developer chooses to override the styling to change how to hide an element then it is just a\n * matter of using `!important` in their own CSS code.\n *\n * ### Overriding `.ng-hide`\n *\n * By default, the `.ng-hide` class will style the element with `display: none !important`. If you\n * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for\n * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually\n * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.\n *\n * ```css\n * .ng-hide:not(.ng-hide-animate) {\n *   /&#42; These are just alternative ways of hiding an element &#42;/\n *   display: block!important;\n *   position: absolute;\n *   top: -9999px;\n *   left: -9999px;\n * }\n * ```\n *\n * By default you don't need to override anything in CSS and the animations will work around the\n * display style.\n *\n * ## A note about animations with `ngShow`\n *\n * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the\n * directive expression is true and false. This system works like the animation system present with\n * `ngClass` except that you must also include the `!important` flag to override the display\n * property so that the elements are not actually hidden during the animation.\n *\n * ```css\n * /&#42; A working example can be found at the bottom of this page. &#42;/\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n *   transition: all 0.5s linear;\n * }\n *\n * .my-element.ng-hide-add { ... }\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\n * .my-element.ng-hide-remove { ... }\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n * ```\n *\n * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property\n * to block during animation states - ngAnimate will automatically handle the style toggling for you.\n *\n * @animations\n * | Animation                                           | Occurs                                                                                                        |\n * |-----------------------------------------------------|---------------------------------------------------------------------------------------------------------------|\n * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden. |\n * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngShow` expression evaluates to a truthy value and just before contents are set to visible.        |\n *\n * @element ANY\n * @param {expression} ngShow If the {@link guide/expression expression} is truthy/falsy then the\n *                            element is shown/hidden respectively.\n *\n * @example\n * A simple example, animating the element's opacity:\n *\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-show-simple\">\n    <file name=\"index.html\">\n      Show: <input type=\"checkbox\" ng-model=\"checked\" aria-label=\"Toggle ngShow\"><br />\n      <div class=\"check-element animate-show-hide\" ng-show=\"checked\">\n        I show up when your checkbox is checked.\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .animate-show-hide.ng-hide {\n        opacity: 0;\n      }\n\n      .animate-show-hide.ng-hide-add,\n      .animate-show-hide.ng-hide-remove {\n        transition: all linear 0.5s;\n      }\n\n      .check-element {\n        border: 1px solid black;\n        opacity: 1;\n        padding: 10px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ngShow', function() {\n        var checkbox = element(by.model('checked'));\n        var checkElem = element(by.css('.check-element'));\n\n        expect(checkElem.isDisplayed()).toBe(false);\n        checkbox.click();\n        expect(checkElem.isDisplayed()).toBe(true);\n      });\n    </file>\n  </example>\n *\n * <hr />\n * @example\n * A more complex example, featuring different show/hide animations:\n *\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-show-complex\">\n    <file name=\"index.html\">\n      Show: <input type=\"checkbox\" ng-model=\"checked\" aria-label=\"Toggle ngShow\"><br />\n      <div class=\"check-element funky-show-hide\" ng-show=\"checked\">\n        I show up when your checkbox is checked.\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      body {\n        overflow: hidden;\n        perspective: 1000px;\n      }\n\n      .funky-show-hide.ng-hide-add {\n        transform: rotateZ(0);\n        transform-origin: right;\n        transition: all 0.5s ease-in-out;\n      }\n\n      .funky-show-hide.ng-hide-add.ng-hide-add-active {\n        transform: rotateZ(-135deg);\n      }\n\n      .funky-show-hide.ng-hide-remove {\n        transform: rotateY(90deg);\n        transform-origin: left;\n        transition: all 0.5s ease;\n      }\n\n      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {\n        transform: rotateY(0);\n      }\n\n      .check-element {\n        border: 1px solid black;\n        opacity: 1;\n        padding: 10px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ngShow', function() {\n        var checkbox = element(by.model('checked'));\n        var checkElem = element(by.css('.check-element'));\n\n        expect(checkElem.isDisplayed()).toBe(false);\n        checkbox.click();\n        expect(checkElem.isDisplayed()).toBe(true);\n      });\n    </file>\n  </example>\n */\nvar ngShowDirective = ['$animate', function($animate) {\n  return {\n    restrict: 'A',\n    multiElement: true,\n    link: function(scope, element, attr) {\n      scope.$watch(attr.ngShow, function ngShowWatchAction(value) {\n        // we're adding a temporary, animation-specific class for ng-hide since this way\n        // we can control when the element is actually displayed on screen without having\n        // to have a global/greedy CSS selector that breaks when other animations are run.\n        // Read: https://github.com/angular/angular.js/issues/9103#issuecomment-58335845\n        $animate[value ? 'removeClass' : 'addClass'](element, NG_HIDE_CLASS, {\n          tempClasses: NG_HIDE_IN_PROGRESS_CLASS\n        });\n      });\n    }\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngHide\n * @multiElement\n *\n * @description\n * The `ngHide` directive shows or hides the given HTML element based on the expression provided to\n * the `ngHide` attribute.\n *\n * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.\n * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an\n * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see\n * {@link ng.directive:ngCsp ngCsp}).\n *\n * ```html\n * <!-- when $scope.myValue is truthy (element is hidden) -->\n * <div ng-hide=\"myValue\" class=\"ng-hide\"></div>\n *\n * <!-- when $scope.myValue is falsy (element is visible) -->\n * <div ng-hide=\"myValue\"></div>\n * ```\n *\n * When the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added\n * to the class attribute on the element causing it to become hidden. When falsy, the `.ng-hide`\n * CSS class is removed from the element causing the element not to appear hidden.\n *\n * ## Why is `!important` used?\n *\n * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the\n * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as\n * simple as changing the display style on a HTML list item would make hidden elements appear\n * visible. This also becomes a bigger issue when dealing with CSS frameworks.\n *\n * By using `!important`, the show and hide behavior will work as expected despite any clash between\n * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a\n * developer chooses to override the styling to change how to hide an element then it is just a\n * matter of using `!important` in their own CSS code.\n *\n * ### Overriding `.ng-hide`\n *\n * By default, the `.ng-hide` class will style the element with `display: none !important`. If you\n * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for\n * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually\n * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.\n *\n * ```css\n * .ng-hide:not(.ng-hide-animate) {\n *   /&#42; These are just alternative ways of hiding an element &#42;/\n *   display: block!important;\n *   position: absolute;\n *   top: -9999px;\n *   left: -9999px;\n * }\n * ```\n *\n * By default you don't need to override in CSS anything and the animations will work around the\n * display style.\n *\n * ## A note about animations with `ngHide`\n *\n * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the\n * directive expression is true and false. This system works like the animation system present with\n * `ngClass` except that you must also include the `!important` flag to override the display\n * property so that the elements are not actually hidden during the animation.\n *\n * ```css\n * /&#42; A working example can be found at the bottom of this page. &#42;/\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n *   transition: all 0.5s linear;\n * }\n *\n * .my-element.ng-hide-add { ... }\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\n * .my-element.ng-hide-remove { ... }\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n * ```\n *\n * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property\n * to block during animation states - ngAnimate will automatically handle the style toggling for you.\n *\n * @animations\n * | Animation                                           | Occurs                                                                                                     |\n * |-----------------------------------------------------|------------------------------------------------------------------------------------------------------------|\n * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden.  |\n * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngHide` expression evaluates to a non truthy value and just before contents are set to visible. |\n *\n *\n * @element ANY\n * @param {expression} ngHide If the {@link guide/expression expression} is truthy/falsy then the\n *                            element is hidden/shown respectively.\n *\n * @example\n * A simple example, animating the element's opacity:\n *\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-hide-simple\">\n    <file name=\"index.html\">\n      Hide: <input type=\"checkbox\" ng-model=\"checked\" aria-label=\"Toggle ngHide\"><br />\n      <div class=\"check-element animate-show-hide\" ng-hide=\"checked\">\n        I hide when your checkbox is checked.\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .animate-show-hide.ng-hide {\n        opacity: 0;\n      }\n\n      .animate-show-hide.ng-hide-add,\n      .animate-show-hide.ng-hide-remove {\n        transition: all linear 0.5s;\n      }\n\n      .check-element {\n        border: 1px solid black;\n        opacity: 1;\n        padding: 10px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ngHide', function() {\n        var checkbox = element(by.model('checked'));\n        var checkElem = element(by.css('.check-element'));\n\n        expect(checkElem.isDisplayed()).toBe(true);\n        checkbox.click();\n        expect(checkElem.isDisplayed()).toBe(false);\n      });\n    </file>\n  </example>\n *\n * <hr />\n * @example\n * A more complex example, featuring different show/hide animations:\n *\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-hide-complex\">\n    <file name=\"index.html\">\n      Hide: <input type=\"checkbox\" ng-model=\"checked\" aria-label=\"Toggle ngHide\"><br />\n      <div class=\"check-element funky-show-hide\" ng-hide=\"checked\">\n        I hide when your checkbox is checked.\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      body {\n        overflow: hidden;\n        perspective: 1000px;\n      }\n\n      .funky-show-hide.ng-hide-add {\n        transform: rotateZ(0);\n        transform-origin: right;\n        transition: all 0.5s ease-in-out;\n      }\n\n      .funky-show-hide.ng-hide-add.ng-hide-add-active {\n        transform: rotateZ(-135deg);\n      }\n\n      .funky-show-hide.ng-hide-remove {\n        transform: rotateY(90deg);\n        transform-origin: left;\n        transition: all 0.5s ease;\n      }\n\n      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {\n        transform: rotateY(0);\n      }\n\n      .check-element {\n        border: 1px solid black;\n        opacity: 1;\n        padding: 10px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ngHide', function() {\n        var checkbox = element(by.model('checked'));\n        var checkElem = element(by.css('.check-element'));\n\n        expect(checkElem.isDisplayed()).toBe(true);\n        checkbox.click();\n        expect(checkElem.isDisplayed()).toBe(false);\n      });\n    </file>\n  </example>\n */\nvar ngHideDirective = ['$animate', function($animate) {\n  return {\n    restrict: 'A',\n    multiElement: true,\n    link: function(scope, element, attr) {\n      scope.$watch(attr.ngHide, function ngHideWatchAction(value) {\n        // The comment inside of the ngShowDirective explains why we add and\n        // remove a temporary class for the show/hide animation\n        $animate[value ? 'addClass' : 'removeClass'](element,NG_HIDE_CLASS, {\n          tempClasses: NG_HIDE_IN_PROGRESS_CLASS\n        });\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngStyle\n * @restrict AC\n *\n * @description\n * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\n *\n * @knownIssue\n * You should not use {@link guide/interpolation interpolation} in the value of the `style`\n * attribute, when using the `ngStyle` directive on the same element.\n * See {@link guide/interpolation#known-issues here} for more info.\n *\n * @element ANY\n * @param {expression} ngStyle\n *\n * {@link guide/expression Expression} which evals to an\n * object whose keys are CSS style names and values are corresponding values for those CSS\n * keys.\n *\n * Since some CSS style names are not valid keys for an object, they must be quoted.\n * See the 'background-color' style in the example below.\n *\n * @example\n   <example name=\"ng-style\">\n     <file name=\"index.html\">\n        <input type=\"button\" value=\"set color\" ng-click=\"myStyle={color:'red'}\">\n        <input type=\"button\" value=\"set background\" ng-click=\"myStyle={'background-color':'blue'}\">\n        <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n        <br/>\n        <span ng-style=\"myStyle\">Sample Text</span>\n        <pre>myStyle={{myStyle}}</pre>\n     </file>\n     <file name=\"style.css\">\n       span {\n         color: black;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var colorSpan = element(by.css('span'));\n\n       it('should check ng-style', function() {\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n         element(by.css('input[value=\\'set color\\']')).click();\n         expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');\n         element(by.css('input[value=clear]')).click();\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n       });\n     </file>\n   </example>\n */\nvar ngStyleDirective = ngDirective(function(scope, element, attr) {\n  scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\n    if (oldStyles && (newStyles !== oldStyles)) {\n      forEach(oldStyles, function(val, style) { element.css(style, '');});\n    }\n    if (newStyles) element.css(newStyles);\n  }, true);\n});\n\n/**\n * @ngdoc directive\n * @name ngSwitch\n * @restrict EA\n *\n * @description\n * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\n * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\n * as specified in the template.\n *\n * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\n * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\n * matches the value obtained from the evaluated expression. In other words, you define a container element\n * (where you place the directive), place an expression on the **`on=\"...\"` attribute**\n * (or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\n * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\n * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default\n * attribute is displayed.\n *\n * <div class=\"alert alert-info\">\n * Be aware that the attribute values to match against cannot be expressions. They are interpreted\n * as literal string values to match against.\n * For example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\n * value of the expression `$scope.someVal`.\n * </div>\n\n * @animations\n * | Animation                        | Occurs                              |\n * |----------------------------------|-------------------------------------|\n * | {@link ng.$animate#enter enter}  | after the ngSwitch contents change and the matched child element is placed inside the container |\n * | {@link ng.$animate#leave leave}  | after the ngSwitch contents change and just before the former contents are removed from the DOM |\n *\n * @usage\n *\n * ```\n * <ANY ng-switch=\"expression\">\n *   <ANY ng-switch-when=\"matchValue1\">...</ANY>\n *   <ANY ng-switch-when=\"matchValue2\">...</ANY>\n *   <ANY ng-switch-default>...</ANY>\n * </ANY>\n * ```\n *\n *\n * @scope\n * @priority 1200\n * @param {*} ngSwitch|on expression to match against <code>ng-switch-when</code>.\n * On child elements add:\n *\n * * `ngSwitchWhen`: the case statement to match against. If match then this\n *   case will be displayed. If the same match appears multiple times, all the\n *   elements will be displayed. It is possible to associate multiple values to\n *   the same `ngSwitchWhen` by defining the optional attribute\n *   `ngSwitchWhenSeparator`. The separator will be used to split the value of\n *   the `ngSwitchWhen` attribute into multiple tokens, and the element will show\n *   if any of the `ngSwitch` evaluates to any of these tokens.\n * * `ngSwitchDefault`: the default case when no other case match. If there\n *   are multiple default cases, all of them will be displayed when no other\n *   case match.\n *\n *\n * @example\n  <example module=\"switchExample\" deps=\"angular-animate.js\" animations=\"true\" name=\"ng-switch\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <select ng-model=\"selection\" ng-options=\"item for item in items\">\n        </select>\n        <code>selection={{selection}}</code>\n        <hr/>\n        <div class=\"animate-switch-container\"\n          ng-switch on=\"selection\">\n            <div class=\"animate-switch\" ng-switch-when=\"settings|options\" ng-switch-when-separator=\"|\">Settings Div</div>\n            <div class=\"animate-switch\" ng-switch-when=\"home\">Home Span</div>\n            <div class=\"animate-switch\" ng-switch-default>default</div>\n        </div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('switchExample', ['ngAnimate'])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.items = ['settings', 'home', 'options', 'other'];\n          $scope.selection = $scope.items[0];\n        }]);\n    </file>\n    <file name=\"animations.css\">\n      .animate-switch-container {\n        position:relative;\n        background:white;\n        border:1px solid black;\n        height:40px;\n        overflow:hidden;\n      }\n\n      .animate-switch {\n        padding:10px;\n      }\n\n      .animate-switch.ng-animate {\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n      }\n\n      .animate-switch.ng-leave.ng-leave-active,\n      .animate-switch.ng-enter {\n        top:-50px;\n      }\n      .animate-switch.ng-leave,\n      .animate-switch.ng-enter.ng-enter-active {\n        top:0;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var switchElem = element(by.css('[ng-switch]'));\n      var select = element(by.model('selection'));\n\n      it('should start in settings', function() {\n        expect(switchElem.getText()).toMatch(/Settings Div/);\n      });\n      it('should change to home', function() {\n        select.all(by.css('option')).get(1).click();\n        expect(switchElem.getText()).toMatch(/Home Span/);\n      });\n      it('should change to settings via \"options\"', function() {\n        select.all(by.css('option')).get(2).click();\n        expect(switchElem.getText()).toMatch(/Settings Div/);\n      });\n      it('should select default', function() {\n        select.all(by.css('option')).get(3).click();\n        expect(switchElem.getText()).toMatch(/default/);\n      });\n    </file>\n  </example>\n */\nvar ngSwitchDirective = ['$animate', '$compile', function($animate, $compile) {\n  return {\n    require: 'ngSwitch',\n\n    // asks for $scope to fool the BC controller module\n    controller: ['$scope', function NgSwitchController() {\n     this.cases = {};\n    }],\n    link: function(scope, element, attr, ngSwitchController) {\n      var watchExpr = attr.ngSwitch || attr.on,\n          selectedTranscludes = [],\n          selectedElements = [],\n          previousLeaveAnimations = [],\n          selectedScopes = [];\n\n      var spliceFactory = function(array, index) {\n          return function(response) {\n            if (response !== false) array.splice(index, 1);\n          };\n      };\n\n      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\n        var i, ii;\n\n        // Start with the last, in case the array is modified during the loop\n        while (previousLeaveAnimations.length) {\n          $animate.cancel(previousLeaveAnimations.pop());\n        }\n\n        for (i = 0, ii = selectedScopes.length; i < ii; ++i) {\n          var selected = getBlockNodes(selectedElements[i].clone);\n          selectedScopes[i].$destroy();\n          var runner = previousLeaveAnimations[i] = $animate.leave(selected);\n          runner.done(spliceFactory(previousLeaveAnimations, i));\n        }\n\n        selectedElements.length = 0;\n        selectedScopes.length = 0;\n\n        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {\n          forEach(selectedTranscludes, function(selectedTransclude) {\n            selectedTransclude.transclude(function(caseElement, selectedScope) {\n              selectedScopes.push(selectedScope);\n              var anchor = selectedTransclude.element;\n              caseElement[caseElement.length++] = $compile.$$createComment('end ngSwitchWhen');\n              var block = { clone: caseElement };\n\n              selectedElements.push(block);\n              $animate.enter(caseElement, anchor.parent(), anchor);\n            });\n          });\n        }\n      });\n    }\n  };\n}];\n\nvar ngSwitchWhenDirective = ngDirective({\n  transclude: 'element',\n  priority: 1200,\n  require: '^ngSwitch',\n  multiElement: true,\n  link: function(scope, element, attrs, ctrl, $transclude) {\n\n    var cases = attrs.ngSwitchWhen.split(attrs.ngSwitchWhenSeparator).sort().filter(\n      // Filter duplicate cases\n      function(element, index, array) { return array[index - 1] !== element; }\n    );\n\n    forEach(cases, function(whenCase) {\n      ctrl.cases['!' + whenCase] = (ctrl.cases['!' + whenCase] || []);\n      ctrl.cases['!' + whenCase].push({ transclude: $transclude, element: element });\n    });\n  }\n});\n\nvar ngSwitchDefaultDirective = ngDirective({\n  transclude: 'element',\n  priority: 1200,\n  require: '^ngSwitch',\n  multiElement: true,\n  link: function(scope, element, attr, ctrl, $transclude) {\n    ctrl.cases['?'] = (ctrl.cases['?'] || []);\n    ctrl.cases['?'].push({ transclude: $transclude, element: element });\n   }\n});\n\n/**\n * @ngdoc directive\n * @name ngTransclude\n * @restrict EAC\n *\n * @description\n * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.\n *\n * You can specify that you want to insert a named transclusion slot, instead of the default slot, by providing the slot name\n * as the value of the `ng-transclude` or `ng-transclude-slot` attribute.\n *\n * If the transcluded content is not empty (i.e. contains one or more DOM nodes, including whitespace text nodes), any existing\n * content of this element will be removed before the transcluded content is inserted.\n * If the transcluded content is empty (or only whitespace), the existing content is left intact. This lets you provide fallback\n * content in the case that no transcluded content is provided.\n *\n * @element ANY\n *\n * @param {string} ngTransclude|ngTranscludeSlot the name of the slot to insert at this point. If this is not provided, is empty\n *                                               or its value is the same as the name of the attribute then the default slot is used.\n *\n * @example\n * ### Basic transclusion\n * This example demonstrates basic transclusion of content into a component directive.\n * <example name=\"simpleTranscludeExample\" module=\"transcludeExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('transcludeExample', [])\n *        .directive('pane', function(){\n *           return {\n *             restrict: 'E',\n *             transclude: true,\n *             scope: { title:'@' },\n *             template: '<div style=\"border: 1px solid black;\">' +\n *                         '<div style=\"background-color: gray\">{{title}}</div>' +\n *                         '<ng-transclude></ng-transclude>' +\n *                       '</div>'\n *           };\n *       })\n *       .controller('ExampleController', ['$scope', function($scope) {\n *         $scope.title = 'Lorem Ipsum';\n *         $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n *       }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <input ng-model=\"title\" aria-label=\"title\"> <br/>\n *       <textarea ng-model=\"text\" aria-label=\"text\"></textarea> <br/>\n *       <pane title=\"{{title}}\"><span>{{text}}</span></pane>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *      it('should have transcluded', function() {\n *        var titleElement = element(by.model('title'));\n *        titleElement.clear();\n *        titleElement.sendKeys('TITLE');\n *        var textElement = element(by.model('text'));\n *        textElement.clear();\n *        textElement.sendKeys('TEXT');\n *        expect(element(by.binding('title')).getText()).toEqual('TITLE');\n *        expect(element(by.binding('text')).getText()).toEqual('TEXT');\n *      });\n *   </file>\n * </example>\n *\n * @example\n * ### Transclude fallback content\n * This example shows how to use `NgTransclude` with fallback content, that\n * is displayed if no transcluded content is provided.\n *\n * <example module=\"transcludeFallbackContentExample\" name=\"ng-transclude\">\n * <file name=\"index.html\">\n * <script>\n * angular.module('transcludeFallbackContentExample', [])\n * .directive('myButton', function(){\n *             return {\n *               restrict: 'E',\n *               transclude: true,\n *               scope: true,\n *               template: '<button style=\"cursor: pointer;\">' +\n *                           '<ng-transclude>' +\n *                             '<b style=\"color: red;\">Button1</b>' +\n *                           '</ng-transclude>' +\n *                         '</button>'\n *             };\n *         });\n * </script>\n * <!-- fallback button content -->\n * <my-button id=\"fallback\"></my-button>\n * <!-- modified button content -->\n * <my-button id=\"modified\">\n *   <i style=\"color: green;\">Button2</i>\n * </my-button>\n * </file>\n * <file name=\"protractor.js\" type=\"protractor\">\n * it('should have different transclude element content', function() {\n *          expect(element(by.id('fallback')).getText()).toBe('Button1');\n *          expect(element(by.id('modified')).getText()).toBe('Button2');\n *        });\n * </file>\n * </example>\n *\n * @example\n * ### Multi-slot transclusion\n * This example demonstrates using multi-slot transclusion in a component directive.\n * <example name=\"multiSlotTranscludeExample\" module=\"multiSlotTranscludeExample\">\n *   <file name=\"index.html\">\n *    <style>\n *      .title, .footer {\n *        background-color: gray\n *      }\n *    </style>\n *    <div ng-controller=\"ExampleController\">\n *      <input ng-model=\"title\" aria-label=\"title\"> <br/>\n *      <textarea ng-model=\"text\" aria-label=\"text\"></textarea> <br/>\n *      <pane>\n *        <pane-title><a ng-href=\"{{link}}\">{{title}}</a></pane-title>\n *        <pane-body><p>{{text}}</p></pane-body>\n *      </pane>\n *    </div>\n *   </file>\n *   <file name=\"app.js\">\n *    angular.module('multiSlotTranscludeExample', [])\n *     .directive('pane', function() {\n *        return {\n *          restrict: 'E',\n *          transclude: {\n *            'title': '?paneTitle',\n *            'body': 'paneBody',\n *            'footer': '?paneFooter'\n *          },\n *          template: '<div style=\"border: 1px solid black;\">' +\n *                      '<div class=\"title\" ng-transclude=\"title\">Fallback Title</div>' +\n *                      '<div ng-transclude=\"body\"></div>' +\n *                      '<div class=\"footer\" ng-transclude=\"footer\">Fallback Footer</div>' +\n *                    '</div>'\n *        };\n *    })\n *    .controller('ExampleController', ['$scope', function($scope) {\n *      $scope.title = 'Lorem Ipsum';\n *      $scope.link = 'https://google.com';\n *      $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n *    }]);\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *      it('should have transcluded the title and the body', function() {\n *        var titleElement = element(by.model('title'));\n *        titleElement.clear();\n *        titleElement.sendKeys('TITLE');\n *        var textElement = element(by.model('text'));\n *        textElement.clear();\n *        textElement.sendKeys('TEXT');\n *        expect(element(by.css('.title')).getText()).toEqual('TITLE');\n *        expect(element(by.binding('text')).getText()).toEqual('TEXT');\n *        expect(element(by.css('.footer')).getText()).toEqual('Fallback Footer');\n *      });\n *   </file>\n * </example>\n */\nvar ngTranscludeMinErr = minErr('ngTransclude');\nvar ngTranscludeDirective = ['$compile', function($compile) {\n  return {\n    restrict: 'EAC',\n    terminal: true,\n    compile: function ngTranscludeCompile(tElement) {\n\n      // Remove and cache any original content to act as a fallback\n      var fallbackLinkFn = $compile(tElement.contents());\n      tElement.empty();\n\n      return function ngTranscludePostLink($scope, $element, $attrs, controller, $transclude) {\n\n        if (!$transclude) {\n          throw ngTranscludeMinErr('orphan',\n          'Illegal use of ngTransclude directive in the template! ' +\n          'No parent directive that requires a transclusion found. ' +\n          'Element: {0}',\n          startingTag($element));\n        }\n\n\n        // If the attribute is of the form: `ng-transclude=\"ng-transclude\"` then treat it like the default\n        if ($attrs.ngTransclude === $attrs.$attr.ngTransclude) {\n          $attrs.ngTransclude = '';\n        }\n        var slotName = $attrs.ngTransclude || $attrs.ngTranscludeSlot;\n\n        // If the slot is required and no transclusion content is provided then this call will throw an error\n        $transclude(ngTranscludeCloneAttachFn, null, slotName);\n\n        // If the slot is optional and no transclusion content is provided then use the fallback content\n        if (slotName && !$transclude.isSlotFilled(slotName)) {\n          useFallbackContent();\n        }\n\n        function ngTranscludeCloneAttachFn(clone, transcludedScope) {\n          if (clone.length && notWhitespace(clone)) {\n            $element.append(clone);\n          } else {\n            useFallbackContent();\n            // There is nothing linked against the transcluded scope since no content was available,\n            // so it should be safe to clean up the generated scope.\n            transcludedScope.$destroy();\n          }\n        }\n\n        function useFallbackContent() {\n          // Since this is the fallback content rather than the transcluded content,\n          // we link against the scope of this directive rather than the transcluded scope\n          fallbackLinkFn($scope, function(clone) {\n            $element.append(clone);\n          });\n        }\n\n        function notWhitespace(nodes) {\n          for (var i = 0, ii = nodes.length; i < ii; i++) {\n            var node = nodes[i];\n            if (node.nodeType !== NODE_TYPE_TEXT || node.nodeValue.trim()) {\n              return true;\n            }\n          }\n        }\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name script\n * @restrict E\n *\n * @description\n * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\n * template can be used by {@link ng.directive:ngInclude `ngInclude`},\n * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\n * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.\n *\n * @param {string} type Must be set to `'text/ng-template'`.\n * @param {string} id Cache name of the template.\n *\n * @example\n  <example  name=\"script-tag\">\n    <file name=\"index.html\">\n      <script type=\"text/ng-template\" id=\"/tpl.html\">\n        Content of the template.\n      </script>\n\n      <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n      <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should load template defined inside script tag', function() {\n        element(by.css('#tpl-link')).click();\n        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);\n      });\n    </file>\n  </example>\n */\nvar scriptDirective = ['$templateCache', function($templateCache) {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element, attr) {\n      if (attr.type === 'text/ng-template') {\n        var templateUrl = attr.id,\n            text = element[0].text;\n\n        $templateCache.put(templateUrl, text);\n      }\n    }\n  };\n}];\n\n/* exported selectDirective, optionDirective */\n\nvar noopNgModelController = { $setViewValue: noop, $render: noop };\n\n/**\n * @ngdoc type\n * @name  select.SelectController\n * @description\n * The controller for the `<select>` directive. This provides support for reading\n * and writing the selected value(s) of the control and also coordinates dynamically\n * added `<option>` elements, perhaps by an `ngRepeat` directive.\n */\nvar SelectController =\n        ['$element', '$scope', /** @this */ function($element, $scope) {\n\n  var self = this,\n      optionsMap = new NgMap();\n\n  self.selectValueMap = {}; // Keys are the hashed values, values the original values\n\n  // If the ngModel doesn't get provided then provide a dummy noop version to prevent errors\n  self.ngModelCtrl = noopNgModelController;\n  self.multiple = false;\n\n  // The \"unknown\" option is one that is prepended to the list if the viewValue\n  // does not match any of the options. When it is rendered the value of the unknown\n  // option is '? XXX ?' where XXX is the hashKey of the value that is not known.\n  //\n  // We can't just jqLite('<option>') since jqLite is not smart enough\n  // to create it in <select> and IE barfs otherwise.\n  self.unknownOption = jqLite(window.document.createElement('option'));\n\n  // The empty option is an option with the value '' that te application developer can\n  // provide inside the select. When the model changes to a value that doesn't match an option,\n  // it is selected - so if an empty option is provided, no unknown option is generated.\n  // However, the empty option is not removed when the model matches an option. It is always selectable\n  // and indicates that a \"null\" selection has been made.\n  self.hasEmptyOption = false;\n  self.emptyOption = undefined;\n\n  self.renderUnknownOption = function(val) {\n    var unknownVal = self.generateUnknownOptionValue(val);\n    self.unknownOption.val(unknownVal);\n    $element.prepend(self.unknownOption);\n    setOptionAsSelected(self.unknownOption);\n    $element.val(unknownVal);\n  };\n\n  self.updateUnknownOption = function(val) {\n    var unknownVal = self.generateUnknownOptionValue(val);\n    self.unknownOption.val(unknownVal);\n    setOptionAsSelected(self.unknownOption);\n    $element.val(unknownVal);\n  };\n\n  self.generateUnknownOptionValue = function(val) {\n    return '? ' + hashKey(val) + ' ?';\n  };\n\n  self.removeUnknownOption = function() {\n    if (self.unknownOption.parent()) self.unknownOption.remove();\n  };\n\n  self.selectEmptyOption = function() {\n    if (self.emptyOption) {\n      $element.val('');\n      setOptionAsSelected(self.emptyOption);\n    }\n  };\n\n  self.unselectEmptyOption = function() {\n    if (self.hasEmptyOption) {\n      self.emptyOption.removeAttr('selected');\n    }\n  };\n\n  $scope.$on('$destroy', function() {\n    // disable unknown option so that we don't do work when the whole select is being destroyed\n    self.renderUnknownOption = noop;\n  });\n\n  // Read the value of the select control, the implementation of this changes depending\n  // upon whether the select can have multiple values and whether ngOptions is at work.\n  self.readValue = function readSingleValue() {\n    var val = $element.val();\n    // ngValue added option values are stored in the selectValueMap, normal interpolations are not\n    var realVal = val in self.selectValueMap ? self.selectValueMap[val] : val;\n\n    if (self.hasOption(realVal)) {\n      return realVal;\n    }\n\n    return null;\n  };\n\n\n  // Write the value to the select control, the implementation of this changes depending\n  // upon whether the select can have multiple values and whether ngOptions is at work.\n  self.writeValue = function writeSingleValue(value) {\n    // Make sure to remove the selected attribute from the previously selected option\n    // Otherwise, screen readers might get confused\n    var currentlySelectedOption = $element[0].options[$element[0].selectedIndex];\n    if (currentlySelectedOption) currentlySelectedOption.removeAttribute('selected');\n\n    if (self.hasOption(value)) {\n      self.removeUnknownOption();\n\n      var hashedVal = hashKey(value);\n      $element.val(hashedVal in self.selectValueMap ? hashedVal : value);\n\n      // Set selected attribute and property on selected option for screen readers\n      var selectedOption = $element[0].options[$element[0].selectedIndex];\n      setOptionAsSelected(jqLite(selectedOption));\n    } else {\n      if (value == null && self.emptyOption) {\n        self.removeUnknownOption();\n        self.selectEmptyOption();\n      } else if (self.unknownOption.parent().length) {\n        self.updateUnknownOption(value);\n      } else {\n        self.renderUnknownOption(value);\n      }\n    }\n  };\n\n\n  // Tell the select control that an option, with the given value, has been added\n  self.addOption = function(value, element) {\n    // Skip comment nodes, as they only pollute the `optionsMap`\n    if (element[0].nodeType === NODE_TYPE_COMMENT) return;\n\n    assertNotHasOwnProperty(value, '\"option value\"');\n    if (value === '') {\n      self.hasEmptyOption = true;\n      self.emptyOption = element;\n    }\n    var count = optionsMap.get(value) || 0;\n    optionsMap.set(value, count + 1);\n    // Only render at the end of a digest. This improves render performance when many options\n    // are added during a digest and ensures all relevant options are correctly marked as selected\n    scheduleRender();\n  };\n\n  // Tell the select control that an option, with the given value, has been removed\n  self.removeOption = function(value) {\n    var count = optionsMap.get(value);\n    if (count) {\n      if (count === 1) {\n        optionsMap.delete(value);\n        if (value === '') {\n          self.hasEmptyOption = false;\n          self.emptyOption = undefined;\n        }\n      } else {\n        optionsMap.set(value, count - 1);\n      }\n    }\n  };\n\n  // Check whether the select control has an option matching the given value\n  self.hasOption = function(value) {\n    return !!optionsMap.get(value);\n  };\n\n\n  var renderScheduled = false;\n  function scheduleRender() {\n    if (renderScheduled) return;\n    renderScheduled = true;\n    $scope.$$postDigest(function() {\n      renderScheduled = false;\n      self.ngModelCtrl.$render();\n    });\n  }\n\n  var updateScheduled = false;\n  function scheduleViewValueUpdate(renderAfter) {\n    if (updateScheduled) return;\n\n    updateScheduled = true;\n\n    $scope.$$postDigest(function() {\n      if ($scope.$$destroyed) return;\n\n      updateScheduled = false;\n      self.ngModelCtrl.$setViewValue(self.readValue());\n      if (renderAfter) self.ngModelCtrl.$render();\n    });\n  }\n\n\n  self.registerOption = function(optionScope, optionElement, optionAttrs, interpolateValueFn, interpolateTextFn) {\n\n    if (optionAttrs.$attr.ngValue) {\n      // The value attribute is set by ngValue\n      var oldVal, hashedVal = NaN;\n      optionAttrs.$observe('value', function valueAttributeObserveAction(newVal) {\n\n        var removal;\n        var previouslySelected = optionElement.prop('selected');\n\n        if (isDefined(hashedVal)) {\n          self.removeOption(oldVal);\n          delete self.selectValueMap[hashedVal];\n          removal = true;\n        }\n\n        hashedVal = hashKey(newVal);\n        oldVal = newVal;\n        self.selectValueMap[hashedVal] = newVal;\n        self.addOption(newVal, optionElement);\n        // Set the attribute directly instead of using optionAttrs.$set - this stops the observer\n        // from firing a second time. Other $observers on value will also get the result of the\n        // ngValue expression, not the hashed value\n        optionElement.attr('value', hashedVal);\n\n        if (removal && previouslySelected) {\n          scheduleViewValueUpdate();\n        }\n\n      });\n    } else if (interpolateValueFn) {\n      // The value attribute is interpolated\n      optionAttrs.$observe('value', function valueAttributeObserveAction(newVal) {\n        // This method is overwritten in ngOptions and has side-effects!\n        self.readValue();\n\n        var removal;\n        var previouslySelected = optionElement.prop('selected');\n\n        if (isDefined(oldVal)) {\n          self.removeOption(oldVal);\n          removal = true;\n        }\n        oldVal = newVal;\n        self.addOption(newVal, optionElement);\n\n        if (removal && previouslySelected) {\n          scheduleViewValueUpdate();\n        }\n      });\n    } else if (interpolateTextFn) {\n      // The text content is interpolated\n      optionScope.$watch(interpolateTextFn, function interpolateWatchAction(newVal, oldVal) {\n        optionAttrs.$set('value', newVal);\n        var previouslySelected = optionElement.prop('selected');\n        if (oldVal !== newVal) {\n          self.removeOption(oldVal);\n        }\n        self.addOption(newVal, optionElement);\n\n        if (oldVal && previouslySelected) {\n          scheduleViewValueUpdate();\n        }\n      });\n    } else {\n      // The value attribute is static\n      self.addOption(optionAttrs.value, optionElement);\n    }\n\n\n    optionAttrs.$observe('disabled', function(newVal) {\n\n      // Since model updates will also select disabled options (like ngOptions),\n      // we only have to handle options becoming disabled, not enabled\n\n      if (newVal === 'true' || newVal && optionElement.prop('selected')) {\n        if (self.multiple) {\n          scheduleViewValueUpdate(true);\n        } else {\n          self.ngModelCtrl.$setViewValue(null);\n          self.ngModelCtrl.$render();\n        }\n      }\n    });\n\n    optionElement.on('$destroy', function() {\n      var currentValue = self.readValue();\n      var removeValue = optionAttrs.value;\n\n      self.removeOption(removeValue);\n      scheduleRender();\n\n      if (self.multiple && currentValue && currentValue.indexOf(removeValue) !== -1 ||\n          currentValue === removeValue\n      ) {\n        // When multiple (selected) options are destroyed at the same time, we don't want\n        // to run a model update for each of them. Instead, run a single update in the $$postDigest\n        scheduleViewValueUpdate(true);\n      }\n    });\n  };\n\n  function setOptionAsSelected(optionEl) {\n    optionEl.prop('selected', true); // needed for IE\n    optionEl.attr('selected', true);\n  }\n}];\n\n/**\n * @ngdoc directive\n * @name select\n * @restrict E\n *\n * @description\n * HTML `select` element with angular data-binding.\n *\n * The `select` directive is used together with {@link ngModel `ngModel`} to provide data-binding\n * between the scope and the `<select>` control (including setting default values).\n * It also handles dynamic `<option>` elements, which can be added using the {@link ngRepeat `ngRepeat}` or\n * {@link ngOptions `ngOptions`} directives.\n *\n * When an item in the `<select>` menu is selected, the value of the selected option will be bound\n * to the model identified by the `ngModel` directive. With static or repeated options, this is\n * the content of the `value` attribute or the textContent of the `<option>`, if the value attribute is missing.\n * Value and textContent can be interpolated.\n *\n * ## Matching model and option values\n *\n * In general, the match between the model and an option is evaluated by strictly comparing the model\n * value against the value of the available options.\n *\n * If you are setting the option value with the option's `value` attribute, or textContent, the\n * value will always be a `string` which means that the model value must also be a string.\n * Otherwise the `select` directive cannot match them correctly.\n *\n * To bind the model to a non-string value, you can use one of the following strategies:\n * - the {@link ng.ngOptions `ngOptions`} directive\n *   ({@link ng.select#using-select-with-ngoptions-and-setting-a-default-value})\n * - the {@link ng.ngValue `ngValue`} directive, which allows arbitrary expressions to be\n *   option values ({@link ng.select#using-ngvalue-to-bind-the-model-to-an-array-of-objects Example})\n * - model $parsers / $formatters to convert the string value\n *   ({@link ng.select#binding-select-to-a-non-string-value-via-ngmodel-parsing-formatting Example})\n *\n * If the viewValue of `ngModel` does not match any of the options, then the control\n * will automatically add an \"unknown\" option, which it then removes when the mismatch is resolved.\n *\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n * be nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\n * option. See example below for demonstration.\n *\n * ## Choosing between `ngRepeat` and `ngOptions`\n *\n * In many cases, `ngRepeat` can be used on `<option>` elements instead of {@link ng.directive:ngOptions\n * ngOptions} to achieve a similar result. However, `ngOptions` provides some benefits:\n * - more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\n * comprehension expression\n * - reduced memory consumption by not creating a new scope for each repeated instance\n * - increased render speed by creating the options in a documentFragment instead of individually\n *\n * Specifically, select with repeated options slows down significantly starting at 2000 options in\n * Chrome and Internet Explorer / Edge.\n *\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} multiple Allows multiple options to be selected. The selected values will be\n *     bound to the model as an array.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {string=} ngRequired Adds required attribute and required validation constraint to\n * the element when the ngRequired expression evaluates to true. Use ngRequired instead of required\n * when you want to data-bind to the required attribute.\n * @param {string=} ngChange Angular expression to be executed when selected option(s) changes due to user\n *    interaction with the select element.\n * @param {string=} ngOptions sets the options that the select is populated with and defines what is\n * set on the model on selection. See {@link ngOptions `ngOptions`}.\n *\n * @example\n * ### Simple `select` elements with static options\n *\n * <example name=\"static-select\" module=\"staticSelect\">\n * <file name=\"index.html\">\n * <div ng-controller=\"ExampleController\">\n *   <form name=\"myForm\">\n *     <label for=\"singleSelect\"> Single select: </label><br>\n *     <select name=\"singleSelect\" ng-model=\"data.singleSelect\">\n *       <option value=\"option-1\">Option 1</option>\n *       <option value=\"option-2\">Option 2</option>\n *     </select><br>\n *\n *     <label for=\"singleSelect\"> Single select with \"not selected\" option and dynamic option values: </label><br>\n *     <select name=\"singleSelect\" id=\"singleSelect\" ng-model=\"data.singleSelect\">\n *       <option value=\"\">---Please select---</option> <!-- not selected / blank option -->\n *       <option value=\"{{data.option1}}\">Option 1</option> <!-- interpolation -->\n *       <option value=\"option-2\">Option 2</option>\n *     </select><br>\n *     <button ng-click=\"forceUnknownOption()\">Force unknown option</button><br>\n *     <tt>singleSelect = {{data.singleSelect}}</tt>\n *\n *     <hr>\n *     <label for=\"multipleSelect\"> Multiple select: </label><br>\n *     <select name=\"multipleSelect\" id=\"multipleSelect\" ng-model=\"data.multipleSelect\" multiple>\n *       <option value=\"option-1\">Option 1</option>\n *       <option value=\"option-2\">Option 2</option>\n *       <option value=\"option-3\">Option 3</option>\n *     </select><br>\n *     <tt>multipleSelect = {{data.multipleSelect}}</tt><br/>\n *   </form>\n * </div>\n * </file>\n * <file name=\"app.js\">\n *  angular.module('staticSelect', [])\n *    .controller('ExampleController', ['$scope', function($scope) {\n *      $scope.data = {\n *       singleSelect: null,\n *       multipleSelect: [],\n *       option1: 'option-1'\n *      };\n *\n *      $scope.forceUnknownOption = function() {\n *        $scope.data.singleSelect = 'nonsense';\n *      };\n *   }]);\n * </file>\n *</example>\n *\n * ### Using `ngRepeat` to generate `select` options\n * <example name=\"select-ngrepeat\" module=\"ngrepeatSelect\">\n * <file name=\"index.html\">\n * <div ng-controller=\"ExampleController\">\n *   <form name=\"myForm\">\n *     <label for=\"repeatSelect\"> Repeat select: </label>\n *     <select name=\"repeatSelect\" id=\"repeatSelect\" ng-model=\"data.model\">\n *       <option ng-repeat=\"option in data.availableOptions\" value=\"{{option.id}}\">{{option.name}}</option>\n *     </select>\n *   </form>\n *   <hr>\n *   <tt>model = {{data.model}}</tt><br/>\n * </div>\n * </file>\n * <file name=\"app.js\">\n *  angular.module('ngrepeatSelect', [])\n *    .controller('ExampleController', ['$scope', function($scope) {\n *      $scope.data = {\n *       model: null,\n *       availableOptions: [\n *         {id: '1', name: 'Option A'},\n *         {id: '2', name: 'Option B'},\n *         {id: '3', name: 'Option C'}\n *       ]\n *      };\n *   }]);\n * </file>\n *</example>\n *\n * ### Using `ngValue` to bind the model to an array of objects\n * <example name=\"select-ngvalue\" module=\"ngvalueSelect\">\n * <file name=\"index.html\">\n * <div ng-controller=\"ExampleController\">\n *   <form name=\"myForm\">\n *     <label for=\"ngvalueselect\"> ngvalue select: </label>\n *     <select size=\"6\" name=\"ngvalueselect\" ng-model=\"data.model\" multiple>\n *       <option ng-repeat=\"option in data.availableOptions\" ng-value=\"option.value\">{{option.name}}</option>\n *     </select>\n *   </form>\n *   <hr>\n *   <pre>model = {{data.model | json}}</pre><br/>\n * </div>\n * </file>\n * <file name=\"app.js\">\n *  angular.module('ngvalueSelect', [])\n *    .controller('ExampleController', ['$scope', function($scope) {\n *      $scope.data = {\n *       model: null,\n *       availableOptions: [\n           {value: 'myString', name: 'string'},\n           {value: 1, name: 'integer'},\n           {value: true, name: 'boolean'},\n           {value: null, name: 'null'},\n           {value: {prop: 'value'}, name: 'object'},\n           {value: ['a'], name: 'array'}\n *       ]\n *      };\n *   }]);\n * </file>\n *</example>\n *\n * ### Using `select` with `ngOptions` and setting a default value\n * See the {@link ngOptions ngOptions documentation} for more `ngOptions` usage examples.\n *\n * <example name=\"select-with-default-values\" module=\"defaultValueSelect\">\n * <file name=\"index.html\">\n * <div ng-controller=\"ExampleController\">\n *   <form name=\"myForm\">\n *     <label for=\"mySelect\">Make a choice:</label>\n *     <select name=\"mySelect\" id=\"mySelect\"\n *       ng-options=\"option.name for option in data.availableOptions track by option.id\"\n *       ng-model=\"data.selectedOption\"></select>\n *   </form>\n *   <hr>\n *   <tt>option = {{data.selectedOption}}</tt><br/>\n * </div>\n * </file>\n * <file name=\"app.js\">\n *  angular.module('defaultValueSelect', [])\n *    .controller('ExampleController', ['$scope', function($scope) {\n *      $scope.data = {\n *       availableOptions: [\n *         {id: '1', name: 'Option A'},\n *         {id: '2', name: 'Option B'},\n *         {id: '3', name: 'Option C'}\n *       ],\n *       selectedOption: {id: '3', name: 'Option C'} //This sets the default value of the select in the ui\n *       };\n *   }]);\n * </file>\n *</example>\n *\n *\n * ### Binding `select` to a non-string value via `ngModel` parsing / formatting\n *\n * <example name=\"select-with-non-string-options\" module=\"nonStringSelect\">\n *   <file name=\"index.html\">\n *     <select ng-model=\"model.id\" convert-to-number>\n *       <option value=\"0\">Zero</option>\n *       <option value=\"1\">One</option>\n *       <option value=\"2\">Two</option>\n *     </select>\n *     {{ model }}\n *   </file>\n *   <file name=\"app.js\">\n *     angular.module('nonStringSelect', [])\n *       .run(function($rootScope) {\n *         $rootScope.model = { id: 2 };\n *       })\n *       .directive('convertToNumber', function() {\n *         return {\n *           require: 'ngModel',\n *           link: function(scope, element, attrs, ngModel) {\n *             ngModel.$parsers.push(function(val) {\n *               return parseInt(val, 10);\n *             });\n *             ngModel.$formatters.push(function(val) {\n *               return '' + val;\n *             });\n *           }\n *         };\n *       });\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     it('should initialize to model', function() {\n *       expect(element(by.model('model.id')).$('option:checked').getText()).toEqual('Two');\n *     });\n *   </file>\n * </example>\n *\n */\nvar selectDirective = function() {\n\n  return {\n    restrict: 'E',\n    require: ['select', '?ngModel'],\n    controller: SelectController,\n    priority: 1,\n    link: {\n      pre: selectPreLink,\n      post: selectPostLink\n    }\n  };\n\n  function selectPreLink(scope, element, attr, ctrls) {\n\n      var selectCtrl = ctrls[0];\n      var ngModelCtrl = ctrls[1];\n\n      // if ngModel is not defined, we don't need to do anything but set the registerOption\n      // function to noop, so options don't get added internally\n      if (!ngModelCtrl) {\n        selectCtrl.registerOption = noop;\n        return;\n      }\n\n\n      selectCtrl.ngModelCtrl = ngModelCtrl;\n\n      // When the selected item(s) changes we delegate getting the value of the select control\n      // to the `readValue` method, which can be changed if the select can have multiple\n      // selected values or if the options are being generated by `ngOptions`\n      element.on('change', function() {\n        selectCtrl.removeUnknownOption();\n        scope.$apply(function() {\n          ngModelCtrl.$setViewValue(selectCtrl.readValue());\n        });\n      });\n\n      // If the select allows multiple values then we need to modify how we read and write\n      // values from and to the control; also what it means for the value to be empty and\n      // we have to add an extra watch since ngModel doesn't work well with arrays - it\n      // doesn't trigger rendering if only an item in the array changes.\n      if (attr.multiple) {\n        selectCtrl.multiple = true;\n\n        // Read value now needs to check each option to see if it is selected\n        selectCtrl.readValue = function readMultipleValue() {\n          var array = [];\n          forEach(element.find('option'), function(option) {\n            if (option.selected && !option.disabled) {\n              var val = option.value;\n              array.push(val in selectCtrl.selectValueMap ? selectCtrl.selectValueMap[val] : val);\n            }\n          });\n          return array;\n        };\n\n        // Write value now needs to set the selected property of each matching option\n        selectCtrl.writeValue = function writeMultipleValue(value) {\n          forEach(element.find('option'), function(option) {\n            option.selected = !!value && (includes(value, option.value) ||\n                                          includes(value, selectCtrl.selectValueMap[option.value]));\n          });\n        };\n\n        // we have to do it on each watch since ngModel watches reference, but\n        // we need to work of an array, so we need to see if anything was inserted/removed\n        var lastView, lastViewRef = NaN;\n        scope.$watch(function selectMultipleWatch() {\n          if (lastViewRef === ngModelCtrl.$viewValue && !equals(lastView, ngModelCtrl.$viewValue)) {\n            lastView = shallowCopy(ngModelCtrl.$viewValue);\n            ngModelCtrl.$render();\n          }\n          lastViewRef = ngModelCtrl.$viewValue;\n        });\n\n        // If we are a multiple select then value is now a collection\n        // so the meaning of $isEmpty changes\n        ngModelCtrl.$isEmpty = function(value) {\n          return !value || value.length === 0;\n        };\n\n      }\n    }\n\n    function selectPostLink(scope, element, attrs, ctrls) {\n      // if ngModel is not defined, we don't need to do anything\n      var ngModelCtrl = ctrls[1];\n      if (!ngModelCtrl) return;\n\n      var selectCtrl = ctrls[0];\n\n      // We delegate rendering to the `writeValue` method, which can be changed\n      // if the select can have multiple selected values or if the options are being\n      // generated by `ngOptions`.\n      // This must be done in the postLink fn to prevent $render to be called before\n      // all nodes have been linked correctly.\n      ngModelCtrl.$render = function() {\n        selectCtrl.writeValue(ngModelCtrl.$viewValue);\n      };\n    }\n};\n\n\n// The option directive is purely designed to communicate the existence (or lack of)\n// of dynamically created (and destroyed) option elements to their containing select\n// directive via its controller.\nvar optionDirective = ['$interpolate', function($interpolate) {\n  return {\n    restrict: 'E',\n    priority: 100,\n    compile: function(element, attr) {\n      var interpolateValueFn, interpolateTextFn;\n\n      if (isDefined(attr.ngValue)) {\n        // Will be handled by registerOption\n      } else if (isDefined(attr.value)) {\n        // If the value attribute is defined, check if it contains an interpolation\n        interpolateValueFn = $interpolate(attr.value, true);\n      } else {\n        // If the value attribute is not defined then we fall back to the\n        // text content of the option element, which may be interpolated\n        interpolateTextFn = $interpolate(element.text(), true);\n        if (!interpolateTextFn) {\n          attr.$set('value', element.text());\n        }\n      }\n\n      return function(scope, element, attr) {\n        // This is an optimization over using ^^ since we don't want to have to search\n        // all the way to the root of the DOM for every single option element\n        var selectCtrlName = '$selectController',\n            parent = element.parent(),\n            selectCtrl = parent.data(selectCtrlName) ||\n              parent.parent().data(selectCtrlName); // in case we are in optgroup\n\n        if (selectCtrl) {\n          selectCtrl.registerOption(scope, element, attr, interpolateValueFn, interpolateTextFn);\n        }\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngRequired\n * @restrict A\n *\n * @description\n *\n * ngRequired adds the required {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\n * It is most often used for {@link input `input`} and {@link select `select`} controls, but can also be\n * applied to custom controls.\n *\n * The directive sets the `required` attribute on the element if the Angular expression inside\n * `ngRequired` evaluates to true. A special directive for setting `required` is necessary because we\n * cannot use interpolation inside `required`. See the {@link guide/interpolation interpolation guide}\n * for more info.\n *\n * The validator will set the `required` error key to true if the `required` attribute is set and\n * calling {@link ngModel.NgModelController#$isEmpty `NgModelController.$isEmpty`} with the\n * {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`} returns `true`. For example, the\n * `$isEmpty()` implementation for `input[text]` checks the length of the `$viewValue`. When developing\n * custom controls, `$isEmpty()` can be overwritten to account for a $viewValue that is not string-based.\n *\n * @example\n * <example name=\"ngRequiredDirective\" module=\"ngRequiredExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('ngRequiredExample', [])\n *         .controller('ExampleController', ['$scope', function($scope) {\n *           $scope.required = true;\n *         }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <form name=\"form\">\n *         <label for=\"required\">Toggle required: </label>\n *         <input type=\"checkbox\" ng-model=\"required\" id=\"required\" />\n *         <br>\n *         <label for=\"input\">This input must be filled if `required` is true: </label>\n *         <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-required=\"required\" /><br>\n *         <hr>\n *         required error set? = <code>{{form.input.$error.required}}</code><br>\n *         model = <code>{{model}}</code>\n *       </form>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n       var required = element(by.binding('form.input.$error.required'));\n       var model = element(by.binding('model'));\n       var input = element(by.id('input'));\n\n       it('should set the required error', function() {\n         expect(required.getText()).toContain('true');\n\n         input.sendKeys('123');\n         expect(required.getText()).not.toContain('true');\n         expect(model.getText()).toContain('123');\n       });\n *   </file>\n * </example>\n */\nvar requiredDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n      attr.required = true; // force truthy in case we are on non input element\n\n      ctrl.$validators.required = function(modelValue, viewValue) {\n        return !attr.required || !ctrl.$isEmpty(viewValue);\n      };\n\n      attr.$observe('required', function() {\n        ctrl.$validate();\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ngPattern\n *\n * @description\n *\n * ngPattern adds the pattern {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\n * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n *\n * The validator sets the `pattern` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\n * does not match a RegExp which is obtained by evaluating the Angular expression given in the\n * `ngPattern` attribute value:\n * * If the expression evaluates to a RegExp object, then this is used directly.\n * * If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it\n * in `^` and `$` characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.\n *\n * <div class=\"alert alert-info\">\n * **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n * start at the index of the last search's match, thus not taking the whole input value into\n * account.\n * </div>\n *\n * <div class=\"alert alert-info\">\n * **Note:** This directive is also added when the plain `pattern` attribute is used, with two\n * differences:\n * <ol>\n *   <li>\n *     `ngPattern` does not set the `pattern` attribute and therefore HTML5 constraint validation is\n *     not available.\n *   </li>\n *   <li>\n *     The `ngPattern` attribute must be an expression, while the `pattern` value must be\n *     interpolated.\n *   </li>\n * </ol>\n * </div>\n *\n * @example\n * <example name=\"ngPatternDirective\" module=\"ngPatternExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('ngPatternExample', [])\n *         .controller('ExampleController', ['$scope', function($scope) {\n *           $scope.regex = '\\\\d+';\n *         }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <form name=\"form\">\n *         <label for=\"regex\">Set a pattern (regex string): </label>\n *         <input type=\"text\" ng-model=\"regex\" id=\"regex\" />\n *         <br>\n *         <label for=\"input\">This input is restricted by the current pattern: </label>\n *         <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-pattern=\"regex\" /><br>\n *         <hr>\n *         input valid? = <code>{{form.input.$valid}}</code><br>\n *         model = <code>{{model}}</code>\n *       </form>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n       var model = element(by.binding('model'));\n       var input = element(by.id('input'));\n\n       it('should validate the input with the default pattern', function() {\n         input.sendKeys('aaa');\n         expect(model.getText()).not.toContain('aaa');\n\n         input.clear().then(function() {\n           input.sendKeys('123');\n           expect(model.getText()).toContain('123');\n         });\n       });\n *   </file>\n * </example>\n */\nvar patternDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n\n      var regexp, patternExp = attr.ngPattern || attr.pattern;\n      attr.$observe('pattern', function(regex) {\n        if (isString(regex) && regex.length > 0) {\n          regex = new RegExp('^' + regex + '$');\n        }\n\n        if (regex && !regex.test) {\n          throw minErr('ngPattern')('noregexp',\n            'Expected {0} to be a RegExp but was {1}. Element: {2}', patternExp,\n            regex, startingTag(elm));\n        }\n\n        regexp = regex || undefined;\n        ctrl.$validate();\n      });\n\n      ctrl.$validators.pattern = function(modelValue, viewValue) {\n        // HTML5 pattern constraint validates the input value, so we validate the viewValue\n        return ctrl.$isEmpty(viewValue) || isUndefined(regexp) || regexp.test(viewValue);\n      };\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ngMaxlength\n *\n * @description\n *\n * ngMaxlength adds the maxlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\n * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n *\n * The validator sets the `maxlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\n * is longer than the integer obtained by evaluating the Angular expression given in the\n * `ngMaxlength` attribute value.\n *\n * <div class=\"alert alert-info\">\n * **Note:** This directive is also added when the plain `maxlength` attribute is used, with two\n * differences:\n * <ol>\n *   <li>\n *     `ngMaxlength` does not set the `maxlength` attribute and therefore HTML5 constraint\n *     validation is not available.\n *   </li>\n *   <li>\n *     The `ngMaxlength` attribute must be an expression, while the `maxlength` value must be\n *     interpolated.\n *   </li>\n * </ol>\n * </div>\n *\n * @example\n * <example name=\"ngMaxlengthDirective\" module=\"ngMaxlengthExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('ngMaxlengthExample', [])\n *         .controller('ExampleController', ['$scope', function($scope) {\n *           $scope.maxlength = 5;\n *         }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <form name=\"form\">\n *         <label for=\"maxlength\">Set a maxlength: </label>\n *         <input type=\"number\" ng-model=\"maxlength\" id=\"maxlength\" />\n *         <br>\n *         <label for=\"input\">This input is restricted by the current maxlength: </label>\n *         <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-maxlength=\"maxlength\" /><br>\n *         <hr>\n *         input valid? = <code>{{form.input.$valid}}</code><br>\n *         model = <code>{{model}}</code>\n *       </form>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n       var model = element(by.binding('model'));\n       var input = element(by.id('input'));\n\n       it('should validate the input with the default maxlength', function() {\n         input.sendKeys('abcdef');\n         expect(model.getText()).not.toContain('abcdef');\n\n         input.clear().then(function() {\n           input.sendKeys('abcde');\n           expect(model.getText()).toContain('abcde');\n         });\n       });\n *   </file>\n * </example>\n */\nvar maxlengthDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n\n      var maxlength = -1;\n      attr.$observe('maxlength', function(value) {\n        var intVal = toInt(value);\n        maxlength = isNumberNaN(intVal) ? -1 : intVal;\n        ctrl.$validate();\n      });\n      ctrl.$validators.maxlength = function(modelValue, viewValue) {\n        return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxlength);\n      };\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ngMinlength\n *\n * @description\n *\n * ngMinlength adds the minlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\n * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n *\n * The validator sets the `minlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\n * is shorter than the integer obtained by evaluating the Angular expression given in the\n * `ngMinlength` attribute value.\n *\n * <div class=\"alert alert-info\">\n * **Note:** This directive is also added when the plain `minlength` attribute is used, with two\n * differences:\n * <ol>\n *   <li>\n *     `ngMinlength` does not set the `minlength` attribute and therefore HTML5 constraint\n *     validation is not available.\n *   </li>\n *   <li>\n *     The `ngMinlength` value must be an expression, while the `minlength` value must be\n *     interpolated.\n *   </li>\n * </ol>\n * </div>\n *\n * @example\n * <example name=\"ngMinlengthDirective\" module=\"ngMinlengthExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('ngMinlengthExample', [])\n *         .controller('ExampleController', ['$scope', function($scope) {\n *           $scope.minlength = 3;\n *         }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <form name=\"form\">\n *         <label for=\"minlength\">Set a minlength: </label>\n *         <input type=\"number\" ng-model=\"minlength\" id=\"minlength\" />\n *         <br>\n *         <label for=\"input\">This input is restricted by the current minlength: </label>\n *         <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-minlength=\"minlength\" /><br>\n *         <hr>\n *         input valid? = <code>{{form.input.$valid}}</code><br>\n *         model = <code>{{model}}</code>\n *       </form>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n       var model = element(by.binding('model'));\n       var input = element(by.id('input'));\n\n       it('should validate the input with the default minlength', function() {\n         input.sendKeys('ab');\n         expect(model.getText()).not.toContain('ab');\n\n         input.sendKeys('abc');\n         expect(model.getText()).toContain('abc');\n       });\n *   </file>\n * </example>\n */\nvar minlengthDirective = function() {\n  return {\n    restrict: 'A',\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n\n      var minlength = 0;\n      attr.$observe('minlength', function(value) {\n        minlength = toInt(value) || 0;\n        ctrl.$validate();\n      });\n      ctrl.$validators.minlength = function(modelValue, viewValue) {\n        return ctrl.$isEmpty(viewValue) || viewValue.length >= minlength;\n      };\n    }\n  };\n};\n\nif (window.angular.bootstrap) {\n  // AngularJS is already loaded, so we can return here...\n  if (window.console) {\n    console.log('WARNING: Tried to load angular more than once.');\n  }\n  return;\n}\n\n// try to bind to jquery now so that one can write jqLite(fn)\n// but we will rebind on bootstrap again.\nbindJQuery();\n\npublishExternalAPI(angular);\n\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\nvar PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\nfunction getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}\n\nfunction getVF(n, opt_precision) {\n  var v = opt_precision;\n\n  if (undefined === v) {\n    v = Math.min(getDecimals(n), 3);\n  }\n\n  var base = Math.pow(10, v);\n  var f = ((n * base) | 0) % base;\n  return {v: v, f: f};\n}\n\n$provide.value(\"$locale\", {\n  \"DATETIME_FORMATS\": {\n    \"AMPMS\": [\n      \"AM\",\n      \"PM\"\n    ],\n    \"DAY\": [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    \"ERANAMES\": [\n      \"Before Christ\",\n      \"Anno Domini\"\n    ],\n    \"ERAS\": [\n      \"BC\",\n      \"AD\"\n    ],\n    \"FIRSTDAYOFWEEK\": 6,\n    \"MONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"SHORTDAY\": [\n      \"Sun\",\n      \"Mon\",\n      \"Tue\",\n      \"Wed\",\n      \"Thu\",\n      \"Fri\",\n      \"Sat\"\n    ],\n    \"SHORTMONTH\": [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    \"STANDALONEMONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"WEEKENDRANGE\": [\n      5,\n      6\n    ],\n    \"fullDate\": \"EEEE, MMMM d, y\",\n    \"longDate\": \"MMMM d, y\",\n    \"medium\": \"MMM d, y h:mm:ss a\",\n    \"mediumDate\": \"MMM d, y\",\n    \"mediumTime\": \"h:mm:ss a\",\n    \"short\": \"M/d/yy h:mm a\",\n    \"shortDate\": \"M/d/yy\",\n    \"shortTime\": \"h:mm a\"\n  },\n  \"NUMBER_FORMATS\": {\n    \"CURRENCY_SYM\": \"$\",\n    \"DECIMAL_SEP\": \".\",\n    \"GROUP_SEP\": \",\",\n    \"PATTERNS\": [\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 3,\n        \"minFrac\": 0,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\"\n      },\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 2,\n        \"minFrac\": 2,\n        \"minInt\": 1,\n        \"negPre\": \"-\\u00a4\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\\u00a4\",\n        \"posSuf\": \"\"\n      }\n    ]\n  },\n  \"id\": \"en-us\",\n  \"localeID\": \"en_US\",\n  \"pluralCat\": function(n, opt_precision) {  var i = n | 0;  var vf = getVF(n, opt_precision);  if (i == 1 && vf.v == 0) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n});\n}]);\n\n  jqLite(function() {\n    angularInit(window.document, bootstrap);\n  });\n\n})(window);\n\n!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');\n},{}],14:[function(require,module,exports){\nrequire('./angular');\nmodule.exports = angular;\n\n},{\"./angular\":13}],15:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],16:[function(require,module,exports){\n/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.2\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Mon Jun 05 2017 11:33:23 GMT+0200 (Mitteleuropäische Sommerzeit)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// The main wrapping element\r\nvar SVG = this.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent, withData) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a bitch when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new window.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function(spof) {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = url.toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEvent = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r\n},{}],17:[function(require,module,exports){\n/*! svg.panzoom.js v1.0.0 MIT*/;!function(){\"use strict\";var t=function(t){return t.touches||(t.touches=[{clientX:t.clientX,clientY:t.clientY}]),t.touches};SVG.extend(SVG.Doc,SVG.Nested,{panZoom:function(e){e=e||{};var n,o,i=e.zoomFactor||.03,s=!1,c=function(t){t.preventDefault();var e=this.zoom()-i*t.deltaY/Math.abs(t.deltaY),n=this.point(t.clientX,t.clientY);this.zoom(e,n)},h=function(e){o=t(e),o.length<2||(e.preventDefault(),this.fire(\"pinchZoomStart\",{event:e}).event().defaultPrevented||(this.off(\"touchstart\",h),s=!0,SVG.on(document,\"touchmove\",r,this,{passive:!1}),SVG.on(document,\"touchend\",a,this,{passive:!1})))},a=function(t){t.preventDefault(),s=!1,this.fire(\"pinchZoomEnd\",{event:t}),SVG.off(document,\"touchmove\",r),SVG.off(document,\"touchend\",a),this.on(\"touchstart\",h)},r=function(e){e.preventDefault();var n=t(e),i=Math.sqrt(Math.pow(o[0].clientX-o[1].clientX,2)+Math.pow(o[0].clientY-o[1].clientY,2)),s=Math.sqrt(Math.pow(n[0].clientX-n[1].clientX,2)+Math.pow(n[0].clientY-n[1].clientY,2)),c=i/s,h={x:n[0].clientX+.5*(n[1].clientX-n[0].clientX),y:n[0].clientY+.5*(n[1].clientY-n[0].clientY)},a={x:o[0].clientX+.5*(o[1].clientX-o[0].clientX),y:o[0].clientY+.5*(o[1].clientY-o[0].clientY)},r=this.point(h.x,h.y),u=this.point(2*h.x-a.x,2*h.y-a.y),l=new SVG.Box(this.viewbox()).transform((new SVG.Matrix).translate(r.x,r.y).scale(c,0,0).translate(-u.x,-u.y));this.viewbox(l),o=n,this.fire(\"zoom\",{box:l,focus:u})},u=function(e){e.preventDefault(),this.off(\"mousedown\",u),o=t(e),s||(this.fire(\"panStart\",{event:e}),n={x:o[0].clientX,y:o[0].clientY},SVG.on(document,\"mousemove\",f,this,{passive:!1}),SVG.on(document,\"mouseup\",l,this,{passive:!1}))},l=function(t){t.preventDefault(),this.fire(\"panEnd\",{event:t}),SVG.off(document,\"mousemove\",f),SVG.off(document,\"mouseup\",l),this.on(\"mousedown\",u)},f=function(e){e.preventDefault();var o=t(e),i={x:o[0].clientX,y:o[0].clientY},s=this.point(i.x,i.y),c=this.point(n.x,n.y),h=[c.x-s.x,c.y-s.y],a=new SVG.Box(this.viewbox()).transform((new SVG.Matrix).translate(h[0],h[1]));this.viewbox(a),n=i};return this.on(\"wheel\",c),this.on(\"touchstart\",h,this,{passive:!1}),this.on(\"mousedown\",u,this),this},zoom:function(t,e){var n=window.getComputedStyle(this.node),o=parseFloat(n.getPropertyValue(\"width\")),i=parseFloat(n.getPropertyValue(\"height\")),s=this.viewbox(),c=o/s.width,h=i/s.height,a=Math.min(c,h);if(null==t)return a;var r=a/t;e=e||new SVG.Point(o/2/c+s.x,i/2/h+s.y);var u=new SVG.Box(s).transform((new SVG.Matrix).scale(r,e.x,e.y));return this.fire(\"zoom\",{box:u,focus:e}).event().defaultPrevented?this:this.viewbox(u)}}),SVG.extend(SVG.FX,{zoom:function(t,e){return this.add(\"zoom\",new SVG.Number(t),e)}})}();\n},{}]},{},[1]);\n"]}